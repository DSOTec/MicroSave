{"id":"efaeb8d2b8e10bb9883e5f54a0344e48","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC5267.sol)\n\npragma solidity >=0.4.16;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /// @inheritdoc IERC20Permit\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /// @inheritdoc IERC20Permit\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /// @inheritdoc IERC20Permit\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    // slither-disable-next-line constable-states\n    string private _nameFallback;\n    // slither-disable-next-line constable-states\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /// @inheritdoc IERC5267\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {toShortStringWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/interfaces/IRewardVault.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @title IRewardVault\n * @notice Interface for the MicroSave reward points system\n * @dev Manages point allocation and claiming for consistent savers\n */\ninterface IRewardVault {\n    // Events\n    event PointsAwarded(address indexed user, uint256 amount, uint16 streak);\n    event PointsClaimed(address indexed user, uint256 amount);\n\n    // Errors\n    error OnlyPool();\n    error InsufficientPoints();\n    error InvalidAmount();\n\n    /**\n     * @notice Called by SavingsPool on each deposit day\n     * @param user User who made the deposit\n     * @param streak Current streak days\n     */\n    function onDepositDay(address user, uint16 streak) external;\n\n    /**\n     * @notice Claim accumulated points (burns them)\n     * @param amount Amount of points to claim\n     */\n    function claimPoints(uint256 amount) external;\n\n    /**\n     * @notice Get user's current point balance\n     * @param user User address\n     * @return Current point balance\n     */\n    function getPoints(address user) external view returns (uint256);\n\n    // State variables\n    function points(address user) external view returns (uint256);\n    function savingsPool() external view returns (address);\n}\n"},"contracts/interfaces/ISavingsPool.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./IScoreRegistry.sol\";\nimport \"./IRewardVault.sol\";\n\n/**\n * @title ISavingsPool\n * @notice Interface for the core MicroSave savings pool contract\n * @dev Handles stablecoin deposits/withdrawals and integrates with scoring system\n */\ninterface ISavingsPool {\n    // Events\n    event Deposited(address indexed user, uint256 amount, uint256 netAmount, uint40 dayIndex);\n    event Withdrawn(address indexed user, uint256 amount);\n    event ScoreUpdated(address indexed user, uint16 newScore, uint16 streakDays, uint8 freq30);\n    event FeeUpdated(uint16 depositFeeBps);\n    event TreasuryUpdated(address treasury);\n\n    // Errors\n    error InsufficientAmount();\n    error InsufficientBalance();\n    error InvalidToken();\n    error NoPermitSupport();\n    error ZeroAddress();\n    error ExcessiveFee();\n\n    /**\n     * @notice Deposit stablecoin into the savings pool\n     * @param amount Amount to deposit\n     */\n    function deposit(uint256 amount) external;\n\n    /**\n     * @notice Deposit with EIP-2612 permit (gasless approval)\n     * @param amount Amount to deposit\n     * @param deadline Permit deadline\n     * @param v Signature parameter\n     * @param r Signature parameter\n     * @param s Signature parameter\n     */\n    function permitDeposit(\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @notice Withdraw stablecoin from the savings pool\n     * @param amount Amount to withdraw\n     */\n    function withdraw(uint256 amount) external;\n\n    /**\n     * @notice Set deposit fee (only owner)\n     * @param depositFeeBps Fee in basis points (0-100)\n     */\n    function setFeeBps(uint16 depositFeeBps) external;\n\n    /**\n     * @notice Set treasury address (only owner)\n     * @param treasury New treasury address\n     */\n    function setTreasury(address treasury) external;\n\n    // View functions\n    function balances(address user) external view returns (uint256);\n    function totalDeposits() external view returns (uint256);\n    function STABLE() external view returns (IERC20);\n    function scoreRegistry() external view returns (IScoreRegistry);\n    function rewardVault() external view returns (IRewardVault);\n    function treasury() external view returns (address);\n    function depositFeeBps() external view returns (uint16);\n}\n"},"contracts/interfaces/IScoreRegistry.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @title IScoreRegistry\n * @notice Interface for the Savings Consistency Score (SCS) registry\n * @dev Calculates and stores user scores based on deposit frequency and streaks\n */\ninterface IScoreRegistry {\n    // Events\n    event ScoreSet(address indexed user, uint16 score, uint16 streak, uint8 freq30);\n\n    // Errors\n    error OnlyPool();\n    error InvalidUser();\n\n    /**\n     * @notice Update user's savings consistency score\n     * @param user User address\n     * @param userDaysFromPool Array of deposit day indices from the pool\n     * @return newScore Updated score (0-100)\n     * @return newStreak Current streak in days\n     * @return freq30 Frequency in last 30 days\n     */\n    function updateScore(address user, uint40[] calldata userDaysFromPool)\n        external\n        returns (uint16 newScore, uint16 newStreak, uint8 freq30);\n\n    /**\n     * @notice Get user's current score\n     * @param user User address\n     * @return Current savings consistency score\n     */\n    function getUserScore(address user) external view returns (uint16);\n\n    /**\n     * @notice Get user's current streak\n     * @param user User address\n     * @return Current streak in days\n     */\n    function getUserStreak(address user) external view returns (uint16);\n\n    /**\n     * @notice Get user's frequency in last 30 days\n     * @param user User address\n     * @return Deposit frequency in last 30 days\n     */\n    function getUserFreq30(address user) external view returns (uint8);\n\n    /**\n     * @notice Get comprehensive user stats\n     * @param user User address\n     * @return score Current score\n     * @return streak Current streak\n     * @return freq30 Frequency in last 30 days\n     */\n    function getUserStats(address user) external view returns (uint16 score, uint16 streak, uint8 freq30);\n\n    // State variables\n    function score(address user) external view returns (uint16);\n    function streakDays(address user) external view returns (uint16);\n    function savingsPool() external view returns (address);\n}\n"},"contracts/mocks/MockERC20.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title MockERC20\n * @notice Mock ERC20 token with permit functionality for testing MicroSave\n * @dev Includes mint function for easy test setup\n */\ncontract MockERC20 is ERC20, ERC20Permit, Ownable {\n    uint8 private _decimals;\n\n    /**\n     * @notice Constructor\n     * @param name Token name\n     * @param symbol Token symbol\n     * @param decimals_ Token decimals\n     * @param owner Token owner\n     */\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint8 decimals_,\n        address owner\n    ) ERC20(name, symbol) ERC20Permit(name) Ownable(owner) {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @notice Override decimals function\n     * @return Number of decimals\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @notice Mint tokens to an address\n     * @param to Address to mint to\n     * @param amount Amount to mint\n     */\n    function mint(address to, uint256 amount) external onlyOwner {\n        _mint(to, amount);\n    }\n\n    /**\n     * @notice Mint tokens to multiple addresses\n     * @param recipients Array of recipient addresses\n     * @param amounts Array of amounts to mint\n     */\n    function batchMint(address[] calldata recipients, uint256[] calldata amounts) external onlyOwner {\n        require(recipients.length == amounts.length, \"Arrays length mismatch\");\n        \n        for (uint256 i = 0; i < recipients.length; i++) {\n            _mint(recipients[i], amounts[i]);\n        }\n    }\n\n    /**\n     * @notice Burn tokens from an address (for testing)\n     * @param from Address to burn from\n     * @param amount Amount to burn\n     */\n    function burn(address from, uint256 amount) external onlyOwner {\n        _burn(from, amount);\n    }\n\n    /**\n     * @notice Faucet function for easy testing (anyone can call)\n     * @param amount Amount to mint to caller\n     */\n    function faucet(uint256 amount) external {\n        _mint(msg.sender, amount);\n    }\n}\n"},"contracts/RewardVault.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./interfaces/IRewardVault.sol\";\n\n/**\n * @title RewardVault\n * @notice Manages reward points for consistent MicroSave users\n * @dev Awards 5 points per deposit day + 20 bonus points per 7-day streak milestone\n */\ncontract RewardVault is IRewardVault, Ownable {\n    /// @notice Points awarded per deposit day\n    uint256 public constant POINTS_PER_DEPOSIT = 5;\n    \n    /// @notice Bonus points awarded per streak milestone\n    uint256 public constant STREAK_BONUS_POINTS = 20;\n    \n    /// @notice Streak milestone interval (every 7 days)\n    uint256 public constant STREAK_MILESTONE = 7;\n\n    /// @notice Address of the authorized savings pool\n    address public immutable savingsPool;\n\n    /// @notice User point balances\n    mapping(address => uint256) public points;\n\n    /**\n     * @notice Modifier to restrict access to savings pool only\n     */\n    modifier onlyPool() {\n        if (msg.sender != savingsPool) revert OnlyPool();\n        _;\n    }\n\n    /**\n     * @notice Constructor\n     * @param _savingsPool Address of the savings pool contract\n     * @param _owner Address of the contract owner\n     */\n    constructor(address _savingsPool, address _owner) Ownable(_owner) {\n        if (_savingsPool == address(0)) revert OnlyPool();\n        savingsPool = _savingsPool;\n    }\n\n    /**\n     * @notice Called by SavingsPool on each deposit day\n     * @param user User who made the deposit\n     * @param streak Current streak days\n     */\n    function onDepositDay(address user, uint16 streak) external onlyPool {\n        if (user == address(0)) revert InvalidAmount();\n        \n        // Award base points for deposit day\n        uint256 pointsToAward = POINTS_PER_DEPOSIT;\n        \n        // Award streak bonus if milestone reached\n        if (streak > 0 && streak % STREAK_MILESTONE == 0) {\n            pointsToAward += STREAK_BONUS_POINTS;\n        }\n        \n        // Update user points\n        points[user] += pointsToAward;\n        \n        emit PointsAwarded(user, pointsToAward, streak);\n    }\n\n    /**\n     * @notice Claim accumulated points (burns them)\n     * @param amount Amount of points to claim\n     */\n    function claimPoints(uint256 amount) external {\n        if (amount == 0) revert InvalidAmount();\n        if (points[msg.sender] < amount) revert InsufficientPoints();\n        \n        // Burn points (no token transfer in MVP)\n        unchecked {\n            points[msg.sender] -= amount;\n        }\n        \n        emit PointsClaimed(msg.sender, amount);\n    }\n\n    /**\n     * @notice Get user's current point balance\n     * @param user User address\n     * @return Current point balance\n     */\n    function getPoints(address user) external view returns (uint256) {\n        return points[user];\n    }\n}\n"},"contracts/SavingsPool.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"./interfaces/ISavingsPool.sol\";\nimport \"./interfaces/IScoreRegistry.sol\";\nimport \"./interfaces/IRewardVault.sol\";\n\n/**\n * @title SavingsPool\n * @notice Core MicroSave savings pool for stablecoin deposits and withdrawals\n * @dev Integrates with ScoreRegistry for SCS tracking and RewardVault for points\n */\ncontract SavingsPool is ISavingsPool, Ownable, ReentrancyGuard, Pausable {\n    using SafeERC20 for IERC20;\n\n    /// @notice Maximum fee in basis points (1% = 100 bps)\n    uint16 public constant MAX_FEE_BPS = 100;\n\n    /// @notice The stablecoin token used for deposits/withdrawals\n    IERC20 public immutable STABLE;\n\n    /// @notice Score registry contract for SCS calculations\n    IScoreRegistry public immutable scoreRegistry;\n\n    /// @notice Reward vault contract for points (can be zero address)\n    IRewardVault public immutable rewardVault;\n\n    /// @notice Treasury address for fees (can be zero address)\n    address public treasury;\n\n    /// @notice Deposit fee in basis points (0-100)\n    uint16 public depositFeeBps;\n\n    /// @notice User balances in the pool\n    mapping(address => uint256) public balances;\n\n    /// @notice Total deposits in the pool\n    uint256 public totalDeposits;\n\n    /// @notice User deposit days (day indices: block.timestamp / 1 days)\n    mapping(address => uint40[]) private _depositDays;\n\n    /// @notice Last scored day for each user (for edge case handling)\n    mapping(address => uint40) public lastScoredDay;\n\n    /**\n     * @notice Constructor\n     * @param _stablecoin Address of the stablecoin token\n     * @param _scoreRegistry Address of the score registry\n     * @param _rewardVault Address of the reward vault (can be zero)\n     * @param _treasury Address of the treasury (can be zero)\n     * @param _depositFeeBps Initial deposit fee in basis points\n     * @param _owner Address of the contract owner\n     */\n    constructor(\n        address _stablecoin,\n        address _scoreRegistry,\n        address _rewardVault,\n        address _treasury,\n        uint16 _depositFeeBps,\n        address _owner\n    ) Ownable(_owner) {\n        if (_stablecoin == address(0)) revert InvalidToken();\n        if (_scoreRegistry == address(0)) revert ZeroAddress();\n        if (_depositFeeBps > MAX_FEE_BPS) revert ExcessiveFee();\n\n        STABLE = IERC20(_stablecoin);\n        scoreRegistry = IScoreRegistry(_scoreRegistry);\n        rewardVault = IRewardVault(_rewardVault);\n        treasury = _treasury;\n        depositFeeBps = _depositFeeBps;\n    }\n\n    /**\n     * @notice Deposit stablecoin into the savings pool\n     * @param amount Amount to deposit\n     */\n    function deposit(uint256 amount) external nonReentrant whenNotPaused {\n        if (amount == 0) revert InsufficientAmount();\n\n        address user = msg.sender;\n        uint40 today = uint40(block.timestamp / 1 days);\n\n        // Transfer tokens from user\n        STABLE.safeTransferFrom(user, address(this), amount);\n\n        // Calculate fee and net amount\n        uint256 fee = 0;\n        if (depositFeeBps > 0 && treasury != address(0)) {\n            fee = (amount * depositFeeBps) / 10000;\n            if (fee > 0) {\n                STABLE.safeTransfer(treasury, fee);\n            }\n        }\n\n        uint256 netAmount = amount - fee;\n\n        // Update balances\n        balances[user] += netAmount;\n        totalDeposits += netAmount;\n\n        // Record deposit day (only once per day per user)\n        bool isNewDay = _recordDepositDay(user, today);\n\n        // Update score if it's a new deposit day\n        uint16 newScore = 0;\n        uint16 streakDays = 0;\n        uint8 freq30 = 0;\n\n        if (isNewDay) {\n            (newScore, streakDays, freq30) = scoreRegistry.updateScore(user, _depositDays[user]);\n            lastScoredDay[user] = today;\n\n            // Award points if reward vault is set\n            if (address(rewardVault) != address(0)) {\n                try rewardVault.onDepositDay(user, streakDays) {\n                    // Points awarded successfully\n                } catch {\n                    // Continue even if reward fails\n                }\n            }\n\n            emit ScoreUpdated(user, newScore, streakDays, freq30);\n        }\n\n        emit Deposited(user, amount, netAmount, today);\n    }\n\n    /**\n     * @notice Deposit with EIP-2612 permit (gasless approval)\n     * @param amount Amount to deposit\n     * @param deadline Permit deadline\n     * @param v Signature parameter\n     * @param r Signature parameter\n     * @param s Signature parameter\n     */\n    function permitDeposit(\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external nonReentrant whenNotPaused {\n        if (amount == 0) revert InsufficientAmount();\n\n        // Try to call permit - will revert if not supported\n        try IERC20Permit(address(STABLE)).permit(\n            msg.sender,\n            address(this),\n            amount,\n            deadline,\n            v,\n            r,\n            s\n        ) {\n            // Permit successful, proceed with deposit\n            _executeDeposit(msg.sender, amount);\n        } catch {\n            revert NoPermitSupport();\n        }\n    }\n\n    /**\n     * @notice Internal function to execute deposit logic\n     * @param user User address\n     * @param amount Amount to deposit\n     */\n    function _executeDeposit(address user, uint256 amount) private {\n        uint40 today = uint40(block.timestamp / 1 days);\n\n        // Transfer tokens from user\n        STABLE.safeTransferFrom(user, address(this), amount);\n\n        // Calculate fee and net amount\n        uint256 fee = 0;\n        if (depositFeeBps > 0 && treasury != address(0)) {\n            fee = (amount * depositFeeBps) / 10000;\n            if (fee > 0) {\n                STABLE.safeTransfer(treasury, fee);\n            }\n        }\n\n        uint256 netAmount = amount - fee;\n\n        // Update balances\n        balances[user] += netAmount;\n        totalDeposits += netAmount;\n\n        // Record deposit day (only once per day per user)\n        bool isNewDay = _recordDepositDay(user, today);\n\n        // Update score if it's a new deposit day\n        if (isNewDay) {\n            (uint16 newScore, uint16 streakDays, uint8 freq30) = \n                scoreRegistry.updateScore(user, _depositDays[user]);\n            lastScoredDay[user] = today;\n\n            // Award points if reward vault is set\n            if (address(rewardVault) != address(0)) {\n                try rewardVault.onDepositDay(user, streakDays) {\n                    // Points awarded successfully\n                } catch {\n                    // Continue even if reward fails\n                }\n            }\n\n            emit ScoreUpdated(user, newScore, streakDays, freq30);\n        }\n\n        emit Deposited(user, amount, netAmount, today);\n    }\n\n    /**\n     * @notice Withdraw stablecoin from the savings pool\n     * @param amount Amount to withdraw\n     */\n    function withdraw(uint256 amount) external nonReentrant whenNotPaused {\n        if (amount == 0) revert InsufficientAmount();\n        if (balances[msg.sender] < amount) revert InsufficientBalance();\n\n        address user = msg.sender;\n\n        // Update balances\n        unchecked {\n            balances[user] -= amount;\n            totalDeposits -= amount;\n        }\n\n        // Transfer tokens to user\n        STABLE.safeTransfer(user, amount);\n\n        emit Withdrawn(user, amount);\n    }\n\n    /**\n     * @notice Record deposit day for user (prevents duplicates)\n     * @param user User address\n     * @param dayIndex Day index to record\n     * @return isNewDay True if this is a new deposit day\n     */\n    function _recordDepositDay(address user, uint40 dayIndex) private returns (bool isNewDay) {\n        uint40[] storage userDays = _depositDays[user];\n        \n        // Check if day already recorded (assume sorted array)\n        if (userDays.length > 0 && userDays[userDays.length - 1] == dayIndex) {\n            return false; // Same day, not new\n        }\n\n        // Add new day\n        userDays.push(dayIndex);\n        return true;\n    }\n\n    /**\n     * @notice Get user's deposit days (view function)\n     * @param user User address\n     * @return Array of deposit day indices\n     */\n    function getUserDepositDays(address user) external view returns (uint40[] memory) {\n        return _depositDays[user];\n    }\n\n    /**\n     * @notice Get user's deposit count\n     * @param user User address\n     * @return Number of unique deposit days\n     */\n    function getUserDepositCount(address user) external view returns (uint256) {\n        return _depositDays[user].length;\n    }\n\n    /**\n     * @notice Set deposit fee (only owner)\n     * @param _depositFeeBps Fee in basis points (0-100)\n     */\n    function setFeeBps(uint16 _depositFeeBps) external onlyOwner {\n        if (_depositFeeBps > MAX_FEE_BPS) revert ExcessiveFee();\n        depositFeeBps = _depositFeeBps;\n        emit FeeUpdated(_depositFeeBps);\n    }\n\n    /**\n     * @notice Set treasury address (only owner)\n     * @param _treasury New treasury address\n     */\n    function setTreasury(address _treasury) external onlyOwner {\n        treasury = _treasury;\n        emit TreasuryUpdated(_treasury);\n    }\n\n    /**\n     * @notice Pause the contract (only owner)\n     */\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    /**\n     * @notice Unpause the contract (only owner)\n     */\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    /**\n     * @notice Emergency withdraw for owner (only when paused)\n     * @param token Token to withdraw\n     * @param amount Amount to withdraw\n     */\n    function emergencyWithdraw(address token, uint256 amount) external onlyOwner whenPaused {\n        IERC20(token).safeTransfer(owner(), amount);\n    }\n}\n"},"contracts/ScoreRegistry.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./interfaces/IScoreRegistry.sol\";\n\n/**\n * @title ScoreRegistry\n * @notice Calculates and stores Savings Consistency Score (SCS) for MicroSave users\n * @dev Score formula: SCS = min(100, (streakDays * 2) + freq30)\n * @dev Streak: consecutive days with deposits (36h grace period)\n * @dev Frequency: unique deposit days in last 30 days\n */\ncontract ScoreRegistry is IScoreRegistry, Ownable {\n    /// @notice Maximum possible score\n    uint16 public constant MAX_SCORE = 100;\n    \n    /// @notice Grace period for streak continuation (36 hours in seconds)\n    uint256 public constant GRACE_PERIOD = 36 hours;\n    \n    /// @notice Frequency calculation window (30 days)\n    uint256 public constant FREQ_WINDOW = 30 days;\n\n    /// @notice Address of the authorized savings pool\n    address public immutable savingsPool;\n\n    /// @notice User scores (0-100)\n    mapping(address => uint16) public score;\n    \n    /// @notice User streak days\n    mapping(address => uint16) public streakDays;\n\n    /// @notice Last scored day for each user (to handle edge cases)\n    mapping(address => uint40) public lastScoredDay;\n\n    /**\n     * @notice Modifier to restrict access to savings pool only\n     */\n    modifier onlyPool() {\n        if (msg.sender != savingsPool) revert OnlyPool();\n        _;\n    }\n\n    /**\n     * @notice Constructor\n     * @param _savingsPool Address of the savings pool contract\n     * @param _owner Address of the contract owner\n     */\n    constructor(address _savingsPool, address _owner) Ownable(_owner) {\n        if (_savingsPool == address(0)) revert InvalidUser();\n        savingsPool = _savingsPool;\n    }\n\n    /**\n     * @notice Update user's savings consistency score\n     * @param user User address\n     * @param userDaysFromPool Array of deposit day indices from the pool\n     * @return newScore Updated score (0-100)\n     * @return newStreak Current streak in days\n     * @return freq30 Frequency in last 30 days\n     */\n    function updateScore(address user, uint40[] calldata userDaysFromPool)\n        external\n        onlyPool\n        returns (uint16 newScore, uint16 newStreak, uint8 freq30)\n    {\n        if (user == address(0)) revert InvalidUser();\n        \n        uint40 today = uint40(block.timestamp / 1 days);\n        \n        // Calculate frequency (unique days in last 30 days)\n        freq30 = _calculateFrequency(userDaysFromPool, today);\n        \n        // Calculate streak\n        newStreak = _calculateStreak(user, userDaysFromPool, today);\n        \n        // Calculate score: min(100, (streak * 2) + freq30)\n        uint256 calculatedScore = (uint256(newStreak) * 2) + uint256(freq30);\n        newScore = calculatedScore > MAX_SCORE ? MAX_SCORE : uint16(calculatedScore);\n        \n        // Update storage\n        score[user] = newScore;\n        streakDays[user] = newStreak;\n        lastScoredDay[user] = today;\n        \n        emit ScoreSet(user, newScore, newStreak, freq30);\n    }\n\n    /**\n     * @notice Calculate frequency of deposits in last 30 days\n     * @param userDays Array of user's deposit days\n     * @param today Current day index\n     * @return freq Number of unique deposit days in last 30 days\n     */\n    function _calculateFrequency(uint40[] calldata userDays, uint40 today) \n        private \n        pure \n        returns (uint8 freq) \n    {\n        // For testing purposes, we'll use the most recent day from userDays as reference\n        // In production, you might want to use the contract's today calculation\n        if (userDays.length == 0) return 0;\n        \n        uint40 mostRecentDay = userDays[userDays.length - 1];\n        uint40 cutoffDay = mostRecentDay >= 29 ? mostRecentDay - 29 : 0; // 30-day window\n        \n        for (uint256 i = 0; i < userDays.length; i++) {\n            if (userDays[i] >= cutoffDay && userDays[i] <= mostRecentDay) {\n                freq++;\n            }\n        }\n        \n        // Cap at 255 (uint8 max, though practically impossible)\n        return freq > 255 ? 255 : freq;\n    }\n\n    /**\n     * @notice Calculate current streak with 36h grace period\n     * @param userDays Array of user's deposit days\n     * @return streak Current streak in days\n     */\n    function _calculateStreak(address /* user */, uint40[] calldata userDays, uint40 today) \n        private \n        pure \n        returns (uint16 streak) \n    {\n        if (userDays.length == 0) return 0;\n        \n        // Sort is assumed to be handled by the pool (most recent last)\n        uint40 lastDepositDay = userDays[userDays.length - 1];\n        \n        // For testing purposes, we'll simplify the grace period check\n        // In production, you might want more sophisticated grace period logic\n        \n        // Count consecutive days working backwards from the most recent\n        streak = 1; // Count the most recent day\n        uint40 expectedPrevDay = lastDepositDay - 1;\n        \n        // Work backwards through the array\n        for (int256 i = int256(userDays.length) - 2; i >= 0; i--) {\n            uint40 currentDay = userDays[uint256(i)];\n            \n            // Check if this day is consecutive\n            if (currentDay == expectedPrevDay) {\n                streak++;\n                expectedPrevDay = currentDay - 1;\n            } else {\n                // Gap found, streak broken\n                break;\n            }\n        }\n        \n        // Cap streak at uint16 max (practically impossible but safe)\n        return streak > type(uint16).max ? type(uint16).max : streak;\n    }\n\n    /**\n     * @notice Get user's current score\n     * @param user User address\n     * @return Current savings consistency score\n     */\n    function getUserScore(address user) external view returns (uint16) {\n        return score[user];\n    }\n\n    /**\n     * @notice Get user's current streak\n     * @param user User address\n     * @return Current streak in days\n     */\n    function getUserStreak(address user) external view returns (uint16) {\n        return streakDays[user];\n    }\n\n    /**\n     * @notice Get user's frequency in last 30 days\n     * @return Deposit frequency in last 30 days\n     * @dev This is a view function that recalculates from pool data\n     */\n    function getUserFreq30(address /* user */) external pure returns (uint8) {\n        // This would need to be called with current pool data\n        // For now, return 0 as this requires pool integration\n        return 0;\n    }\n\n    /**\n     * @notice Get comprehensive user stats\n     * @param user User address\n     * @return userScore Current score\n     * @return userStreak Current streak\n     * @return freq30 Frequency in last 30 days (simplified)\n     */\n    function getUserStats(address user) \n        external \n        view \n        returns (uint16 userScore, uint16 userStreak, uint8 freq30) \n    {\n        userScore = score[user];\n        userStreak = streakDays[user];\n        freq30 = 0; // Simplified for view function\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ScoreRegistry.sol:95:62:\n   |\n95 |     function _calculateFrequency(uint40[] calldata userDays, uint40 today) \n   |                                                              ^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":3361,"file":"contracts/ScoreRegistry.sol","start":3349},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/ScoreRegistry.sol:122:79:\n    |\n122 |     function _calculateStreak(address /* user */, uint40[] calldata userDays, uint40 today) \n    |                                                                               ^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":4382,"file":"contracts/ScoreRegistry.sol","start":4370},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1702],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1703,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1702,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1702],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[229],"IERC165":[4415],"IERC20":[992]},"id":230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":238,"src":"133:36:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"141:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":234,"src":"170:38:1","symbolAliases":[{"foreign":{"id":152,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"178:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":155,"name":"IERC20","nameLocations":["590:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"590:6:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"590:6:1"},{"baseName":{"id":157,"name":"IERC165","nameLocations":["598:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":4415,"src":"598:7:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"598:7:1"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"210:357:1","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":229,"linearizedBaseContracts":[229,4415,992],"name":"IERC1363","nameLocation":"578:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"1148:370:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":168,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:1","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"to","nameLocation":"1556:2:1","nodeType":"VariableDeclaration","scope":168,"src":"1548:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"value","nameLocation":"1568:5:1","nodeType":"VariableDeclaration","scope":168,"src":"1560:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"1593:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":165,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:1"},"scope":229,"src":"1523:76:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"1605:453:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":180,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:1","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"to","nameLocation":"2096:2:1","nodeType":"VariableDeclaration","scope":180,"src":"2088:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"value","nameLocation":"2108:5:1","nodeType":"VariableDeclaration","scope":180,"src":"2100:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"data","nameLocation":"2130:4:1","nodeType":"VariableDeclaration","scope":180,"src":"2115:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":174,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":180,"src":"2154:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":177,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:1"},"scope":229,"src":"2063:97:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"2166:453:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"from","nameLocation":"2661:4:1","nodeType":"VariableDeclaration","scope":192,"src":"2653:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"to","nameLocation":"2675:2:1","nodeType":"VariableDeclaration","scope":192,"src":"2667:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"value","nameLocation":"2687:5:1","nodeType":"VariableDeclaration","scope":192,"src":"2679:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"2712:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:1"},"scope":229,"src":"2624:94:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"2724:536:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":206,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:1","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"from","nameLocation":"3302:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3294:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"to","nameLocation":"3316:2:1","nodeType":"VariableDeclaration","scope":206,"src":"3308:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"value","nameLocation":"3328:5:1","nodeType":"VariableDeclaration","scope":206,"src":"3320:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"data","nameLocation":"3350:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3335:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":200,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"3374:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:1"},"scope":229,"src":"3265:115:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"3386:390:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:1","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"spender","nameLocation":"3813:7:1","nodeType":"VariableDeclaration","scope":216,"src":"3805:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"value","nameLocation":"3830:5:1","nodeType":"VariableDeclaration","scope":216,"src":"3822:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:1"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":216,"src":"3855:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":213,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:1"},"scope":229,"src":"3781:80:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"3867:478:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":228,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:1","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"spender","nameLocation":"4382:7:1","nodeType":"VariableDeclaration","scope":228,"src":"4374:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"value","nameLocation":"4399:5:1","nodeType":"VariableDeclaration","scope":228,"src":"4391:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"data","nameLocation":"4421:4:1","nodeType":"VariableDeclaration","scope":228,"src":"4406:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":222,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:1"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"4445:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:1"},"scope":229,"src":"4350:101:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":230,"src":"568:3885:1","usedErrors":[],"usedEvents":[926,935]}],"src":"107:4347:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[4415]},"id":234,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":231,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":234,"sourceUnit":4416,"src":"133:59:2","symbolAliases":[{"foreign":{"id":232,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:87:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[992]},"id":238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":235,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"105:25:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":238,"sourceUnit":993,"src":"132:49:3","symbolAliases":[{"foreign":{"id":236,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"140:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:77:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[262]},"id":263,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":239,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"107:25:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":262,"linearizedBaseContracts":[262],"name":"IERC5267","nameLocation":"144:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"159:84:4","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":242,"name":"EIP712DomainChanged","nameLocation":"254:19:4","nodeType":"EventDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[],"src":"273:2:4"},"src":"248:28:4"},{"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"282:140:4","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":261,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"436:12:4","nodeType":"FunctionDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[],"src":"448:2:4"},"returnParameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"fields","nameLocation":"518:6:4","nodeType":"VariableDeclaration","scope":261,"src":"511:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":245,"name":"bytes1","nodeType":"ElementaryTypeName","src":"511:6:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"name","nameLocation":"552:4:4","nodeType":"VariableDeclaration","scope":261,"src":"538:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":247,"name":"string","nodeType":"ElementaryTypeName","src":"538:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":250,"mutability":"mutable","name":"version","nameLocation":"584:7:4","nodeType":"VariableDeclaration","scope":261,"src":"570:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":249,"name":"string","nodeType":"ElementaryTypeName","src":"570:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":252,"mutability":"mutable","name":"chainId","nameLocation":"613:7:4","nodeType":"VariableDeclaration","scope":261,"src":"605:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":251,"name":"uint256","nodeType":"ElementaryTypeName","src":"605:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":254,"mutability":"mutable","name":"verifyingContract","nameLocation":"642:17:4","nodeType":"VariableDeclaration","scope":261,"src":"634:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"salt","nameLocation":"681:4:4","nodeType":"VariableDeclaration","scope":261,"src":"673:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"673:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"extensions","nameLocation":"716:10:4","nodeType":"VariableDeclaration","scope":261,"src":"699:27:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":258,"nodeType":"ArrayTypeName","src":"699:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"497:239:4"},"scope":262,"src":"427:310:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":263,"src":"134:605:4","usedErrors":[],"usedEvents":[242]}],"src":"107:633:4"},"id":4},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[399],"IERC20Errors":[304],"IERC721Errors":[352]},"id":400,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":264,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":265,"nodeType":"StructuredDocumentation","src":"138:141:5","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":304,"linearizedBaseContracts":[304],"name":"IERC20Errors","nameLocation":"290:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":266,"nodeType":"StructuredDocumentation","src":"309:309:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":274,"name":"ERC20InsufficientBalance","nameLocation":"629:24:5","nodeType":"ErrorDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"sender","nameLocation":"662:6:5","nodeType":"VariableDeclaration","scope":274,"src":"654:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"balance","nameLocation":"678:7:5","nodeType":"VariableDeclaration","scope":274,"src":"670:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"needed","nameLocation":"695:6:5","nodeType":"VariableDeclaration","scope":274,"src":"687:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:5"},"src":"623:80:5"},{"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"709:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":279,"name":"ERC20InvalidSender","nameLocation":"872:18:5","nodeType":"ErrorDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"sender","nameLocation":"899:6:5","nodeType":"VariableDeclaration","scope":279,"src":"891:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:5"},"src":"866:41:5"},{"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"913:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":284,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:5","nodeType":"ErrorDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:5","nodeType":"VariableDeclaration","scope":284,"src":"1104:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:5"},"src":"1077:45:5"},{"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"1128:345:5","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":293,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:5","nodeType":"ErrorDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"spender","nameLocation":"1519:7:5","nodeType":"VariableDeclaration","scope":293,"src":"1511:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:5","nodeType":"VariableDeclaration","scope":293,"src":"1528:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":291,"mutability":"mutable","name":"needed","nameLocation":"1555:6:5","nodeType":"VariableDeclaration","scope":293,"src":"1547:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:5"},"src":"1478:85:5"},{"documentation":{"id":294,"nodeType":"StructuredDocumentation","src":"1569:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":298,"name":"ERC20InvalidApprover","nameLocation":"1754:20:5","nodeType":"ErrorDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":296,"mutability":"mutable","name":"approver","nameLocation":"1783:8:5","nodeType":"VariableDeclaration","scope":298,"src":"1775:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":295,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:5"},"src":"1748:45:5"},{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"1799:195:5","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":303,"name":"ERC20InvalidSpender","nameLocation":"2005:19:5","nodeType":"ErrorDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"spender","nameLocation":"2033:7:5","nodeType":"VariableDeclaration","scope":303,"src":"2025:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:5"},"src":"1999:43:5"}],"scope":400,"src":"280:1764:5","usedErrors":[274,279,284,293,298,303],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"2046:143:5","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":352,"linearizedBaseContracts":[352],"name":"IERC721Errors","nameLocation":"2200:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"2220:219:5","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":310,"name":"ERC721InvalidOwner","nameLocation":"2450:18:5","nodeType":"ErrorDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":308,"mutability":"mutable","name":"owner","nameLocation":"2477:5:5","nodeType":"VariableDeclaration","scope":310,"src":"2469:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":307,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:5"},"src":"2444:40:5"},{"documentation":{"id":311,"nodeType":"StructuredDocumentation","src":"2490:132:5","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":315,"name":"ERC721NonexistentToken","nameLocation":"2633:22:5","nodeType":"ErrorDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":313,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:5","nodeType":"VariableDeclaration","scope":315,"src":"2656:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:5"},"src":"2627:46:5"},{"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"2679:289:5","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":324,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:5","nodeType":"ErrorDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"sender","nameLocation":"3008:6:5","nodeType":"VariableDeclaration","scope":324,"src":"3000:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":317,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:5","nodeType":"VariableDeclaration","scope":324,"src":"3016:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":322,"mutability":"mutable","name":"owner","nameLocation":"3041:5:5","nodeType":"VariableDeclaration","scope":324,"src":"3033:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:5"},"src":"2973:75:5"},{"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"3054:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":329,"name":"ERC721InvalidSender","nameLocation":"3217:19:5","nodeType":"ErrorDefinition","parameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"sender","nameLocation":"3245:6:5","nodeType":"VariableDeclaration","scope":329,"src":"3237:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":326,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:5"},"src":"3211:42:5"},{"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"3259:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":334,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:5","nodeType":"ErrorDefinition","parameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:5","nodeType":"VariableDeclaration","scope":334,"src":"3451:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:5"},"src":"3423:46:5"},{"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"3475:247:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":341,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:5","nodeType":"ErrorDefinition","parameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"operator","nameLocation":"3768:8:5","nodeType":"VariableDeclaration","scope":341,"src":"3760:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:5","nodeType":"VariableDeclaration","scope":341,"src":"3778:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":338,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:5"},"src":"3727:68:5"},{"documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"3801:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":346,"name":"ERC721InvalidApprover","nameLocation":"3986:21:5","nodeType":"ErrorDefinition","parameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"approver","nameLocation":"4016:8:5","nodeType":"VariableDeclaration","scope":346,"src":"4008:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:5"},"src":"3980:46:5"},{"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"4032:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":351,"name":"ERC721InvalidOperator","nameLocation":"4240:21:5","nodeType":"ErrorDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"operator","nameLocation":"4270:8:5","nodeType":"VariableDeclaration","scope":351,"src":"4262:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:5"},"src":"4234:46:5"}],"scope":400,"src":"2190:2092:5","usedErrors":[310,315,324,329,334,341,346,351],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":353,"nodeType":"StructuredDocumentation","src":"4284:145:5","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":399,"linearizedBaseContracts":[399],"name":"IERC1155Errors","nameLocation":"4440:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"4461:361:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":364,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:5","nodeType":"ErrorDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"sender","nameLocation":"4868:6:5","nodeType":"VariableDeclaration","scope":364,"src":"4860:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":355,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"balance","nameLocation":"4884:7:5","nodeType":"VariableDeclaration","scope":364,"src":"4876:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":360,"mutability":"mutable","name":"needed","nameLocation":"4901:6:5","nodeType":"VariableDeclaration","scope":364,"src":"4893:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":359,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:5","nodeType":"VariableDeclaration","scope":364,"src":"4909:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":361,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:5"},"src":"4827:99:5"},{"documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"4932:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":369,"name":"ERC1155InvalidSender","nameLocation":"5095:20:5","nodeType":"ErrorDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"sender","nameLocation":"5124:6:5","nodeType":"VariableDeclaration","scope":369,"src":"5116:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:5"},"src":"5089:43:5"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"5138:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":374,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:5","nodeType":"ErrorDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:5","nodeType":"VariableDeclaration","scope":374,"src":"5331:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":371,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:5"},"src":"5302:47:5"},{"documentation":{"id":375,"nodeType":"StructuredDocumentation","src":"5355:256:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":381,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:5","nodeType":"ErrorDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"mutability":"mutable","name":"operator","nameLocation":"5659:8:5","nodeType":"VariableDeclaration","scope":381,"src":"5651:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":376,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":379,"mutability":"mutable","name":"owner","nameLocation":"5677:5:5","nodeType":"VariableDeclaration","scope":381,"src":"5669:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:5"},"src":"5616:68:5"},{"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"5690:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":386,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:5","nodeType":"ErrorDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"approver","nameLocation":"5906:8:5","nodeType":"VariableDeclaration","scope":386,"src":"5898:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:5"},"src":"5869:47:5"},{"documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"5922:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":391,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:5","nodeType":"ErrorDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"mutability":"mutable","name":"operator","nameLocation":"6161:8:5","nodeType":"VariableDeclaration","scope":391,"src":"6153:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":388,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:5"},"src":"6124:47:5"},{"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"6177:280:5","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":398,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:5","nodeType":"ErrorDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:5","nodeType":"VariableDeclaration","scope":398,"src":"6494:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:5","nodeType":"VariableDeclaration","scope":398,"src":"6513:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":395,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:5"},"src":"6462:73:5"}],"scope":400,"src":"4430:2107:5","usedErrors":[364,369,374,381,386,391,398],"usedEvents":[]}],"src":"112:6426:5"},"id":5},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1702],"ERC20":[914],"IERC20":[992],"IERC20Errors":[304],"IERC20Metadata":[1172]},"id":915,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":401,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":403,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":915,"sourceUnit":993,"src":"131:36:6","symbolAliases":[{"foreign":{"id":402,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"139:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":915,"sourceUnit":1173,"src":"168:63:6","symbolAliases":[{"foreign":{"id":404,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"176:14:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":915,"sourceUnit":1703,"src":"232:48:6","symbolAliases":[{"foreign":{"id":406,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"240:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":409,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":915,"sourceUnit":400,"src":"281:65:6","symbolAliases":[{"foreign":{"id":408,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"289:12:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":411,"name":"Context","nameLocations":["1133:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1702,"src":"1133:7:6"},"id":412,"nodeType":"InheritanceSpecifier","src":"1133:7:6"},{"baseName":{"id":413,"name":"IERC20","nameLocations":["1142:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"1142:6:6"},"id":414,"nodeType":"InheritanceSpecifier","src":"1142:6:6"},{"baseName":{"id":415,"name":"IERC20Metadata","nameLocations":["1150:14:6"],"nodeType":"IdentifierPath","referencedDeclaration":1172,"src":"1150:14:6"},"id":416,"nodeType":"InheritanceSpecifier","src":"1150:14:6"},{"baseName":{"id":417,"name":"IERC20Errors","nameLocations":["1166:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":304,"src":"1166:12:6"},"id":418,"nodeType":"InheritanceSpecifier","src":"1166:12:6"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"348:757:6","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":914,"linearizedBaseContracts":[914,304,1172,992,1702],"name":"ERC20","nameLocation":"1124:5:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":422,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:6","nodeType":"VariableDeclaration","scope":914,"src":"1185:53:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":421,"keyName":"account","keyNameLocation":"1201:7:6","keyType":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":420,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":428,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:6","nodeType":"VariableDeclaration","scope":914,"src":"1245:83:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":427,"keyName":"account","keyNameLocation":"1261:7:6","keyType":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":426,"keyName":"spender","keyNameLocation":"1288:7:6","keyType":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":425,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":430,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:6","nodeType":"VariableDeclaration","scope":914,"src":"1335:28:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":432,"mutability":"mutable","name":"_name","nameLocation":"1385:5:6","nodeType":"VariableDeclaration","scope":914,"src":"1370:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":431,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":434,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:6","nodeType":"VariableDeclaration","scope":914,"src":"1396:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":433,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":450,"nodeType":"Block","src":"1638:57:6","statements":[{"expression":{"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":442,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"1648:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":443,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"1656:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":445,"nodeType":"ExpressionStatement","src":"1648:13:6"},{"expression":{"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":446,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"1671:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":447,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"1681:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":449,"nodeType":"ExpressionStatement","src":"1671:17:6"}]},"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"1425:152:6","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":451,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"name_","nameLocation":"1608:5:6","nodeType":"VariableDeclaration","scope":451,"src":"1594:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":436,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:6","nodeType":"VariableDeclaration","scope":451,"src":"1615:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":438,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:6"},"returnParameters":{"id":441,"nodeType":"ParameterList","parameters":[],"src":"1638:0:6"},"scope":914,"src":"1582:113:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1159],"body":{"id":459,"nodeType":"Block","src":"1820:29:6","statements":[{"expression":{"id":457,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"1837:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":456,"id":458,"nodeType":"Return","src":"1830:12:6"}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"1701:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":460,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:6","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[],"src":"1773:2:6"},"returnParameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":460,"src":"1805:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":454,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:6"},"scope":914,"src":"1760:89:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1165],"body":{"id":468,"nodeType":"Block","src":"2024:31:6","statements":[{"expression":{"id":466,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"2041:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":465,"id":467,"nodeType":"Return","src":"2034:14:6"}]},"documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"1855:102:6","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":469,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:6","nodeType":"FunctionDefinition","parameters":{"id":462,"nodeType":"ParameterList","parameters":[],"src":"1977:2:6"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":469,"src":"2009:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":463,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:6"},"scope":914,"src":"1962:93:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1171],"body":{"id":477,"nodeType":"Block","src":"2744:26:6","statements":[{"expression":{"hexValue":"3138","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":474,"id":476,"nodeType":"Return","src":"2754:9:6"}]},"documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"2061:622:6","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":478,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:6","nodeType":"FunctionDefinition","parameters":{"id":471,"nodeType":"ParameterList","parameters":[],"src":"2705:2:6"},"returnParameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":478,"src":"2737:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":472,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:6"},"scope":914,"src":"2688:82:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[941],"body":{"id":486,"nodeType":"Block","src":"2864:36:6","statements":[{"expression":{"id":484,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"2881:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":483,"id":485,"nodeType":"Return","src":"2874:19:6"}]},"documentation":{"id":479,"nodeType":"StructuredDocumentation","src":"2776:22:6","text":"@inheritdoc IERC20"},"functionSelector":"18160ddd","id":487,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2812:11:6","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[],"src":"2823:2:6"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":487,"src":"2855:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:9:6"},"scope":914,"src":"2803:97:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[949],"body":{"id":499,"nodeType":"Block","src":"3007:42:6","statements":[{"expression":{"baseExpression":{"id":495,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"3024:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":497,"indexExpression":{"id":496,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"3034:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3024:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":494,"id":498,"nodeType":"Return","src":"3017:25:6"}]},"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"2906:22:6","text":"@inheritdoc IERC20"},"functionSelector":"70a08231","id":500,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2942:9:6","nodeType":"FunctionDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"mutability":"mutable","name":"account","nameLocation":"2960:7:6","nodeType":"VariableDeclaration","scope":500,"src":"2952:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"2952:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2951:17:6"},"returnParameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":500,"src":"2998:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"2998:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2997:9:6"},"scope":914,"src":"2933:116:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[959],"body":{"id":523,"nodeType":"Block","src":"3319:103:6","statements":[{"assignments":[511],"declarations":[{"constant":false,"id":511,"mutability":"mutable","name":"owner","nameLocation":"3337:5:6","nodeType":"VariableDeclaration","scope":523,"src":"3329:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"3329:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":514,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":512,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"3345:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3345:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3329:28:6"},{"expression":{"arguments":[{"id":516,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"3377:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":517,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"3384:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"3388:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":515,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"3367:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3367:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":520,"nodeType":"ExpressionStatement","src":"3367:27:6"},{"expression":{"hexValue":"74727565","id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3411:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":509,"id":522,"nodeType":"Return","src":"3404:11:6"}]},"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"3055:184:6","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":524,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3253:8:6","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"to","nameLocation":"3270:2:6","nodeType":"VariableDeclaration","scope":524,"src":"3262:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"3262:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"value","nameLocation":"3282:5:6","nodeType":"VariableDeclaration","scope":524,"src":"3274:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":504,"name":"uint256","nodeType":"ElementaryTypeName","src":"3274:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3261:27:6"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":524,"src":"3313:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":507,"name":"bool","nodeType":"ElementaryTypeName","src":"3313:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3312:6:6"},"scope":914,"src":"3244:178:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[969],"body":{"id":540,"nodeType":"Block","src":"3544:51:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":534,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"3561:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":536,"indexExpression":{"id":535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"3573:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":538,"indexExpression":{"id":537,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3580:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":533,"id":539,"nodeType":"Return","src":"3554:34:6"}]},"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"3428:22:6","text":"@inheritdoc IERC20"},"functionSelector":"dd62ed3e","id":541,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3464:9:6","nodeType":"FunctionDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"owner","nameLocation":"3482:5:6","nodeType":"VariableDeclaration","scope":541,"src":"3474:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"spender","nameLocation":"3497:7:6","nodeType":"VariableDeclaration","scope":541,"src":"3489:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"3489:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3473:32:6"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":541,"src":"3535:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":531,"name":"uint256","nodeType":"ElementaryTypeName","src":"3535:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3534:9:6"},"scope":914,"src":"3455:140:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[979],"body":{"id":564,"nodeType":"Block","src":"3981:107:6","statements":[{"assignments":[552],"declarations":[{"constant":false,"id":552,"mutability":"mutable","name":"owner","nameLocation":"3999:5:6","nodeType":"VariableDeclaration","scope":564,"src":"3991:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"3991:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":555,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":553,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"4007:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3991:28:6"},{"expression":{"arguments":[{"id":557,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"4038:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":558,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"4045:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"4054:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":556,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[805,865],"referencedDeclaration":805,"src":"4029:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4029:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":561,"nodeType":"ExpressionStatement","src":"4029:31:6"},{"expression":{"hexValue":"74727565","id":562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4077:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":550,"id":563,"nodeType":"Return","src":"4070:11:6"}]},"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"3601:296:6","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":565,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3911:7:6","nodeType":"FunctionDefinition","parameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"spender","nameLocation":"3927:7:6","nodeType":"VariableDeclaration","scope":565,"src":"3919:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"3919:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":546,"mutability":"mutable","name":"value","nameLocation":"3944:5:6","nodeType":"VariableDeclaration","scope":565,"src":"3936:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"3936:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3918:32:6"},"returnParameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":565,"src":"3975:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":548,"name":"bool","nodeType":"ElementaryTypeName","src":"3975:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3974:6:6"},"scope":914,"src":"3902:186:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[991],"body":{"id":596,"nodeType":"Block","src":"4773:151:6","statements":[{"assignments":[578],"declarations":[{"constant":false,"id":578,"mutability":"mutable","name":"spender","nameLocation":"4791:7:6","nodeType":"VariableDeclaration","scope":596,"src":"4783:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":577,"name":"address","nodeType":"ElementaryTypeName","src":"4783:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":581,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":579,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"4801:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4801:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4783:30:6"},{"expression":{"arguments":[{"id":583,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4839:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":584,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"4845:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"4854:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":582,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"4823:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":587,"nodeType":"ExpressionStatement","src":"4823:37:6"},{"expression":{"arguments":[{"id":589,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4880:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":590,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4886:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"4890:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":588,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"4870:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4870:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":593,"nodeType":"ExpressionStatement","src":"4870:26:6"},{"expression":{"hexValue":"74727565","id":594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4913:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":576,"id":595,"nodeType":"Return","src":"4906:11:6"}]},"documentation":{"id":566,"nodeType":"StructuredDocumentation","src":"4094:581:6","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":597,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4689:12:6","nodeType":"FunctionDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"from","nameLocation":"4710:4:6","nodeType":"VariableDeclaration","scope":597,"src":"4702:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"4702:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"to","nameLocation":"4724:2:6","nodeType":"VariableDeclaration","scope":597,"src":"4716:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"4716:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"value","nameLocation":"4736:5:6","nodeType":"VariableDeclaration","scope":597,"src":"4728:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":571,"name":"uint256","nodeType":"ElementaryTypeName","src":"4728:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:41:6"},"returnParameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":597,"src":"4767:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":574,"name":"bool","nodeType":"ElementaryTypeName","src":"4767:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4766:6:6"},"scope":914,"src":"4680:244:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":643,"nodeType":"Block","src":"5366:231:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":607,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5380:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5396:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5388:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:6","typeDescriptions":{}}},"id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5388:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5380:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":621,"nodeType":"IfStatement","src":"5376:86:6","trueBody":{"id":620,"nodeType":"Block","src":"5400:62:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5448:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5440:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"5440:7:6","typeDescriptions":{}}},"id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5440:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":613,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"5421:18:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":619,"nodeType":"RevertStatement","src":"5414:37:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":622,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5475:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5489:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5481:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"5481:7:6","typeDescriptions":{}}},"id":626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5481:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5475:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":636,"nodeType":"IfStatement","src":"5471:86:6","trueBody":{"id":635,"nodeType":"Block","src":"5493:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5543:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5535:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"5535:7:6","typeDescriptions":{}}},"id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":628,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"5514:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5514:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":634,"nodeType":"RevertStatement","src":"5507:39:6"}]}},{"expression":{"arguments":[{"id":638,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5574:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5580:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"5584:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":637,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"5566:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5566:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":642,"nodeType":"ExpressionStatement","src":"5566:24:6"}]},"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"4930:362:6","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":644,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5306:9:6","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"from","nameLocation":"5324:4:6","nodeType":"VariableDeclaration","scope":644,"src":"5316:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"to","nameLocation":"5338:2:6","nodeType":"VariableDeclaration","scope":644,"src":"5330:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"5330:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"value","nameLocation":"5350:5:6","nodeType":"VariableDeclaration","scope":644,"src":"5342:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"5342:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5315:41:6"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[],"src":"5366:0:6"},"scope":914,"src":"5297:300:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":720,"nodeType":"Block","src":"5987:1032:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":654,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6001:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6017:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6009:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"6009:7:6","typeDescriptions":{}}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6009:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6001:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":691,"nodeType":"Block","src":"6175:362:6","statements":[{"assignments":[666],"declarations":[{"constant":false,"id":666,"mutability":"mutable","name":"fromBalance","nameLocation":"6197:11:6","nodeType":"VariableDeclaration","scope":691,"src":"6189:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"6189:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":670,"initialValue":{"baseExpression":{"id":667,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"6211:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":669,"indexExpression":{"id":668,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6221:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6211:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6189:37:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":671,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6244:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6258:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6244:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":681,"nodeType":"IfStatement","src":"6240:115:6","trueBody":{"id":680,"nodeType":"Block","src":"6265:90:6","statements":[{"errorCall":{"arguments":[{"id":675,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6315:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":676,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6321:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6334:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":674,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"6290:24:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6290:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":679,"nodeType":"RevertStatement","src":"6283:57:6"}]}},{"id":690,"nodeType":"UncheckedBlock","src":"6368:159:6","statements":[{"expression":{"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":682,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"6475:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":684,"indexExpression":{"id":683,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6485:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6475:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":685,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"6493:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6507:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6493:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":689,"nodeType":"ExpressionStatement","src":"6475:37:6"}]}]},"id":692,"nodeType":"IfStatement","src":"5997:540:6","trueBody":{"id":664,"nodeType":"Block","src":"6021:148:6","statements":[{"expression":{"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":660,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"6137:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6153:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6137:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":663,"nodeType":"ExpressionStatement","src":"6137:21:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":693,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"6551:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6565:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6557:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"6557:7:6","typeDescriptions":{}}},"id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6557:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6551:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":712,"nodeType":"Block","src":"6766:206:6","statements":[{"id":711,"nodeType":"UncheckedBlock","src":"6780:182:6","statements":[{"expression":{"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":705,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"6925:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":707,"indexExpression":{"id":706,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"6935:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6925:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6942:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6925:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":710,"nodeType":"ExpressionStatement","src":"6925:22:6"}]}]},"id":713,"nodeType":"IfStatement","src":"6547:425:6","trueBody":{"id":704,"nodeType":"Block","src":"6569:191:6","statements":[{"id":703,"nodeType":"UncheckedBlock","src":"6583:167:6","statements":[{"expression":{"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":699,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"6714:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6730:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6714:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":702,"nodeType":"ExpressionStatement","src":"6714:21:6"}]}]}},{"eventCall":{"arguments":[{"id":715,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6996:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":716,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"7002:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"7006:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":714,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"6987:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6987:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"EmitStatement","src":"6982:30:6"}]},"documentation":{"id":645,"nodeType":"StructuredDocumentation","src":"5603:304:6","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":721,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5921:7:6","nodeType":"FunctionDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"from","nameLocation":"5937:4:6","nodeType":"VariableDeclaration","scope":721,"src":"5929:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"5929:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"to","nameLocation":"5951:2:6","nodeType":"VariableDeclaration","scope":721,"src":"5943:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"5943:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"value","nameLocation":"5963:5:6","nodeType":"VariableDeclaration","scope":721,"src":"5955:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"5955:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5928:41:6"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[],"src":"5987:0:6"},"scope":914,"src":"5912:1107:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":753,"nodeType":"Block","src":"7418:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":729,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"7432:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7451:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7443:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":730,"name":"address","nodeType":"ElementaryTypeName","src":"7443:7:6","typeDescriptions":{}}},"id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7443:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7432:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":743,"nodeType":"IfStatement","src":"7428:91:6","trueBody":{"id":742,"nodeType":"Block","src":"7455:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7505:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7497:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"7497:7:6","typeDescriptions":{}}},"id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7497:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":735,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"7476:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7476:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":741,"nodeType":"RevertStatement","src":"7469:39:6"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7544:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7536:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"7536:7:6","typeDescriptions":{}}},"id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7536:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":749,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"7548:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"7557:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":744,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"7528:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7528:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":752,"nodeType":"ExpressionStatement","src":"7528:35:6"}]},"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"7025:332:6","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":754,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7371:5:6","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"account","nameLocation":"7385:7:6","nodeType":"VariableDeclaration","scope":754,"src":"7377:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"7377:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"value","nameLocation":"7402:5:6","nodeType":"VariableDeclaration","scope":754,"src":"7394:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":725,"name":"uint256","nodeType":"ElementaryTypeName","src":"7394:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7376:32:6"},"returnParameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"7418:0:6"},"scope":914,"src":"7362:208:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":786,"nodeType":"Block","src":"7944:150:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":762,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"7958:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7977:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7969:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"7969:7:6","typeDescriptions":{}}},"id":766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7969:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7958:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":776,"nodeType":"IfStatement","src":"7954:89:6","trueBody":{"id":775,"nodeType":"Block","src":"7981:62:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8029:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8021:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"8021:7:6","typeDescriptions":{}}},"id":772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":768,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"8002:18:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8002:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":774,"nodeType":"RevertStatement","src":"7995:37:6"}]}},{"expression":{"arguments":[{"id":778,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"8060:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8077:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8069:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"8069:7:6","typeDescriptions":{}}},"id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"8081:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":777,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"8052:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":785,"nodeType":"ExpressionStatement","src":"8052:35:6"}]},"documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"7576:307:6","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":787,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7897:5:6","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"account","nameLocation":"7911:7:6","nodeType":"VariableDeclaration","scope":787,"src":"7903:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"7903:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"value","nameLocation":"7928:5:6","nodeType":"VariableDeclaration","scope":787,"src":"7920:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"7920:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7902:32:6"},"returnParameters":{"id":761,"nodeType":"ParameterList","parameters":[],"src":"7944:0:6"},"scope":914,"src":"7888:206:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":804,"nodeType":"Block","src":"8704:54:6","statements":[{"expression":{"arguments":[{"id":798,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"8723:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":799,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"8730:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"8739:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8746:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":797,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[805,865],"referencedDeclaration":865,"src":"8714:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8714:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":803,"nodeType":"ExpressionStatement","src":"8714:37:6"}]},"documentation":{"id":788,"nodeType":"StructuredDocumentation","src":"8100:525:6","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":805,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8639:8:6","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":790,"mutability":"mutable","name":"owner","nameLocation":"8656:5:6","nodeType":"VariableDeclaration","scope":805,"src":"8648:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"8648:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":792,"mutability":"mutable","name":"spender","nameLocation":"8671:7:6","nodeType":"VariableDeclaration","scope":805,"src":"8663:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"value","nameLocation":"8688:5:6","nodeType":"VariableDeclaration","scope":805,"src":"8680:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":793,"name":"uint256","nodeType":"ElementaryTypeName","src":"8680:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8647:47:6"},"returnParameters":{"id":796,"nodeType":"ParameterList","parameters":[],"src":"8704:0:6"},"scope":914,"src":"8630:128:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":864,"nodeType":"Block","src":"9703:334:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":817,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"9717:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9734:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9726:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"9726:7:6","typeDescriptions":{}}},"id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9726:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9717:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":831,"nodeType":"IfStatement","src":"9713:89:6","trueBody":{"id":830,"nodeType":"Block","src":"9738:64:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9788:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"9780:7:6","typeDescriptions":{}}},"id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":823,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"9759:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9759:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":829,"nodeType":"RevertStatement","src":"9752:39:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":832,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"9815:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9834:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9826:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"9826:7:6","typeDescriptions":{}}},"id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9826:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9815:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":846,"nodeType":"IfStatement","src":"9811:90:6","trueBody":{"id":845,"nodeType":"Block","src":"9838:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9887:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9879:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"9879:7:6","typeDescriptions":{}}},"id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9879:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":838,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"9859:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9859:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":844,"nodeType":"RevertStatement","src":"9852:38:6"}]}},{"expression":{"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":847,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"9910:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":850,"indexExpression":{"id":848,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"9922:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9910:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":851,"indexExpression":{"id":849,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"9929:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9910:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"9940:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9910:35:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":854,"nodeType":"ExpressionStatement","src":"9910:35:6"},{"condition":{"id":855,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"9959:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":863,"nodeType":"IfStatement","src":"9955:76:6","trueBody":{"id":862,"nodeType":"Block","src":"9970:61:6","statements":[{"eventCall":{"arguments":[{"id":857,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"9998:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":858,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"10005:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"10014:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":856,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"9989:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9989:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":861,"nodeType":"EmitStatement","src":"9984:36:6"}]}}]},"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"8764:836:6","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":865,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9614:8:6","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"owner","nameLocation":"9631:5:6","nodeType":"VariableDeclaration","scope":865,"src":"9623:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"9623:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":810,"mutability":"mutable","name":"spender","nameLocation":"9646:7:6","nodeType":"VariableDeclaration","scope":865,"src":"9638:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"9638:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"value","nameLocation":"9663:5:6","nodeType":"VariableDeclaration","scope":865,"src":"9655:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint256","nodeType":"ElementaryTypeName","src":"9655:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"emitEvent","nameLocation":"9675:9:6","nodeType":"VariableDeclaration","scope":865,"src":"9670:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":813,"name":"bool","nodeType":"ElementaryTypeName","src":"9670:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9622:63:6"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"9703:0:6"},"scope":914,"src":"9605:432:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":912,"nodeType":"Block","src":"10408:387:6","statements":[{"assignments":[876],"declarations":[{"constant":false,"id":876,"mutability":"mutable","name":"currentAllowance","nameLocation":"10426:16:6","nodeType":"VariableDeclaration","scope":912,"src":"10418:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":875,"name":"uint256","nodeType":"ElementaryTypeName","src":"10418:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":881,"initialValue":{"arguments":[{"id":878,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"10455:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":879,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"10462:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":877,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"10445:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10445:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10418:52:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":882,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10484:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10508:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":884,"name":"uint256","nodeType":"ElementaryTypeName","src":"10508:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":883,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10503:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10503:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10517:3:6","memberName":"max","nodeType":"MemberAccess","src":"10503:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10484:36:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":911,"nodeType":"IfStatement","src":"10480:309:6","trueBody":{"id":910,"nodeType":"Block","src":"10522:267:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":889,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10540:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"10559:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10540:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":899,"nodeType":"IfStatement","src":"10536:130:6","trueBody":{"id":898,"nodeType":"Block","src":"10566:100:6","statements":[{"errorCall":{"arguments":[{"id":893,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"10618:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":894,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10627:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"10645:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":892,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"10591:26:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10591:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":897,"nodeType":"RevertStatement","src":"10584:67:6"}]}},{"id":909,"nodeType":"UncheckedBlock","src":"10679:100:6","statements":[{"expression":{"arguments":[{"id":901,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"10716:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":902,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"10723:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":903,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10732:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"10751:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10732:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10758:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":900,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[805,865],"referencedDeclaration":865,"src":"10707:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10707:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":908,"nodeType":"ExpressionStatement","src":"10707:57:6"}]}]}}]},"documentation":{"id":866,"nodeType":"StructuredDocumentation","src":"10043:271:6","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":913,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10328:15:6","nodeType":"FunctionDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"mutability":"mutable","name":"owner","nameLocation":"10352:5:6","nodeType":"VariableDeclaration","scope":913,"src":"10344:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"10344:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":870,"mutability":"mutable","name":"spender","nameLocation":"10367:7:6","nodeType":"VariableDeclaration","scope":913,"src":"10359:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"10359:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"value","nameLocation":"10384:5:6","nodeType":"VariableDeclaration","scope":913,"src":"10376:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":871,"name":"uint256","nodeType":"ElementaryTypeName","src":"10376:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10343:47:6"},"returnParameters":{"id":874,"nodeType":"ParameterList","parameters":[],"src":"10408:0:6"},"scope":914,"src":"10319:476:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":915,"src":"1106:9691:6","usedErrors":[274,279,284,293,298,303],"usedEvents":[926,935]}],"src":"105:10693:6"},"id":6},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[992]},"id":993,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":916,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":917,"nodeType":"StructuredDocumentation","src":"133:71:7","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":992,"linearizedBaseContracts":[992],"name":"IERC20","nameLocation":"215:6:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"228:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":926,"name":"Transfer","nameLocation":"397:8:7","nodeType":"EventDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:7","nodeType":"VariableDeclaration","scope":926,"src":"406:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":922,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:7","nodeType":"VariableDeclaration","scope":926,"src":"428:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":924,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:7","nodeType":"VariableDeclaration","scope":926,"src":"448:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:7"},"src":"391:72:7"},{"anonymous":false,"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"469:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":935,"name":"Approval","nameLocation":"628:8:7","nodeType":"EventDefinition","parameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:7","nodeType":"VariableDeclaration","scope":935,"src":"637:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":931,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:7","nodeType":"VariableDeclaration","scope":935,"src":"660:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":933,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:7","nodeType":"VariableDeclaration","scope":935,"src":"685:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":932,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:7"},"src":"622:78:7"},{"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"706:65:7","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":941,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:7","nodeType":"FunctionDefinition","parameters":{"id":937,"nodeType":"ParameterList","parameters":[],"src":"796:2:7"},"returnParameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":941,"src":"822:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:7"},"scope":992,"src":"776:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":942,"nodeType":"StructuredDocumentation","src":"837:71:7","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":949,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:7","nodeType":"FunctionDefinition","parameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"account","nameLocation":"940:7:7","nodeType":"VariableDeclaration","scope":949,"src":"932:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":943,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:7"},"returnParameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":949,"src":"972:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:7"},"scope":992,"src":"913:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"987:213:7","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":959,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:7","nodeType":"FunctionDefinition","parameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"to","nameLocation":"1231:2:7","nodeType":"VariableDeclaration","scope":959,"src":"1223:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":951,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":954,"mutability":"mutable","name":"value","nameLocation":"1243:5:7","nodeType":"VariableDeclaration","scope":959,"src":"1235:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:7"},"returnParameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":959,"src":"1268:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":956,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:7"},"scope":992,"src":"1205:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":960,"nodeType":"StructuredDocumentation","src":"1280:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":969,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:7","nodeType":"FunctionDefinition","parameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"owner","nameLocation":"1576:5:7","nodeType":"VariableDeclaration","scope":969,"src":"1568:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":961,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"spender","nameLocation":"1591:7:7","nodeType":"VariableDeclaration","scope":969,"src":"1583:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:7"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":969,"src":"1623:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:7"},"scope":992,"src":"1549:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":970,"nodeType":"StructuredDocumentation","src":"1638:667:7","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":979,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:7","nodeType":"FunctionDefinition","parameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"mutability":"mutable","name":"spender","nameLocation":"2335:7:7","nodeType":"VariableDeclaration","scope":979,"src":"2327:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":974,"mutability":"mutable","name":"value","nameLocation":"2352:5:7","nodeType":"VariableDeclaration","scope":979,"src":"2344:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:7"},"returnParameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":979,"src":"2377:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":976,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:7"},"scope":992,"src":"2310:73:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":980,"nodeType":"StructuredDocumentation","src":"2389:297:7","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":991,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:7","nodeType":"FunctionDefinition","parameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"from","nameLocation":"2721:4:7","nodeType":"VariableDeclaration","scope":991,"src":"2713:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"to","nameLocation":"2735:2:7","nodeType":"VariableDeclaration","scope":991,"src":"2727:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"value","nameLocation":"2747:5:7","nodeType":"VariableDeclaration","scope":991,"src":"2739:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":985,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:7"},"returnParameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":991,"src":"2772:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":988,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:7"},"scope":992,"src":"2691:87:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":993,"src":"205:2575:7","usedErrors":[],"usedEvents":[926,935]}],"src":"106:2675:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[4090],"EIP712":[4317],"ERC20":[914],"ERC20Permit":[1146],"IERC20Permit":[1208],"Nonces":[1770]},"id":1147,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":994,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":996,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1147,"sourceUnit":1209,"src":"148:48:8","symbolAliases":[{"foreign":{"id":995,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"156:12:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":998,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1147,"sourceUnit":915,"src":"197:35:8","symbolAliases":[{"foreign":{"id":997,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"205:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1000,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1147,"sourceUnit":4091,"src":"233:60:8","symbolAliases":[{"foreign":{"id":999,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"241:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1002,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1147,"sourceUnit":4318,"src":"294:62:8","symbolAliases":[{"foreign":{"id":1001,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"302:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":1004,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1147,"sourceUnit":1771,"src":"357:49:8","symbolAliases":[{"foreign":{"id":1003,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"365:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1006,"name":"ERC20","nameLocations":["931:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":914,"src":"931:5:8"},"id":1007,"nodeType":"InheritanceSpecifier","src":"931:5:8"},{"baseName":{"id":1008,"name":"IERC20Permit","nameLocations":["938:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1208,"src":"938:12:8"},"id":1009,"nodeType":"InheritanceSpecifier","src":"938:12:8"},{"baseName":{"id":1010,"name":"EIP712","nameLocations":["952:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":4317,"src":"952:6:8"},"id":1011,"nodeType":"InheritanceSpecifier","src":"952:6:8"},{"baseName":{"id":1012,"name":"Nonces","nameLocations":["960:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1770,"src":"960:6:8"},"id":1013,"nodeType":"InheritanceSpecifier","src":"960:6:8"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1005,"nodeType":"StructuredDocumentation","src":"408:489:8","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1146,"linearizedBaseContracts":[1146,1770,4317,262,1208,914,304,1172,992,1702],"name":"ERC20Permit","nameLocation":"916:11:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1018,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"998:15:8","nodeType":"VariableDeclaration","scope":1146,"src":"973:146:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1014,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1034:84:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1015,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1024:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:95:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1019,"nodeType":"StructuredDocumentation","src":"1126:52:8","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1023,"name":"ERC2612ExpiredSignature","nameLocation":"1189:23:8","nodeType":"ErrorDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"deadline","nameLocation":"1221:8:8","nodeType":"VariableDeclaration","scope":1023,"src":"1213:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1212:18:8"},"src":"1183:48:8"},{"documentation":{"id":1024,"nodeType":"StructuredDocumentation","src":"1237:45:8","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1030,"name":"ERC2612InvalidSigner","nameLocation":"1293:20:8","nodeType":"ErrorDefinition","parameters":{"id":1029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"signer","nameLocation":"1322:6:8","nodeType":"VariableDeclaration","scope":1030,"src":"1314:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1028,"mutability":"mutable","name":"owner","nameLocation":"1338:5:8","nodeType":"VariableDeclaration","scope":1030,"src":"1330:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1027,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1313:31:8"},"src":"1287:58:8"},{"body":{"id":1040,"nodeType":"Block","src":"1627:2:8","statements":[]},"documentation":{"id":1031,"nodeType":"StructuredDocumentation","src":"1351:221:8","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":1041,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1036,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"1616:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1038,"kind":"baseConstructorSpecifier","modifierName":{"id":1035,"name":"EIP712","nameLocations":["1609:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":4317,"src":"1609:6:8"},"nodeType":"ModifierInvocation","src":"1609:17:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"name","nameLocation":"1603:4:8","nodeType":"VariableDeclaration","scope":1041,"src":"1589:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1032,"name":"string","nodeType":"ElementaryTypeName","src":"1589:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1588:20:8"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[],"src":"1627:0:8"},"scope":1146,"src":"1577:52:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1193],"body":{"id":1117,"nodeType":"Block","src":"1857:483:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1059,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1871:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1877:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"1871:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1061,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"1889:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1871:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1068,"nodeType":"IfStatement","src":"1867:97:8","trueBody":{"id":1067,"nodeType":"Block","src":"1899:65:8","statements":[{"errorCall":{"arguments":[{"id":1064,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"1944:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1063,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"1920:23:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1920:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1066,"nodeType":"RevertStatement","src":"1913:40:8"}]}},{"assignments":[1070],"declarations":[{"constant":false,"id":1070,"mutability":"mutable","name":"structHash","nameLocation":"1982:10:8","nodeType":"VariableDeclaration","scope":1117,"src":"1974:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1974:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1084,"initialValue":{"arguments":[{"arguments":[{"id":1074,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"2016:15:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1075,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2033:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1076,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"2040:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"2049:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1079,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2066:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1078,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"2056:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2056:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1081,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"2074:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1072,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2005:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2009:6:8","memberName":"encode","nodeType":"MemberAccess","src":"2005:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2005:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1071,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1995:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1995:89:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1974:110:8"},{"assignments":[1086],"declarations":[{"constant":false,"id":1086,"mutability":"mutable","name":"hash","nameLocation":"2103:4:8","nodeType":"VariableDeclaration","scope":1117,"src":"2095:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1085,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2095:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1090,"initialValue":{"arguments":[{"id":1088,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"2127:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1087,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"2110:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2110:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2095:43:8"},{"assignments":[1092],"declarations":[{"constant":false,"id":1092,"mutability":"mutable","name":"signer","nameLocation":"2157:6:8","nodeType":"VariableDeclaration","scope":1117,"src":"2149:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"2149:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1100,"initialValue":{"arguments":[{"id":1095,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"2180:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1096,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"2186:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1097,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"2189:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1098,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"2192:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1093,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"2166:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4090_$","typeString":"type(library ECDSA)"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2172:7:8","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4040,"src":"2166:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2166:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2149:45:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1101,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"2208:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1102,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2218:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2208:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1110,"nodeType":"IfStatement","src":"2204:88:8","trueBody":{"id":1109,"nodeType":"Block","src":"2225:67:8","statements":[{"errorCall":{"arguments":[{"id":1105,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"2267:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1106,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2275:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1104,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"2246:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1108,"nodeType":"RevertStatement","src":"2239:42:8"}]}},{"expression":{"arguments":[{"id":1112,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2311:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1113,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"2318:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"2327:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1111,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[805,865],"referencedDeclaration":805,"src":"2302:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2302:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1116,"nodeType":"ExpressionStatement","src":"2302:31:8"}]},"documentation":{"id":1042,"nodeType":"StructuredDocumentation","src":"1635:28:8","text":"@inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1118,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1677:6:8","nodeType":"FunctionDefinition","parameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"owner","nameLocation":"1701:5:8","nodeType":"VariableDeclaration","scope":1118,"src":"1693:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"1693:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"spender","nameLocation":"1724:7:8","nodeType":"VariableDeclaration","scope":1118,"src":"1716:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"1716:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"value","nameLocation":"1749:5:8","nodeType":"VariableDeclaration","scope":1118,"src":"1741:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1047,"name":"uint256","nodeType":"ElementaryTypeName","src":"1741:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1050,"mutability":"mutable","name":"deadline","nameLocation":"1772:8:8","nodeType":"VariableDeclaration","scope":1118,"src":"1764:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1049,"name":"uint256","nodeType":"ElementaryTypeName","src":"1764:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1052,"mutability":"mutable","name":"v","nameLocation":"1796:1:8","nodeType":"VariableDeclaration","scope":1118,"src":"1790:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1051,"name":"uint8","nodeType":"ElementaryTypeName","src":"1790:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1054,"mutability":"mutable","name":"r","nameLocation":"1815:1:8","nodeType":"VariableDeclaration","scope":1118,"src":"1807:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1053,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1807:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"s","nameLocation":"1834:1:8","nodeType":"VariableDeclaration","scope":1118,"src":"1826:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1055,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1826:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1683:158:8"},"returnParameters":{"id":1058,"nodeType":"ParameterList","parameters":[],"src":"1857:0:8"},"scope":1146,"src":"1668:672:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1201,1729],"body":{"id":1134,"nodeType":"Block","src":"2479:43:8","statements":[{"expression":{"arguments":[{"id":1131,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"2509:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1129,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2496:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1146_$","typeString":"type(contract super ERC20Permit)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2502:6:8","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1729,"src":"2496:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2496:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1128,"id":1133,"nodeType":"Return","src":"2489:26:8"}]},"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"2346:28:8","text":"@inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1135,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2388:6:8","nodeType":"FunctionDefinition","overrides":{"id":1125,"nodeType":"OverrideSpecifier","overrides":[{"id":1123,"name":"IERC20Permit","nameLocations":["2439:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1208,"src":"2439:12:8"},{"id":1124,"name":"Nonces","nameLocations":["2453:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1770,"src":"2453:6:8"}],"src":"2430:30:8"},"parameters":{"id":1122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"owner","nameLocation":"2403:5:8","nodeType":"VariableDeclaration","scope":1135,"src":"2395:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1120,"name":"address","nodeType":"ElementaryTypeName","src":"2395:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2394:15:8"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1135,"src":"2470:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"2470:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2469:9:8"},"scope":1146,"src":"2379:143:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1207],"body":{"id":1144,"nodeType":"Block","src":"2682:44:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1141,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"2699:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2699:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1140,"id":1143,"nodeType":"Return","src":"2692:27:8"}]},"documentation":{"id":1136,"nodeType":"StructuredDocumentation","src":"2528:28:8","text":"@inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1145,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2623:16:8","nodeType":"FunctionDefinition","parameters":{"id":1137,"nodeType":"ParameterList","parameters":[],"src":"2639:2:8"},"returnParameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1145,"src":"2673:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2673:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2672:9:8"},"scope":1146,"src":"2614:112:8","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1147,"src":"898:1830:8","usedErrors":[274,279,284,293,298,303,1023,1030,1712,2013,2015,3753,3758,3763],"usedEvents":[242,926,935]}],"src":"122:2607:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[992],"IERC20Metadata":[1172]},"id":1173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1148,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"125:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1150,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1173,"sourceUnit":993,"src":"151:37:9","symbolAliases":[{"foreign":{"id":1149,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"159:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1152,"name":"IERC20","nameLocations":["306:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"306:6:9"},"id":1153,"nodeType":"InheritanceSpecifier","src":"306:6:9"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1151,"nodeType":"StructuredDocumentation","src":"190:87:9","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1172,"linearizedBaseContracts":[1172,992],"name":"IERC20Metadata","nameLocation":"288:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1154,"nodeType":"StructuredDocumentation","src":"319:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1159,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:9","nodeType":"FunctionDefinition","parameters":{"id":1155,"nodeType":"ParameterList","parameters":[],"src":"391:2:9"},"returnParameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1159,"src":"417:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1156,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:9"},"scope":1172,"src":"378:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"438:56:9","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1165,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:9","nodeType":"FunctionDefinition","parameters":{"id":1161,"nodeType":"ParameterList","parameters":[],"src":"514:2:9"},"returnParameters":{"id":1164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1165,"src":"540:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1162,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:9"},"scope":1172,"src":"499:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1166,"nodeType":"StructuredDocumentation","src":"561:65:9","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1171,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:9","nodeType":"FunctionDefinition","parameters":{"id":1167,"nodeType":"ParameterList","parameters":[],"src":"648:2:9"},"returnParameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1171,"src":"674:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1168,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:9"},"scope":1172,"src":"631:50:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1173,"src":"278:405:9","usedErrors":[],"usedEvents":[926,935]}],"src":"125:559:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1208]},"id":1209,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1174,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"123:25:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1175,"nodeType":"StructuredDocumentation","src":"150:1965:10","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1208,"linearizedBaseContracts":[1208],"name":"IERC20Permit","nameLocation":"2126:12:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"2145:850:10","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1193,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3009:6:10","nodeType":"FunctionDefinition","parameters":{"id":1191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"owner","nameLocation":"3033:5:10","nodeType":"VariableDeclaration","scope":1193,"src":"3025:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"3025:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1180,"mutability":"mutable","name":"spender","nameLocation":"3056:7:10","nodeType":"VariableDeclaration","scope":1193,"src":"3048:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"3048:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1182,"mutability":"mutable","name":"value","nameLocation":"3081:5:10","nodeType":"VariableDeclaration","scope":1193,"src":"3073:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"3073:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1184,"mutability":"mutable","name":"deadline","nameLocation":"3104:8:10","nodeType":"VariableDeclaration","scope":1193,"src":"3096:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1183,"name":"uint256","nodeType":"ElementaryTypeName","src":"3096:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1186,"mutability":"mutable","name":"v","nameLocation":"3128:1:10","nodeType":"VariableDeclaration","scope":1193,"src":"3122:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1185,"name":"uint8","nodeType":"ElementaryTypeName","src":"3122:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"r","nameLocation":"3147:1:10","nodeType":"VariableDeclaration","scope":1193,"src":"3139:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3139:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1190,"mutability":"mutable","name":"s","nameLocation":"3166:1:10","nodeType":"VariableDeclaration","scope":1193,"src":"3158:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3158:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3015:158:10"},"returnParameters":{"id":1192,"nodeType":"ParameterList","parameters":[],"src":"3182:0:10"},"scope":1208,"src":"3000:183:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1194,"nodeType":"StructuredDocumentation","src":"3189:294:10","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1201,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3497:6:10","nodeType":"FunctionDefinition","parameters":{"id":1197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1196,"mutability":"mutable","name":"owner","nameLocation":"3512:5:10","nodeType":"VariableDeclaration","scope":1201,"src":"3504:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"3504:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3503:15:10"},"returnParameters":{"id":1200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1201,"src":"3542:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3542:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3541:9:10"},"scope":1208,"src":"3488:63:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1202,"nodeType":"StructuredDocumentation","src":"3557:128:10","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1207,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3752:16:10","nodeType":"FunctionDefinition","parameters":{"id":1203,"nodeType":"ParameterList","parameters":[],"src":"3768:2:10"},"returnParameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1207,"src":"3794:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:9:10"},"scope":1208,"src":"3743:60:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1209,"src":"2116:1689:10","usedErrors":[],"usedEvents":[]}],"src":"123:3683:10"},"id":10},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[229],"IERC20":[992],"SafeERC20":[1672]},"id":1673,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1210,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1212,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1673,"sourceUnit":993,"src":"141:37:11","symbolAliases":[{"foreign":{"id":1211,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"149:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":1214,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1673,"sourceUnit":230,"src":"179:58:11","symbolAliases":[{"foreign":{"id":1213,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"187:8:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1215,"nodeType":"StructuredDocumentation","src":"239:458:11","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1672,"linearizedBaseContracts":[1672],"name":"SafeERC20","nameLocation":"706:9:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"722:65:11","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":1220,"name":"SafeERC20FailedOperation","nameLocation":"798:24:11","nodeType":"ErrorDefinition","parameters":{"id":1219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"token","nameLocation":"831:5:11","nodeType":"VariableDeclaration","scope":1220,"src":"823:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:11"},"src":"792:46:11"},{"documentation":{"id":1221,"nodeType":"StructuredDocumentation","src":"844:71:11","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1229,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:11","nodeType":"ErrorDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"spender","nameLocation":"967:7:11","nodeType":"VariableDeclaration","scope":1229,"src":"959:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1222,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1225,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:11","nodeType":"VariableDeclaration","scope":1229,"src":"976:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1224,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:11","nodeType":"VariableDeclaration","scope":1229,"src":"1002:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:11"},"src":"920:109:11"},{"body":{"id":1252,"nodeType":"Block","src":"1291:88:11","statements":[{"expression":{"arguments":[{"id":1241,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"1321:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1244,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"1343:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:11","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":959,"src":"1343:14:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1246,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"1360:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"1364:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1248,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1242,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:11","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1240,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"1301:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1251,"nodeType":"ExpressionStatement","src":"1301:71:11"}]},"documentation":{"id":1230,"nodeType":"StructuredDocumentation","src":"1035:179:11","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1253,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:11","nodeType":"FunctionDefinition","parameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"token","nameLocation":"1248:5:11","nodeType":"VariableDeclaration","scope":1253,"src":"1241:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1232,"nodeType":"UserDefinedTypeName","pathNode":{"id":1231,"name":"IERC20","nameLocations":["1241:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"1241:6:11"},"referencedDeclaration":992,"src":"1241:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1235,"mutability":"mutable","name":"to","nameLocation":"1263:2:11","nodeType":"VariableDeclaration","scope":1253,"src":"1255:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1237,"mutability":"mutable","name":"value","nameLocation":"1275:5:11","nodeType":"VariableDeclaration","scope":1253,"src":"1267:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:11"},"returnParameters":{"id":1239,"nodeType":"ParameterList","parameters":[],"src":"1291:0:11"},"scope":1672,"src":"1219:160:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1279,"nodeType":"Block","src":"1708:98:11","statements":[{"expression":{"arguments":[{"id":1267,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"1738:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1270,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"1760:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:11","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":991,"src":"1760:18:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1272,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"1781:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1273,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"1787:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"1791:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1275,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1268,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:11","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1266,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"1718:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1278,"nodeType":"ExpressionStatement","src":"1718:81:11"}]},"documentation":{"id":1254,"nodeType":"StructuredDocumentation","src":"1385:228:11","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1280,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:11","nodeType":"FunctionDefinition","parameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"mutability":"mutable","name":"token","nameLocation":"1651:5:11","nodeType":"VariableDeclaration","scope":1280,"src":"1644:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1256,"nodeType":"UserDefinedTypeName","pathNode":{"id":1255,"name":"IERC20","nameLocations":["1644:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"1644:6:11"},"referencedDeclaration":992,"src":"1644:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"from","nameLocation":"1666:4:11","nodeType":"VariableDeclaration","scope":1280,"src":"1658:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"to","nameLocation":"1680:2:11","nodeType":"VariableDeclaration","scope":1280,"src":"1672:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1263,"mutability":"mutable","name":"value","nameLocation":"1692:5:11","nodeType":"VariableDeclaration","scope":1280,"src":"1684:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1262,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:11"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[],"src":"1708:0:11"},"scope":1672,"src":"1618:188:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1305,"nodeType":"Block","src":"2033:99:11","statements":[{"expression":{"arguments":[{"id":1294,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"2074:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1297,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"2096:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:8:11","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":959,"src":"2096:14:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1299,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"2113:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"2117:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1301,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2112:11:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1295,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2081:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2085:10:11","memberName":"encodeCall","nodeType":"MemberAccess","src":"2081:14:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1293,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"2050:23:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2050:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1292,"id":1304,"nodeType":"Return","src":"2043:82:11"}]},"documentation":{"id":1281,"nodeType":"StructuredDocumentation","src":"1812:126:11","text":" @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."},"id":1306,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransfer","nameLocation":"1952:15:11","nodeType":"FunctionDefinition","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1284,"mutability":"mutable","name":"token","nameLocation":"1975:5:11","nodeType":"VariableDeclaration","scope":1306,"src":"1968:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1283,"nodeType":"UserDefinedTypeName","pathNode":{"id":1282,"name":"IERC20","nameLocations":["1968:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"1968:6:11"},"referencedDeclaration":992,"src":"1968:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1286,"mutability":"mutable","name":"to","nameLocation":"1990:2:11","nodeType":"VariableDeclaration","scope":1306,"src":"1982:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1288,"mutability":"mutable","name":"value","nameLocation":"2002:5:11","nodeType":"VariableDeclaration","scope":1306,"src":"1994:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1287,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1967:41:11"},"returnParameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1306,"src":"2027:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1290,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:11"},"scope":1672,"src":"1943:189:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1334,"nodeType":"Block","src":"2381:109:11","statements":[{"expression":{"arguments":[{"id":1322,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"2422:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1325,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"2444:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:11","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":991,"src":"2444:18:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1327,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"2465:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1328,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"2471:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"2475:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1330,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2464:17:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1323,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2429:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2433:10:11","memberName":"encodeCall","nodeType":"MemberAccess","src":"2429:14:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1321,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"2398:23:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:85:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1320,"id":1333,"nodeType":"Return","src":"2391:92:11"}]},"documentation":{"id":1307,"nodeType":"StructuredDocumentation","src":"2138:130:11","text":" @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."},"id":1335,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransferFrom","nameLocation":"2282:19:11","nodeType":"FunctionDefinition","parameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"token","nameLocation":"2309:5:11","nodeType":"VariableDeclaration","scope":1335,"src":"2302:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1309,"nodeType":"UserDefinedTypeName","pathNode":{"id":1308,"name":"IERC20","nameLocations":["2302:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"2302:6:11"},"referencedDeclaration":992,"src":"2302:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"from","nameLocation":"2324:4:11","nodeType":"VariableDeclaration","scope":1335,"src":"2316:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1311,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1314,"mutability":"mutable","name":"to","nameLocation":"2338:2:11","nodeType":"VariableDeclaration","scope":1335,"src":"2330:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1313,"name":"address","nodeType":"ElementaryTypeName","src":"2330:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1316,"mutability":"mutable","name":"value","nameLocation":"2350:5:11","nodeType":"VariableDeclaration","scope":1335,"src":"2342:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1315,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:55:11"},"returnParameters":{"id":1320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1335,"src":"2375:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1318,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:11"},"scope":1672,"src":"2273:217:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1365,"nodeType":"Block","src":"3232:139:11","statements":[{"assignments":[1347],"declarations":[{"constant":false,"id":1347,"mutability":"mutable","name":"oldAllowance","nameLocation":"3250:12:11","nodeType":"VariableDeclaration","scope":1365,"src":"3242:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1346,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1356,"initialValue":{"arguments":[{"arguments":[{"id":1352,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3289:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1672","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1672","typeString":"library SafeERC20"}],"id":1351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3281:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1350,"name":"address","nodeType":"ElementaryTypeName","src":"3281:7:11","typeDescriptions":{}}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1354,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"3296:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1348,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"3265:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:9:11","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":969,"src":"3265:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3242:62:11"},{"expression":{"arguments":[{"id":1358,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"3327:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"id":1359,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"3334:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1360,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"3343:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"3358:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3343:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1357,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"3314:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1364,"nodeType":"ExpressionStatement","src":"3314:50:11"}]},"documentation":{"id":1336,"nodeType":"StructuredDocumentation","src":"2496:645:11","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1366,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"3155:21:11","nodeType":"FunctionDefinition","parameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"token","nameLocation":"3184:5:11","nodeType":"VariableDeclaration","scope":1366,"src":"3177:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1338,"nodeType":"UserDefinedTypeName","pathNode":{"id":1337,"name":"IERC20","nameLocations":["3177:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"3177:6:11"},"referencedDeclaration":992,"src":"3177:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"spender","nameLocation":"3199:7:11","nodeType":"VariableDeclaration","scope":1366,"src":"3191:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1340,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1343,"mutability":"mutable","name":"value","nameLocation":"3216:5:11","nodeType":"VariableDeclaration","scope":1366,"src":"3208:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3176:46:11"},"returnParameters":{"id":1345,"nodeType":"ParameterList","parameters":[],"src":"3232:0:11"},"scope":1672,"src":"3146:225:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1408,"nodeType":"Block","src":"4137:370:11","statements":[{"id":1407,"nodeType":"UncheckedBlock","src":"4147:354:11","statements":[{"assignments":[1378],"declarations":[{"constant":false,"id":1378,"mutability":"mutable","name":"currentAllowance","nameLocation":"4179:16:11","nodeType":"VariableDeclaration","scope":1407,"src":"4171:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1377,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1387,"initialValue":{"arguments":[{"arguments":[{"id":1383,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4222:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1672","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1672","typeString":"library SafeERC20"}],"id":1382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4214:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"4214:7:11","typeDescriptions":{}}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1385,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"4229:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1379,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"4198:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:9:11","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":969,"src":"4198:15:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4171:66:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1388,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"4255:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1389,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"4274:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4255:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1398,"nodeType":"IfStatement","src":"4251:160:11","trueBody":{"id":1397,"nodeType":"Block","src":"4293:118:11","statements":[{"errorCall":{"arguments":[{"id":1392,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"4351:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1393,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"4360:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1394,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"4378:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1391,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"4318:32:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1396,"nodeType":"RevertStatement","src":"4311:85:11"}]}},{"expression":{"arguments":[{"id":1400,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"4437:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"id":1401,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"4444:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1402,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"4453:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1403,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"4472:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1399,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"4424:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4424:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1406,"nodeType":"ExpressionStatement","src":"4424:66:11"}]}]},"documentation":{"id":1367,"nodeType":"StructuredDocumentation","src":"3377:657:11","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1409,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"4048:21:11","nodeType":"FunctionDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"token","nameLocation":"4077:5:11","nodeType":"VariableDeclaration","scope":1409,"src":"4070:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1369,"nodeType":"UserDefinedTypeName","pathNode":{"id":1368,"name":"IERC20","nameLocations":["4070:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"4070:6:11"},"referencedDeclaration":992,"src":"4070:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"spender","nameLocation":"4092:7:11","nodeType":"VariableDeclaration","scope":1409,"src":"4084:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"requestedDecrease","nameLocation":"4109:17:11","nodeType":"VariableDeclaration","scope":1409,"src":"4101:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"4101:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4069:58:11"},"returnParameters":{"id":1376,"nodeType":"ParameterList","parameters":[],"src":"4137:0:11"},"scope":1672,"src":"4039:468:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1455,"nodeType":"Block","src":"5161:303:11","statements":[{"assignments":[1421],"declarations":[{"constant":false,"id":1421,"mutability":"mutable","name":"approvalCall","nameLocation":"5184:12:11","nodeType":"VariableDeclaration","scope":1455,"src":"5171:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1420,"name":"bytes","nodeType":"ElementaryTypeName","src":"5171:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1430,"initialValue":{"arguments":[{"expression":{"id":1424,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"5214:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5220:7:11","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":979,"src":"5214:13:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1426,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"5230:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"5239:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1428,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5229:16:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1422,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5199:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5203:10:11","memberName":"encodeCall","nodeType":"MemberAccess","src":"5199:14:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5171:75:11"},{"condition":{"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5261:45:11","subExpression":{"arguments":[{"id":1432,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"5286:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"id":1433,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"5293:12:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1431,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"5262:23:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1454,"nodeType":"IfStatement","src":"5257:201:11","trueBody":{"id":1453,"nodeType":"Block","src":"5308:150:11","statements":[{"expression":{"arguments":[{"id":1437,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"5342:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1440,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"5364:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5370:7:11","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":979,"src":"5364:13:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1442,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"5380:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5379:12:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":1438,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5349:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5353:10:11","memberName":"encodeCall","nodeType":"MemberAccess","src":"5349:14:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1436,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"5322:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1447,"nodeType":"ExpressionStatement","src":"5322:71:11"},{"expression":{"arguments":[{"id":1449,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"5427:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},{"id":1450,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"5434:12:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1448,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"5407:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1452,"nodeType":"ExpressionStatement","src":"5407:40:11"}]}}]},"documentation":{"id":1410,"nodeType":"StructuredDocumentation","src":"4513:566:11","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":1456,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"5093:12:11","nodeType":"FunctionDefinition","parameters":{"id":1418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1413,"mutability":"mutable","name":"token","nameLocation":"5113:5:11","nodeType":"VariableDeclaration","scope":1456,"src":"5106:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1412,"nodeType":"UserDefinedTypeName","pathNode":{"id":1411,"name":"IERC20","nameLocations":["5106:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"5106:6:11"},"referencedDeclaration":992,"src":"5106:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1415,"mutability":"mutable","name":"spender","nameLocation":"5128:7:11","nodeType":"VariableDeclaration","scope":1456,"src":"5120:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1414,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1417,"mutability":"mutable","name":"value","nameLocation":"5145:5:11","nodeType":"VariableDeclaration","scope":1456,"src":"5137:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1416,"name":"uint256","nodeType":"ElementaryTypeName","src":"5137:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5105:46:11"},"returnParameters":{"id":1419,"nodeType":"ParameterList","parameters":[],"src":"5161:0:11"},"scope":1672,"src":"5084:380:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1498,"nodeType":"Block","src":"5911:219:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1469,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"5925:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5928:4:11","memberName":"code","nodeType":"MemberAccess","src":"5925:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5933:6:11","memberName":"length","nodeType":"MemberAccess","src":"5925:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5943:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5925:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6011:39:11","subExpression":{"arguments":[{"id":1483,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"6034:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"6038:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1485,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"6045:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1481,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"6012:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6018:15:11","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":180,"src":"6012:21:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1496,"nodeType":"IfStatement","src":"6007:117:11","trueBody":{"id":1495,"nodeType":"Block","src":"6052:72:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1491,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"6106:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6098:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1489,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:11","typeDescriptions":{}}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6098:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1488,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"6073:24:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6073:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1494,"nodeType":"RevertStatement","src":"6066:47:11"}]}},"id":1497,"nodeType":"IfStatement","src":"5921:203:11","trueBody":{"id":1480,"nodeType":"Block","src":"5946:55:11","statements":[{"expression":{"arguments":[{"id":1475,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"5973:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1476,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"5980:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"5984:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1474,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"5960:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5960:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1479,"nodeType":"ExpressionStatement","src":"5960:30:11"}]}}]},"documentation":{"id":1457,"nodeType":"StructuredDocumentation","src":"5470:333:11","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1499,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5817:22:11","nodeType":"FunctionDefinition","parameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1460,"mutability":"mutable","name":"token","nameLocation":"5849:5:11","nodeType":"VariableDeclaration","scope":1499,"src":"5840:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1459,"nodeType":"UserDefinedTypeName","pathNode":{"id":1458,"name":"IERC1363","nameLocations":["5840:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"5840:8:11"},"referencedDeclaration":229,"src":"5840:8:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1462,"mutability":"mutable","name":"to","nameLocation":"5864:2:11","nodeType":"VariableDeclaration","scope":1499,"src":"5856:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1461,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1464,"mutability":"mutable","name":"value","nameLocation":"5876:5:11","nodeType":"VariableDeclaration","scope":1499,"src":"5868:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1463,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1466,"mutability":"mutable","name":"data","nameLocation":"5896:4:11","nodeType":"VariableDeclaration","scope":1499,"src":"5883:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1465,"name":"bytes","nodeType":"ElementaryTypeName","src":"5883:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5839:62:11"},"returnParameters":{"id":1468,"nodeType":"ParameterList","parameters":[],"src":"5911:0:11"},"scope":1672,"src":"5808:322:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1545,"nodeType":"Block","src":"6649:239:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1514,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"6663:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6666:4:11","memberName":"code","nodeType":"MemberAccess","src":"6663:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6671:6:11","memberName":"length","nodeType":"MemberAccess","src":"6663:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6663:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6759:49:11","subExpression":{"arguments":[{"id":1529,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"6786:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1530,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"6792:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"6796:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1532,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"6803:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1527,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"6760:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:19:11","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":206,"src":"6760:25:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6760:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1543,"nodeType":"IfStatement","src":"6755:127:11","trueBody":{"id":1542,"nodeType":"Block","src":"6810:72:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1538,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"6864:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6856:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1536,"name":"address","nodeType":"ElementaryTypeName","src":"6856:7:11","typeDescriptions":{}}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6856:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1535,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"6831:24:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6831:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1541,"nodeType":"RevertStatement","src":"6824:47:11"}]}},"id":1544,"nodeType":"IfStatement","src":"6659:223:11","trueBody":{"id":1526,"nodeType":"Block","src":"6684:65:11","statements":[{"expression":{"arguments":[{"id":1520,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"6715:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1521,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"6722:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1522,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"6728:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"6732:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1519,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"6698:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6698:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1525,"nodeType":"ExpressionStatement","src":"6698:40:11"}]}}]},"documentation":{"id":1500,"nodeType":"StructuredDocumentation","src":"6136:341:11","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1546,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"6491:26:11","nodeType":"FunctionDefinition","parameters":{"id":1512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1503,"mutability":"mutable","name":"token","nameLocation":"6536:5:11","nodeType":"VariableDeclaration","scope":1546,"src":"6527:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1502,"nodeType":"UserDefinedTypeName","pathNode":{"id":1501,"name":"IERC1363","nameLocations":["6527:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"6527:8:11"},"referencedDeclaration":229,"src":"6527:8:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1505,"mutability":"mutable","name":"from","nameLocation":"6559:4:11","nodeType":"VariableDeclaration","scope":1546,"src":"6551:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1504,"name":"address","nodeType":"ElementaryTypeName","src":"6551:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1507,"mutability":"mutable","name":"to","nameLocation":"6581:2:11","nodeType":"VariableDeclaration","scope":1546,"src":"6573:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"6573:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"value","nameLocation":"6601:5:11","nodeType":"VariableDeclaration","scope":1546,"src":"6593:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"6593:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1511,"mutability":"mutable","name":"data","nameLocation":"6629:4:11","nodeType":"VariableDeclaration","scope":1546,"src":"6616:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1510,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6517:122:11"},"returnParameters":{"id":1513,"nodeType":"ParameterList","parameters":[],"src":"6649:0:11"},"scope":1672,"src":"6482:406:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1588,"nodeType":"Block","src":"7655:218:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1559,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"7669:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7672:4:11","memberName":"code","nodeType":"MemberAccess","src":"7669:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7677:6:11","memberName":"length","nodeType":"MemberAccess","src":"7669:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7687:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7669:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7755:38:11","subExpression":{"arguments":[{"id":1573,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"7777:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"7781:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1575,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"7788:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1571,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"7756:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7762:14:11","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":228,"src":"7756:20:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1586,"nodeType":"IfStatement","src":"7751:116:11","trueBody":{"id":1585,"nodeType":"Block","src":"7795:72:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1581,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"7849:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7841:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1579,"name":"address","nodeType":"ElementaryTypeName","src":"7841:7:11","typeDescriptions":{}}},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1578,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"7816:24:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7816:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1584,"nodeType":"RevertStatement","src":"7809:47:11"}]}},"id":1587,"nodeType":"IfStatement","src":"7665:202:11","trueBody":{"id":1570,"nodeType":"Block","src":"7690:55:11","statements":[{"expression":{"arguments":[{"id":1565,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"7717:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1566,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"7724:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"7728:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1564,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"7704:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7704:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1569,"nodeType":"ExpressionStatement","src":"7704:30:11"}]}}]},"documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"6894:654:11","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":1589,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"7562:21:11","nodeType":"FunctionDefinition","parameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1550,"mutability":"mutable","name":"token","nameLocation":"7593:5:11","nodeType":"VariableDeclaration","scope":1589,"src":"7584:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1549,"nodeType":"UserDefinedTypeName","pathNode":{"id":1548,"name":"IERC1363","nameLocations":["7584:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"7584:8:11"},"referencedDeclaration":229,"src":"7584:8:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1552,"mutability":"mutable","name":"to","nameLocation":"7608:2:11","nodeType":"VariableDeclaration","scope":1589,"src":"7600:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1551,"name":"address","nodeType":"ElementaryTypeName","src":"7600:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1554,"mutability":"mutable","name":"value","nameLocation":"7620:5:11","nodeType":"VariableDeclaration","scope":1589,"src":"7612:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"7612:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1556,"mutability":"mutable","name":"data","nameLocation":"7640:4:11","nodeType":"VariableDeclaration","scope":1589,"src":"7627:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1555,"name":"bytes","nodeType":"ElementaryTypeName","src":"7627:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:62:11"},"returnParameters":{"id":1558,"nodeType":"ParameterList","parameters":[],"src":"7655:0:11"},"scope":1672,"src":"7553:320:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1629,"nodeType":"Block","src":"8440:650:11","statements":[{"assignments":[1599],"declarations":[{"constant":false,"id":1599,"mutability":"mutable","name":"returnSize","nameLocation":"8458:10:11","nodeType":"VariableDeclaration","scope":1629,"src":"8450:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1600,"nodeType":"VariableDeclarationStatement","src":"8450:18:11"},{"assignments":[1602],"declarations":[{"constant":false,"id":1602,"mutability":"mutable","name":"returnValue","nameLocation":"8486:11:11","nodeType":"VariableDeclaration","scope":1629,"src":"8478:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1601,"name":"uint256","nodeType":"ElementaryTypeName","src":"8478:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1603,"nodeType":"VariableDeclarationStatement","src":"8478:19:11"},{"AST":{"nodeType":"YulBlock","src":"8532:396:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8546:75:11","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"8566:3:11"},"nodeType":"YulFunctionCall","src":"8566:5:11"},{"name":"token","nodeType":"YulIdentifier","src":"8573:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"8580:1:11","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8587:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"8593:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8583:3:11"},"nodeType":"YulFunctionCall","src":"8583:15:11"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8606:4:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8600:5:11"},"nodeType":"YulFunctionCall","src":"8600:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"8613:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8616:4:11","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"8561:4:11"},"nodeType":"YulFunctionCall","src":"8561:60:11"},"variables":[{"name":"success","nodeType":"YulTypedName","src":"8550:7:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"8682:157:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8700:22:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8717:4:11","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8711:5:11"},"nodeType":"YulFunctionCall","src":"8711:11:11"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8704:3:11","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8754:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"8759:1:11","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8762:14:11"},"nodeType":"YulFunctionCall","src":"8762:16:11"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"8739:14:11"},"nodeType":"YulFunctionCall","src":"8739:40:11"},"nodeType":"YulExpressionStatement","src":"8739:40:11"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8803:3:11"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8808:14:11"},"nodeType":"YulFunctionCall","src":"8808:16:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8796:6:11"},"nodeType":"YulFunctionCall","src":"8796:29:11"},"nodeType":"YulExpressionStatement","src":"8796:29:11"}]},"condition":{"arguments":[{"name":"success","nodeType":"YulIdentifier","src":"8673:7:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8666:6:11"},"nodeType":"YulFunctionCall","src":"8666:15:11"},"nodeType":"YulIf","src":"8663:176:11"},{"nodeType":"YulAssignment","src":"8852:30:11","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8866:14:11"},"nodeType":"YulFunctionCall","src":"8866:16:11"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"8852:10:11"}]},{"nodeType":"YulAssignment","src":"8895:23:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8916:1:11","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8910:5:11"},"nodeType":"YulFunctionCall","src":"8910:8:11"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"8895:11:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1595,"isOffset":false,"isSlot":false,"src":"8587:4:11","valueSize":1},{"declaration":1595,"isOffset":false,"isSlot":false,"src":"8606:4:11","valueSize":1},{"declaration":1599,"isOffset":false,"isSlot":false,"src":"8852:10:11","valueSize":1},{"declaration":1602,"isOffset":false,"isSlot":false,"src":"8895:11:11","valueSize":1},{"declaration":1593,"isOffset":false,"isSlot":false,"src":"8573:5:11","valueSize":1}],"flags":["memory-safe"],"id":1604,"nodeType":"InlineAssembly","src":"8507:421:11"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1605,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"8942:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8942:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1616,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"8994:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8994:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8942:68:11","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1610,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"8968:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}],"id":1609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8960:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1608,"name":"address","nodeType":"ElementaryTypeName","src":"8960:7:11","typeDescriptions":{}}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8960:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8975:4:11","memberName":"code","nodeType":"MemberAccess","src":"8960:19:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8980:6:11","memberName":"length","nodeType":"MemberAccess","src":"8960:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8960:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1628,"nodeType":"IfStatement","src":"8938:146:11","trueBody":{"id":1627,"nodeType":"Block","src":"9012:72:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1623,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"9066:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}],"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9058:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1621,"name":"address","nodeType":"ElementaryTypeName","src":"9058:7:11","typeDescriptions":{}}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9058:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1620,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"9033:24:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9033:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1626,"nodeType":"RevertStatement","src":"9026:47:11"}]}}]},"documentation":{"id":1590,"nodeType":"StructuredDocumentation","src":"7879:486:11","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":1630,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"8379:19:11","nodeType":"FunctionDefinition","parameters":{"id":1596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"mutability":"mutable","name":"token","nameLocation":"8406:5:11","nodeType":"VariableDeclaration","scope":1630,"src":"8399:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1592,"nodeType":"UserDefinedTypeName","pathNode":{"id":1591,"name":"IERC20","nameLocations":["8399:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"8399:6:11"},"referencedDeclaration":992,"src":"8399:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1595,"mutability":"mutable","name":"data","nameLocation":"8426:4:11","nodeType":"VariableDeclaration","scope":1630,"src":"8413:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1594,"name":"bytes","nodeType":"ElementaryTypeName","src":"8413:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8398:33:11"},"returnParameters":{"id":1597,"nodeType":"ParameterList","parameters":[],"src":"8440:0:11"},"scope":1672,"src":"8370:720:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1670,"nodeType":"Block","src":"9681:391:11","statements":[{"assignments":[1642],"declarations":[{"constant":false,"id":1642,"mutability":"mutable","name":"success","nameLocation":"9696:7:11","nodeType":"VariableDeclaration","scope":1670,"src":"9691:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1641,"name":"bool","nodeType":"ElementaryTypeName","src":"9691:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1643,"nodeType":"VariableDeclarationStatement","src":"9691:12:11"},{"assignments":[1645],"declarations":[{"constant":false,"id":1645,"mutability":"mutable","name":"returnSize","nameLocation":"9721:10:11","nodeType":"VariableDeclaration","scope":1670,"src":"9713:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1644,"name":"uint256","nodeType":"ElementaryTypeName","src":"9713:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1646,"nodeType":"VariableDeclarationStatement","src":"9713:18:11"},{"assignments":[1648],"declarations":[{"constant":false,"id":1648,"mutability":"mutable","name":"returnValue","nameLocation":"9749:11:11","nodeType":"VariableDeclaration","scope":1670,"src":"9741:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1649,"nodeType":"VariableDeclarationStatement","src":"9741:19:11"},{"AST":{"nodeType":"YulBlock","src":"9795:174:11","statements":[{"nodeType":"YulAssignment","src":"9809:71:11","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"9825:3:11"},"nodeType":"YulFunctionCall","src":"9825:5:11"},{"name":"token","nodeType":"YulIdentifier","src":"9832:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"9839:1:11","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9846:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"9852:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9842:3:11"},"nodeType":"YulFunctionCall","src":"9842:15:11"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9865:4:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9859:5:11"},"nodeType":"YulFunctionCall","src":"9859:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"9872:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9875:4:11","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"9820:4:11"},"nodeType":"YulFunctionCall","src":"9820:60:11"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"9809:7:11"}]},{"nodeType":"YulAssignment","src":"9893:30:11","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"9907:14:11"},"nodeType":"YulFunctionCall","src":"9907:16:11"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"9893:10:11"}]},{"nodeType":"YulAssignment","src":"9936:23:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9957:1:11","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9951:5:11"},"nodeType":"YulFunctionCall","src":"9951:8:11"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"9936:11:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1636,"isOffset":false,"isSlot":false,"src":"9846:4:11","valueSize":1},{"declaration":1636,"isOffset":false,"isSlot":false,"src":"9865:4:11","valueSize":1},{"declaration":1645,"isOffset":false,"isSlot":false,"src":"9893:10:11","valueSize":1},{"declaration":1648,"isOffset":false,"isSlot":false,"src":"9936:11:11","valueSize":1},{"declaration":1642,"isOffset":false,"isSlot":false,"src":"9809:7:11","valueSize":1},{"declaration":1634,"isOffset":false,"isSlot":false,"src":"9832:5:11","valueSize":1}],"flags":["memory-safe"],"id":1650,"nodeType":"InlineAssembly","src":"9770:199:11"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1651,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"9985:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1652,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"9997:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10011:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9997:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1663,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"10048:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10048:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9997:67:11","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1657,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"10023:5:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}],"id":1656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10015:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1655,"name":"address","nodeType":"ElementaryTypeName","src":"10015:7:11","typeDescriptions":{}}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10015:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10030:4:11","memberName":"code","nodeType":"MemberAccess","src":"10015:19:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10035:6:11","memberName":"length","nodeType":"MemberAccess","src":"10015:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10044:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10015:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9996:69:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9985:80:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1640,"id":1669,"nodeType":"Return","src":"9978:87:11"}]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"9096:491:11","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":1671,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"9601:23:11","nodeType":"FunctionDefinition","parameters":{"id":1637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"mutability":"mutable","name":"token","nameLocation":"9632:5:11","nodeType":"VariableDeclaration","scope":1671,"src":"9625:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":1633,"nodeType":"UserDefinedTypeName","pathNode":{"id":1632,"name":"IERC20","nameLocations":["9625:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"9625:6:11"},"referencedDeclaration":992,"src":"9625:6:11","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1636,"mutability":"mutable","name":"data","nameLocation":"9652:4:11","nodeType":"VariableDeclaration","scope":1671,"src":"9639:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1635,"name":"bytes","nodeType":"ElementaryTypeName","src":"9639:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9624:33:11"},"returnParameters":{"id":1640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1671,"src":"9675:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1638,"name":"bool","nodeType":"ElementaryTypeName","src":"9675:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9674:6:11"},"scope":1672,"src":"9592:480:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1673,"src":"698:9376:11","usedErrors":[1220,1229],"usedEvents":[]}],"src":"115:9960:11"},"id":11},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1702]},"id":1703,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1674,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1675,"nodeType":"StructuredDocumentation","src":"127:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1702,"linearizedBaseContracts":[1702],"name":"Context","nameLocation":"642:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1683,"nodeType":"Block","src":"718:34:12","statements":[{"expression":{"expression":{"id":1680,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:12","memberName":"sender","nodeType":"MemberAccess","src":"735:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1679,"id":1682,"nodeType":"Return","src":"728:17:12"}]},"id":1684,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:12","nodeType":"FunctionDefinition","parameters":{"id":1676,"nodeType":"ParameterList","parameters":[],"src":"675:2:12"},"returnParameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1684,"src":"709:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1677,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:12"},"scope":1702,"src":"656:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1692,"nodeType":"Block","src":"825:32:12","statements":[{"expression":{"expression":{"id":1689,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:12","memberName":"data","nodeType":"MemberAccess","src":"842:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1688,"id":1691,"nodeType":"Return","src":"835:15:12"}]},"id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:12","nodeType":"FunctionDefinition","parameters":{"id":1685,"nodeType":"ParameterList","parameters":[],"src":"775:2:12"},"returnParameters":{"id":1688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1693,"src":"809:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1686,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:12"},"scope":1702,"src":"758:99:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1700,"nodeType":"Block","src":"935:25:12","statements":[{"expression":{"hexValue":"30","id":1698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1697,"id":1699,"nodeType":"Return","src":"945:8:12"}]},"id":1701,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:12","nodeType":"FunctionDefinition","parameters":{"id":1694,"nodeType":"ParameterList","parameters":[],"src":"892:2:12"},"returnParameters":{"id":1697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1701,"src":"926:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:12"},"scope":1702,"src":"863:97:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1703,"src":"624:338:12","usedErrors":[],"usedEvents":[]}],"src":"101:862:12"},"id":12},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[1770]},"id":1771,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1704,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":1705,"nodeType":"StructuredDocumentation","src":"125:83:13","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1770,"linearizedBaseContracts":[1770],"name":"Nonces","nameLocation":"227:6:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1706,"nodeType":"StructuredDocumentation","src":"240:90:13","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1712,"name":"InvalidAccountNonce","nameLocation":"341:19:13","nodeType":"ErrorDefinition","parameters":{"id":1711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"mutability":"mutable","name":"account","nameLocation":"369:7:13","nodeType":"VariableDeclaration","scope":1712,"src":"361:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1707,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1710,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:13","nodeType":"VariableDeclaration","scope":1712,"src":"378:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1709,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:13"},"src":"335:65:13"},{"constant":false,"id":1716,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:13","nodeType":"VariableDeclaration","scope":1770,"src":"406:51:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1715,"keyName":"account","keyNameLocation":"422:7:13","keyType":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1728,"nodeType":"Block","src":"607:38:13","statements":[{"expression":{"baseExpression":{"id":1724,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"624:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1726,"indexExpression":{"id":1725,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"632:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1723,"id":1727,"nodeType":"Return","src":"617:21:13"}]},"documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"464:69:13","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1729,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:13","nodeType":"FunctionDefinition","parameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"owner","nameLocation":"562:5:13","nodeType":"VariableDeclaration","scope":1729,"src":"554:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:13"},"returnParameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1729,"src":"598:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1721,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:13"},"scope":1770,"src":"538:107:13","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1743,"nodeType":"Block","src":"828:326:13","statements":[{"id":1742,"nodeType":"UncheckedBlock","src":"1031:117:13","statements":[{"expression":{"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:13","subExpression":{"baseExpression":{"id":1737,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"1121:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1739,"indexExpression":{"id":1738,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"1129:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1736,"id":1741,"nodeType":"Return","src":"1114:23:13"}]}]},"documentation":{"id":1730,"nodeType":"StructuredDocumentation","src":"651:103:13","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1744,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:13","nodeType":"FunctionDefinition","parameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1732,"mutability":"mutable","name":"owner","nameLocation":"786:5:13","nodeType":"VariableDeclaration","scope":1744,"src":"778:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:13"},"returnParameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1744,"src":"819:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:13"},"scope":1770,"src":"759:395:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1768,"nodeType":"Block","src":"1338:149:13","statements":[{"assignments":[1753],"declarations":[{"constant":false,"id":1753,"mutability":"mutable","name":"current","nameLocation":"1356:7:13","nodeType":"VariableDeclaration","scope":1768,"src":"1348:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1752,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1757,"initialValue":{"arguments":[{"id":1755,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"1376:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1754,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"1366:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1758,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"1396:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1759,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"1405:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1767,"nodeType":"IfStatement","src":"1392:89:13","trueBody":{"id":1766,"nodeType":"Block","src":"1414:67:13","statements":[{"errorCall":{"arguments":[{"id":1762,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"1455:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1763,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"1462:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1761,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"1435:19:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1765,"nodeType":"RevertStatement","src":"1428:42:13"}]}}]},"documentation":{"id":1745,"nodeType":"StructuredDocumentation","src":"1160:100:13","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1769,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:13","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"owner","nameLocation":"1299:5:13","nodeType":"VariableDeclaration","scope":1769,"src":"1291:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1746,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1749,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:13","nodeType":"VariableDeclaration","scope":1769,"src":"1306:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1748,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:13"},"returnParameters":{"id":1751,"nodeType":"ParameterList","parameters":[],"src":"1338:0:13"},"scope":1770,"src":"1265:222:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1771,"src":"209:1280:13","usedErrors":[1712],"usedEvents":[]}],"src":"99:1391:13"},"id":13},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1822]},"id":1823,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1772,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1773,"nodeType":"StructuredDocumentation","src":"125:489:14","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1822,"linearizedBaseContracts":[1822],"name":"Panic","nameLocation":"665:5:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"677:36:14","text":"@dev generic / unspecified error"},"id":1777,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:14","nodeType":"VariableDeclaration","scope":1822,"src":"718:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1778,"nodeType":"StructuredDocumentation","src":"764:37:14","text":"@dev used by the assert() builtin"},"id":1781,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:14","nodeType":"VariableDeclaration","scope":1822,"src":"806:39:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1779,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1782,"nodeType":"StructuredDocumentation","src":"851:41:14","text":"@dev arithmetic underflow or overflow"},"id":1785,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:14","nodeType":"VariableDeclaration","scope":1822,"src":"897:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1783,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:14","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1786,"nodeType":"StructuredDocumentation","src":"950:35:14","text":"@dev division or modulo by zero"},"id":1789,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:14","nodeType":"VariableDeclaration","scope":1822,"src":"990:49:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1787,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1790,"nodeType":"StructuredDocumentation","src":"1045:30:14","text":"@dev enum conversion error"},"id":1793,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:14","nodeType":"VariableDeclaration","scope":1822,"src":"1080:54:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1791,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:14","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1794,"nodeType":"StructuredDocumentation","src":"1140:36:14","text":"@dev invalid encoding in storage"},"id":1797,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:14","nodeType":"VariableDeclaration","scope":1822,"src":"1181:55:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1795,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:14","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1798,"nodeType":"StructuredDocumentation","src":"1242:24:14","text":"@dev empty array pop"},"id":1801,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:14","nodeType":"VariableDeclaration","scope":1822,"src":"1271:48:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1799,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:14","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1802,"nodeType":"StructuredDocumentation","src":"1325:35:14","text":"@dev array out of bounds access"},"id":1805,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:14","nodeType":"VariableDeclaration","scope":1822,"src":"1365:52:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1803,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:14","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1806,"nodeType":"StructuredDocumentation","src":"1423:65:14","text":"@dev resource error (too large allocation or too large array)"},"id":1809,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:14","nodeType":"VariableDeclaration","scope":1822,"src":"1493:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1807,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:14","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1810,"nodeType":"StructuredDocumentation","src":"1546:42:14","text":"@dev calling invalid internal function"},"id":1813,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:14","nodeType":"VariableDeclaration","scope":1822,"src":"1593:58:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1811,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:14","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1820,"nodeType":"Block","src":"1819:151:14","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:14","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:14"},"nodeType":"YulFunctionCall","src":"1868:24:14"},"nodeType":"YulExpressionStatement","src":"1868:24:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:14","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:14"},"nodeType":"YulFunctionCall","src":"1905:18:14"},"nodeType":"YulExpressionStatement","src":"1905:18:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:14","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:14"},"nodeType":"YulFunctionCall","src":"1936:18:14"},"nodeType":"YulExpressionStatement","src":"1936:18:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":1816,"isOffset":false,"isSlot":false,"src":"1918:4:14","valueSize":1}],"flags":["memory-safe"],"id":1819,"nodeType":"InlineAssembly","src":"1829:135:14"}]},"documentation":{"id":1814,"nodeType":"StructuredDocumentation","src":"1658:113:14","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1821,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:14","nodeType":"FunctionDefinition","parameters":{"id":1817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"code","nameLocation":"1799:4:14","nodeType":"VariableDeclaration","scope":1821,"src":"1791:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1815,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:14"},"returnParameters":{"id":1818,"nodeType":"ParameterList","parameters":[],"src":"1819:0:14"},"scope":1822,"src":"1776:194:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1823,"src":"657:1315:14","usedErrors":[],"usedEvents":[]}],"src":"99:1874:14"},"id":14},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[1702],"Pausable":[1930]},"id":1931,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1824,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1826,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1931,"sourceUnit":1703,"src":"128:45:15","symbolAliases":[{"foreign":{"id":1825,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"136:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1828,"name":"Context","nameLocations":["645:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":1702,"src":"645:7:15"},"id":1829,"nodeType":"InheritanceSpecifier","src":"645:7:15"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1827,"nodeType":"StructuredDocumentation","src":"175:439:15","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1930,"linearizedBaseContracts":[1930,1702],"name":"Pausable","nameLocation":"633:8:15","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1831,"mutability":"mutable","name":"_paused","nameLocation":"672:7:15","nodeType":"VariableDeclaration","scope":1930,"src":"659:20:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1830,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":1832,"nodeType":"StructuredDocumentation","src":"686:73:15","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":1836,"name":"Paused","nameLocation":"770:6:15","nodeType":"EventDefinition","parameters":{"id":1835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:15","nodeType":"VariableDeclaration","scope":1836,"src":"777:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1833,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:15"},"src":"764:30:15"},{"anonymous":false,"documentation":{"id":1837,"nodeType":"StructuredDocumentation","src":"800:70:15","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":1841,"name":"Unpaused","nameLocation":"881:8:15","nodeType":"EventDefinition","parameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:15","nodeType":"VariableDeclaration","scope":1841,"src":"890:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1838,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:15"},"src":"875:32:15"},{"documentation":{"id":1842,"nodeType":"StructuredDocumentation","src":"913:76:15","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":1844,"name":"EnforcedPause","nameLocation":"1000:13:15","nodeType":"ErrorDefinition","parameters":{"id":1843,"nodeType":"ParameterList","parameters":[],"src":"1013:2:15"},"src":"994:22:15"},{"documentation":{"id":1845,"nodeType":"StructuredDocumentation","src":"1022:80:15","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":1847,"name":"ExpectedPause","nameLocation":"1113:13:15","nodeType":"ErrorDefinition","parameters":{"id":1846,"nodeType":"ParameterList","parameters":[],"src":"1126:2:15"},"src":"1107:22:15"},{"body":{"id":1854,"nodeType":"Block","src":"1340:47:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1850,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"1350:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1852,"nodeType":"ExpressionStatement","src":"1350:19:15"},{"id":1853,"nodeType":"PlaceholderStatement","src":"1379:1:15"}]},"documentation":{"id":1848,"nodeType":"StructuredDocumentation","src":"1135:175:15","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1855,"name":"whenNotPaused","nameLocation":"1324:13:15","nodeType":"ModifierDefinition","parameters":{"id":1849,"nodeType":"ParameterList","parameters":[],"src":"1337:2:15"},"src":"1315:72:15","virtual":false,"visibility":"internal"},{"body":{"id":1862,"nodeType":"Block","src":"1587:44:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1858,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"1597:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1597:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1860,"nodeType":"ExpressionStatement","src":"1597:16:15"},{"id":1861,"nodeType":"PlaceholderStatement","src":"1623:1:15"}]},"documentation":{"id":1856,"nodeType":"StructuredDocumentation","src":"1393:167:15","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1863,"name":"whenPaused","nameLocation":"1574:10:15","nodeType":"ModifierDefinition","parameters":{"id":1857,"nodeType":"ParameterList","parameters":[],"src":"1584:2:15"},"src":"1565:66:15","virtual":false,"visibility":"internal"},{"body":{"id":1871,"nodeType":"Block","src":"1779:31:15","statements":[{"expression":{"id":1869,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"1796:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1868,"id":1870,"nodeType":"Return","src":"1789:14:15"}]},"documentation":{"id":1864,"nodeType":"StructuredDocumentation","src":"1637:84:15","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1872,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1735:6:15","nodeType":"FunctionDefinition","parameters":{"id":1865,"nodeType":"ParameterList","parameters":[],"src":"1741:2:15"},"returnParameters":{"id":1868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1872,"src":"1773:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1866,"name":"bool","nodeType":"ElementaryTypeName","src":"1773:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1772:6:15"},"scope":1930,"src":"1726:84:15","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1883,"nodeType":"Block","src":"1929:77:15","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":1876,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"1943:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1882,"nodeType":"IfStatement","src":"1939:61:15","trueBody":{"id":1881,"nodeType":"Block","src":"1953:47:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1878,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"1974:13:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1974:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1880,"nodeType":"RevertStatement","src":"1967:22:15"}]}}]},"documentation":{"id":1873,"nodeType":"StructuredDocumentation","src":"1816:57:15","text":" @dev Throws if the contract is paused."},"id":1884,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1887:17:15","nodeType":"FunctionDefinition","parameters":{"id":1874,"nodeType":"ParameterList","parameters":[],"src":"1904:2:15"},"returnParameters":{"id":1875,"nodeType":"ParameterList","parameters":[],"src":"1929:0:15"},"scope":1930,"src":"1878:128:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1896,"nodeType":"Block","src":"2126:78:15","statements":[{"condition":{"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2140:9:15","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1888,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"2141:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2141:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1895,"nodeType":"IfStatement","src":"2136:62:15","trueBody":{"id":1894,"nodeType":"Block","src":"2151:47:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1891,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"2172:13:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2172:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1893,"nodeType":"RevertStatement","src":"2165:22:15"}]}}]},"documentation":{"id":1885,"nodeType":"StructuredDocumentation","src":"2012:61:15","text":" @dev Throws if the contract is not paused."},"id":1897,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2087:14:15","nodeType":"FunctionDefinition","parameters":{"id":1886,"nodeType":"ParameterList","parameters":[],"src":"2101:2:15"},"returnParameters":{"id":1887,"nodeType":"ParameterList","parameters":[],"src":"2126:0:15"},"scope":1930,"src":"2078:126:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1912,"nodeType":"Block","src":"2388:66:15","statements":[{"expression":{"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1903,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"2398:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2408:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2398:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1906,"nodeType":"ExpressionStatement","src":"2398:14:15"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1908,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"2434:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2434:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1907,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"2427:6:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2427:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1911,"nodeType":"EmitStatement","src":"2422:25:15"}]},"documentation":{"id":1898,"nodeType":"StructuredDocumentation","src":"2210:124:15","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1913,"implemented":true,"kind":"function","modifiers":[{"id":1901,"kind":"modifierInvocation","modifierName":{"id":1900,"name":"whenNotPaused","nameLocations":["2374:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":1855,"src":"2374:13:15"},"nodeType":"ModifierInvocation","src":"2374:13:15"}],"name":"_pause","nameLocation":"2348:6:15","nodeType":"FunctionDefinition","parameters":{"id":1899,"nodeType":"ParameterList","parameters":[],"src":"2354:2:15"},"returnParameters":{"id":1902,"nodeType":"ParameterList","parameters":[],"src":"2388:0:15"},"scope":1930,"src":"2339:115:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1928,"nodeType":"Block","src":"2634:69:15","statements":[{"expression":{"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1919,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"2644:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2654:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2644:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1922,"nodeType":"ExpressionStatement","src":"2644:15:15"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1924,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"2683:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2683:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1923,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"2674:8:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2674:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1927,"nodeType":"EmitStatement","src":"2669:27:15"}]},"documentation":{"id":1914,"nodeType":"StructuredDocumentation","src":"2460:121:15","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1929,"implemented":true,"kind":"function","modifiers":[{"id":1917,"kind":"modifierInvocation","modifierName":{"id":1916,"name":"whenPaused","nameLocations":["2623:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":1863,"src":"2623:10:15"},"nodeType":"ModifierInvocation","src":"2623:10:15"}],"name":"_unpause","nameLocation":"2595:8:15","nodeType":"FunctionDefinition","parameters":{"id":1915,"nodeType":"ParameterList","parameters":[],"src":"2603:2:15"},"returnParameters":{"id":1918,"nodeType":"ParameterList","parameters":[],"src":"2634:0:15"},"scope":1930,"src":"2586:117:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1931,"src":"615:2090:15","usedErrors":[1844,1847],"usedEvents":[1836,1841]}],"src":"102:2604:15"},"id":15},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1999]},"id":2000,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1932,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:16"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1933,"nodeType":"StructuredDocumentation","src":"135:894:16","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1999,"linearizedBaseContracts":[1999],"name":"ReentrancyGuard","nameLocation":"1048:15:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1936,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:16","nodeType":"VariableDeclaration","scope":1999,"src":"1818:40:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1939,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:16","nodeType":"VariableDeclaration","scope":1999,"src":"1864:36:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1941,"mutability":"mutable","name":"_status","nameLocation":"1923:7:16","nodeType":"VariableDeclaration","scope":1999,"src":"1907:23:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1942,"nodeType":"StructuredDocumentation","src":"1937:52:16","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1944,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:16","nodeType":"ErrorDefinition","parameters":{"id":1943,"nodeType":"ParameterList","parameters":[],"src":"2028:2:16"},"src":"1994:37:16"},{"body":{"id":1951,"nodeType":"Block","src":"2051:38:16","statements":[{"expression":{"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1947,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"2061:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1948,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"2071:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1950,"nodeType":"ExpressionStatement","src":"2061:21:16"}]},"id":1952,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1945,"nodeType":"ParameterList","parameters":[],"src":"2048:2:16"},"returnParameters":{"id":1946,"nodeType":"ParameterList","parameters":[],"src":"2051:0:16"},"scope":1999,"src":"2037:52:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1962,"nodeType":"Block","src":"2490:79:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1955,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"2500:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1957,"nodeType":"ExpressionStatement","src":"2500:21:16"},{"id":1958,"nodeType":"PlaceholderStatement","src":"2531:1:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1959,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"2542:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1961,"nodeType":"ExpressionStatement","src":"2542:20:16"}]},"documentation":{"id":1953,"nodeType":"StructuredDocumentation","src":"2095:366:16","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1963,"name":"nonReentrant","nameLocation":"2475:12:16","nodeType":"ModifierDefinition","parameters":{"id":1954,"nodeType":"ParameterList","parameters":[],"src":"2487:2:16"},"src":"2466:103:16","virtual":false,"visibility":"internal"},{"body":{"id":1978,"nodeType":"Block","src":"2614:268:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1966,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"2702:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1967,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"2713:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1973,"nodeType":"IfStatement","src":"2698:86:16","trueBody":{"id":1972,"nodeType":"Block","src":"2722:62:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1969,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"2743:28:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1971,"nodeType":"RevertStatement","src":"2736:37:16"}]}},{"expression":{"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1974,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"2858:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1975,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"2868:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1977,"nodeType":"ExpressionStatement","src":"2858:17:16"}]},"id":1979,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:16","nodeType":"FunctionDefinition","parameters":{"id":1964,"nodeType":"ParameterList","parameters":[],"src":"2603:2:16"},"returnParameters":{"id":1965,"nodeType":"ParameterList","parameters":[],"src":"2614:0:16"},"scope":1999,"src":"2575:307:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1986,"nodeType":"Block","src":"2926:170:16","statements":[{"expression":{"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1982,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"3068:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1983,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"3078:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1985,"nodeType":"ExpressionStatement","src":"3068:21:16"}]},"id":1987,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:16","nodeType":"FunctionDefinition","parameters":{"id":1980,"nodeType":"ParameterList","parameters":[],"src":"2915:2:16"},"returnParameters":{"id":1981,"nodeType":"ParameterList","parameters":[],"src":"2926:0:16"},"scope":1999,"src":"2888:208:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1997,"nodeType":"Block","src":"3339:42:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1993,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"3356:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1994,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"3367:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1992,"id":1996,"nodeType":"Return","src":"3349:25:16"}]},"documentation":{"id":1988,"nodeType":"StructuredDocumentation","src":"3102:168:16","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1998,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:16","nodeType":"FunctionDefinition","parameters":{"id":1989,"nodeType":"ParameterList","parameters":[],"src":"3307:2:16"},"returnParameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1998,"src":"3333:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1990,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:16"},"scope":1999,"src":"3275:106:16","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2000,"src":"1030:2353:16","usedErrors":[1944],"usedEvents":[]}],"src":"109:3275:16"},"id":16},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[2005],"ShortStrings":[2216],"StorageSlot":[2340]},"id":2217,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2001,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2003,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2217,"sourceUnit":2341,"src":"132:46:17","symbolAliases":[{"foreign":{"id":2002,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"140:11:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":2005,"name":"ShortString","nameLocation":"353:11:17","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:17","underlyingType":{"id":2004,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":2006,"nodeType":"StructuredDocumentation","src":"378:876:17","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2216,"linearizedBaseContracts":[2216],"name":"ShortStrings","nameLocation":"1263:12:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2009,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:17","nodeType":"VariableDeclaration","scope":2216,"src":"1345:111:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2007,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":2013,"name":"StringTooLong","nameLocation":"1469:13:17","nodeType":"ErrorDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2011,"mutability":"mutable","name":"str","nameLocation":"1490:3:17","nodeType":"VariableDeclaration","scope":2013,"src":"1483:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2010,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:17"},"src":"1463:32:17"},{"errorSelector":"b3512b0c","id":2015,"name":"InvalidShortString","nameLocation":"1506:18:17","nodeType":"ErrorDefinition","parameters":{"id":2014,"nodeType":"ParameterList","parameters":[],"src":"1524:2:17"},"src":"1500:27:17"},{"body":{"id":2058,"nodeType":"Block","src":"1786:208:17","statements":[{"assignments":[2025],"declarations":[{"constant":false,"id":2025,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:17","nodeType":"VariableDeclaration","scope":2058,"src":"1796:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2024,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2030,"initialValue":{"arguments":[{"id":2028,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"1822:3:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2026,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:17","typeDescriptions":{}}},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2031,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"1840:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:17","memberName":"length","nodeType":"MemberAccess","src":"1840:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:17","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2040,"nodeType":"IfStatement","src":"1836:72:17","trueBody":{"id":2039,"nodeType":"Block","src":"1858:50:17","statements":[{"errorCall":{"arguments":[{"id":2036,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"1893:3:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2035,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"1879:13:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2038,"nodeType":"RevertStatement","src":"1872:25:17"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2049,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"1965:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2047,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:17","typeDescriptions":{}}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2045,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:17","typeDescriptions":{}}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2052,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"1974:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:17","memberName":"length","nodeType":"MemberAccess","src":"1974:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2043,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:17","typeDescriptions":{}}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2041,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"1924:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2005_$","typeString":"type(ShortString)"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:17","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:17","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2005_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}},"functionReturnParameters":2023,"id":2057,"nodeType":"Return","src":"1917:70:17"}]},"documentation":{"id":2016,"nodeType":"StructuredDocumentation","src":"1533:170:17","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2059,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:17","nodeType":"FunctionDefinition","parameters":{"id":2019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2018,"mutability":"mutable","name":"str","nameLocation":"1745:3:17","nodeType":"VariableDeclaration","scope":2059,"src":"1731:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2017,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:17"},"returnParameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2059,"src":"1773:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"},"typeName":{"id":2021,"nodeType":"UserDefinedTypeName","pathNode":{"id":2020,"name":"ShortString","nameLocations":["1773:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2005,"src":"1773:11:17"},"referencedDeclaration":2005,"src":"1773:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:17"},"scope":2216,"src":"1708:286:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2084,"nodeType":"Block","src":"2152:304:17","statements":[{"assignments":[2069],"declarations":[{"constant":false,"id":2069,"mutability":"mutable","name":"len","nameLocation":"2170:3:17","nodeType":"VariableDeclaration","scope":2084,"src":"2162:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2068,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2073,"initialValue":{"arguments":[{"id":2071,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"2187:4:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}],"id":2070,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"2176:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2005_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:17"},{"assignments":[2075],"declarations":[{"constant":false,"id":2075,"mutability":"mutable","name":"str","nameLocation":"2294:3:17","nodeType":"VariableDeclaration","scope":2084,"src":"2280:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2074,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2080,"initialValue":{"arguments":[{"hexValue":"3332","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2076,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:17"},{"AST":{"nodeType":"YulBlock","src":"2349:81:17","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2370:3:17"},{"name":"len","nodeType":"YulIdentifier","src":"2375:3:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2363:6:17"},"nodeType":"YulFunctionCall","src":"2363:16:17"},"nodeType":"YulExpressionStatement","src":"2363:16:17"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2403:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2408:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2399:3:17"},"nodeType":"YulFunctionCall","src":"2399:14:17"},{"name":"sstr","nodeType":"YulIdentifier","src":"2415:4:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2392:6:17"},"nodeType":"YulFunctionCall","src":"2392:28:17"},"nodeType":"YulExpressionStatement","src":"2392:28:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":2069,"isOffset":false,"isSlot":false,"src":"2375:3:17","valueSize":1},{"declaration":2063,"isOffset":false,"isSlot":false,"src":"2415:4:17","valueSize":1},{"declaration":2075,"isOffset":false,"isSlot":false,"src":"2370:3:17","valueSize":1},{"declaration":2075,"isOffset":false,"isSlot":false,"src":"2403:3:17","valueSize":1}],"flags":["memory-safe"],"id":2081,"nodeType":"InlineAssembly","src":"2324:106:17"},{"expression":{"id":2082,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"2446:3:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2067,"id":2083,"nodeType":"Return","src":"2439:10:17"}]},"documentation":{"id":2060,"nodeType":"StructuredDocumentation","src":"2000:73:17","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2085,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:17","nodeType":"FunctionDefinition","parameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:17","nodeType":"VariableDeclaration","scope":2085,"src":"2096:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"},"typeName":{"id":2062,"nodeType":"UserDefinedTypeName","pathNode":{"id":2061,"name":"ShortString","nameLocations":["2096:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2005,"src":"2096:11:17"},"referencedDeclaration":2005,"src":"2096:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:17"},"returnParameters":{"id":2067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2085,"src":"2137:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2065,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:17"},"scope":2216,"src":"2078:378:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2116,"nodeType":"Block","src":"2598:175:17","statements":[{"assignments":[2095],"declarations":[{"constant":false,"id":2095,"mutability":"mutable","name":"result","nameLocation":"2616:6:17","nodeType":"VariableDeclaration","scope":2116,"src":"2608:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2094,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2105,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2100,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"2652:4:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}],"expression":{"id":2098,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"2633:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2005_$","typeString":"type(ShortString)"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:17","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:17","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2005_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2096,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:17","typeDescriptions":{}}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2106,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"2679:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:17","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2113,"nodeType":"IfStatement","src":"2675:69:17","trueBody":{"id":2112,"nodeType":"Block","src":"2692:52:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2109,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"2713:18:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2111,"nodeType":"RevertStatement","src":"2706:27:17"}]}},{"expression":{"id":2114,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"2760:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2093,"id":2115,"nodeType":"Return","src":"2753:13:17"}]},"documentation":{"id":2086,"nodeType":"StructuredDocumentation","src":"2462:61:17","text":" @dev Return the length of a `ShortString`."},"id":2117,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:17","nodeType":"FunctionDefinition","parameters":{"id":2090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2089,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:17","nodeType":"VariableDeclaration","scope":2117,"src":"2548:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"},"typeName":{"id":2088,"nodeType":"UserDefinedTypeName","pathNode":{"id":2087,"name":"ShortString","nameLocations":["2548:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2005,"src":"2548:11:17"},"referencedDeclaration":2005,"src":"2548:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:17"},"returnParameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2117,"src":"2589:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2091,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:17"},"scope":2216,"src":"2528:245:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2156,"nodeType":"Block","src":"2996:231:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"3016:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2128,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:17","typeDescriptions":{}}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:17","memberName":"length","nodeType":"MemberAccess","src":"3010:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2154,"nodeType":"Block","src":"3094:127:17","statements":[{"expression":{"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2143,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"3134:5:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2140,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"3108:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2340_$","typeString":"type(library StorageSlot)"}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:17","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2317,"src":"3108:25:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2237_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2237_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:17","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2236,"src":"3108:38:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"3149:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2148,"nodeType":"ExpressionStatement","src":"3108:46:17"},{"expression":{"arguments":[{"id":2151,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"3192:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2149,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"3175:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2005_$","typeString":"type(ShortString)"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:17","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:17","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2005_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}},"functionReturnParameters":2127,"id":2153,"nodeType":"Return","src":"3168:42:17"}]},"id":2155,"nodeType":"IfStatement","src":"3006:215:17","trueBody":{"id":2139,"nodeType":"Block","src":"3036:52:17","statements":[{"expression":{"arguments":[{"id":2136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"3071:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2135,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"3057:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2005_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}},"functionReturnParameters":2127,"id":2138,"nodeType":"Return","src":"3050:27:17"}]}}]},"documentation":{"id":2118,"nodeType":"StructuredDocumentation","src":"2779:103:17","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2157,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:17","nodeType":"FunctionDefinition","parameters":{"id":2123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2120,"mutability":"mutable","name":"value","nameLocation":"2936:5:17","nodeType":"VariableDeclaration","scope":2157,"src":"2922:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2119,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2122,"mutability":"mutable","name":"store","nameLocation":"2958:5:17","nodeType":"VariableDeclaration","scope":2157,"src":"2943:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2121,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:17"},"returnParameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2157,"src":"2983:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"},"typeName":{"id":2125,"nodeType":"UserDefinedTypeName","pathNode":{"id":2124,"name":"ShortString","nameLocations":["2983:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2005,"src":"2983:11:17"},"referencedDeclaration":2005,"src":"2983:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:17"},"scope":2216,"src":"2887:340:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2183,"nodeType":"Block","src":"3477:158:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"3510:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}],"expression":{"id":2168,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"3491:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2005_$","typeString":"type(ShortString)"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3503:6:17","memberName":"unwrap","nodeType":"MemberAccess","src":"3491:18:17","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2005_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2172,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"3520:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3491:46:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2181,"nodeType":"Block","src":"3592:37:17","statements":[{"expression":{"id":2179,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"3613:5:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2167,"id":2180,"nodeType":"Return","src":"3606:12:17"}]},"id":2182,"nodeType":"IfStatement","src":"3487:142:17","trueBody":{"id":2178,"nodeType":"Block","src":"3539:47:17","statements":[{"expression":{"arguments":[{"id":2175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"3569:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}],"id":2174,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"3560:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2005_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2167,"id":2177,"nodeType":"Return","src":"3553:22:17"}]}}]},"documentation":{"id":2158,"nodeType":"StructuredDocumentation","src":"3233:130:17","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}."},"id":2184,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3377:20:17","nodeType":"FunctionDefinition","parameters":{"id":2164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"value","nameLocation":"3410:5:17","nodeType":"VariableDeclaration","scope":2184,"src":"3398:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"},"typeName":{"id":2160,"nodeType":"UserDefinedTypeName","pathNode":{"id":2159,"name":"ShortString","nameLocations":["3398:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2005,"src":"3398:11:17"},"referencedDeclaration":2005,"src":"3398:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2163,"mutability":"mutable","name":"store","nameLocation":"3432:5:17","nodeType":"VariableDeclaration","scope":2184,"src":"3417:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2162,"name":"string","nodeType":"ElementaryTypeName","src":"3417:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3397:41:17"},"returnParameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2184,"src":"3462:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2165,"name":"string","nodeType":"ElementaryTypeName","src":"3462:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3461:15:17"},"scope":2216,"src":"3368:267:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2214,"nodeType":"Block","src":"4125:174:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"4158:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}],"expression":{"id":2195,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"4139:11:17","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2005_$","typeString":"type(ShortString)"}},"id":2196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4151:6:17","memberName":"unwrap","nodeType":"MemberAccess","src":"4139:18:17","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2005_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4139:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2199,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"4168:17:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4139:46:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2212,"nodeType":"Block","src":"4242:51:17","statements":[{"expression":{"expression":{"arguments":[{"id":2208,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"4269:5:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2206,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:17","typeDescriptions":{}}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4276:6:17","memberName":"length","nodeType":"MemberAccess","src":"4263:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2194,"id":2211,"nodeType":"Return","src":"4256:26:17"}]},"id":2213,"nodeType":"IfStatement","src":"4135:158:17","trueBody":{"id":2205,"nodeType":"Block","src":"4187:49:17","statements":[{"expression":{"arguments":[{"id":2202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"4219:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}],"id":2201,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"4208:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2005_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4208:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2194,"id":2204,"nodeType":"Return","src":"4201:24:17"}]}}]},"documentation":{"id":2185,"nodeType":"StructuredDocumentation","src":"3641:374:17","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {toShortStringWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2215,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4029:22:17","nodeType":"FunctionDefinition","parameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2188,"mutability":"mutable","name":"value","nameLocation":"4064:5:17","nodeType":"VariableDeclaration","scope":2215,"src":"4052:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"},"typeName":{"id":2187,"nodeType":"UserDefinedTypeName","pathNode":{"id":2186,"name":"ShortString","nameLocations":["4052:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2005,"src":"4052:11:17"},"referencedDeclaration":2005,"src":"4052:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2190,"mutability":"mutable","name":"store","nameLocation":"4086:5:17","nodeType":"VariableDeclaration","scope":2215,"src":"4071:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2189,"name":"string","nodeType":"ElementaryTypeName","src":"4071:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4051:41:17"},"returnParameters":{"id":2194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2215,"src":"4116:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2192,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:9:17"},"scope":2216,"src":"4020:279:17","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2217,"src":"1255:3046:17","usedErrors":[2013,2015],"usedEvents":[]}],"src":"106:4196:17"},"id":17},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2340]},"id":2341,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2218,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2219,"nodeType":"StructuredDocumentation","src":"219:1187:18","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":2340,"linearizedBaseContracts":[2340],"name":"StorageSlot","nameLocation":"1415:11:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2222,"members":[{"constant":false,"id":2221,"mutability":"mutable","name":"value","nameLocation":"1470:5:18","nodeType":"VariableDeclaration","scope":2222,"src":"1462:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2220,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:18","nodeType":"StructDefinition","scope":2340,"src":"1433:49:18","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2225,"members":[{"constant":false,"id":2224,"mutability":"mutable","name":"value","nameLocation":"1522:5:18","nodeType":"VariableDeclaration","scope":2225,"src":"1517:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2223,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:18","nodeType":"StructDefinition","scope":2340,"src":"1488:46:18","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2228,"members":[{"constant":false,"id":2227,"mutability":"mutable","name":"value","nameLocation":"1577:5:18","nodeType":"VariableDeclaration","scope":2228,"src":"1569:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:18","nodeType":"StructDefinition","scope":2340,"src":"1540:49:18","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2231,"members":[{"constant":false,"id":2230,"mutability":"mutable","name":"value","nameLocation":"1632:5:18","nodeType":"VariableDeclaration","scope":2231,"src":"1624:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2229,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:18","nodeType":"StructDefinition","scope":2340,"src":"1595:49:18","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":2234,"members":[{"constant":false,"id":2233,"mutability":"mutable","name":"value","nameLocation":"1685:5:18","nodeType":"VariableDeclaration","scope":2234,"src":"1678:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2232,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:18","nodeType":"StructDefinition","scope":2340,"src":"1650:47:18","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2237,"members":[{"constant":false,"id":2236,"mutability":"mutable","name":"value","nameLocation":"1738:5:18","nodeType":"VariableDeclaration","scope":2237,"src":"1731:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2235,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:18","nodeType":"StructDefinition","scope":2340,"src":"1703:47:18","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2240,"members":[{"constant":false,"id":2239,"mutability":"mutable","name":"value","nameLocation":"1789:5:18","nodeType":"VariableDeclaration","scope":2240,"src":"1783:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2238,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:18","nodeType":"StructDefinition","scope":2340,"src":"1756:45:18","visibility":"public"},{"body":{"id":2250,"nodeType":"Block","src":"1983:79:18","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:18","statements":[{"nodeType":"YulAssignment","src":"2032:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2247,"isOffset":false,"isSlot":true,"src":"2032:6:18","suffix":"slot","valueSize":1},{"declaration":2243,"isOffset":false,"isSlot":false,"src":"2042:4:18","valueSize":1}],"flags":["memory-safe"],"id":2249,"nodeType":"InlineAssembly","src":"1993:63:18"}]},"documentation":{"id":2241,"nodeType":"StructuredDocumentation","src":"1807:87:18","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2251,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:18","nodeType":"FunctionDefinition","parameters":{"id":2244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2243,"mutability":"mutable","name":"slot","nameLocation":"1931:4:18","nodeType":"VariableDeclaration","scope":2251,"src":"1923:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:18"},"returnParameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"r","nameLocation":"1980:1:18","nodeType":"VariableDeclaration","scope":2251,"src":"1960:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2222_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2246,"nodeType":"UserDefinedTypeName","pathNode":{"id":2245,"name":"AddressSlot","nameLocations":["1960:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2222,"src":"1960:11:18"},"referencedDeclaration":2222,"src":"1960:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2222_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:18"},"scope":2340,"src":"1899:163:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2261,"nodeType":"Block","src":"2243:79:18","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:18","statements":[{"nodeType":"YulAssignment","src":"2292:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2258,"isOffset":false,"isSlot":true,"src":"2292:6:18","suffix":"slot","valueSize":1},{"declaration":2254,"isOffset":false,"isSlot":false,"src":"2302:4:18","valueSize":1}],"flags":["memory-safe"],"id":2260,"nodeType":"InlineAssembly","src":"2253:63:18"}]},"documentation":{"id":2252,"nodeType":"StructuredDocumentation","src":"2068:86:18","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":2262,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:18","nodeType":"FunctionDefinition","parameters":{"id":2255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2254,"mutability":"mutable","name":"slot","nameLocation":"2191:4:18","nodeType":"VariableDeclaration","scope":2262,"src":"2183:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:18"},"returnParameters":{"id":2259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"r","nameLocation":"2240:1:18","nodeType":"VariableDeclaration","scope":2262,"src":"2220:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2225_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2257,"nodeType":"UserDefinedTypeName","pathNode":{"id":2256,"name":"BooleanSlot","nameLocations":["2220:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2225,"src":"2220:11:18"},"referencedDeclaration":2225,"src":"2220:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2225_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:18"},"scope":2340,"src":"2159:163:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2272,"nodeType":"Block","src":"2503:79:18","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:18","statements":[{"nodeType":"YulAssignment","src":"2552:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2269,"isOffset":false,"isSlot":true,"src":"2552:6:18","suffix":"slot","valueSize":1},{"declaration":2265,"isOffset":false,"isSlot":false,"src":"2562:4:18","valueSize":1}],"flags":["memory-safe"],"id":2271,"nodeType":"InlineAssembly","src":"2513:63:18"}]},"documentation":{"id":2263,"nodeType":"StructuredDocumentation","src":"2328:86:18","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":2273,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:18","nodeType":"FunctionDefinition","parameters":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2265,"mutability":"mutable","name":"slot","nameLocation":"2451:4:18","nodeType":"VariableDeclaration","scope":2273,"src":"2443:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:18"},"returnParameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2269,"mutability":"mutable","name":"r","nameLocation":"2500:1:18","nodeType":"VariableDeclaration","scope":2273,"src":"2480:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2228_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2268,"nodeType":"UserDefinedTypeName","pathNode":{"id":2267,"name":"Bytes32Slot","nameLocations":["2480:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2228,"src":"2480:11:18"},"referencedDeclaration":2228,"src":"2480:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2228_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:18"},"scope":2340,"src":"2419:163:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2283,"nodeType":"Block","src":"2763:79:18","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:18","statements":[{"nodeType":"YulAssignment","src":"2812:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2280,"isOffset":false,"isSlot":true,"src":"2812:6:18","suffix":"slot","valueSize":1},{"declaration":2276,"isOffset":false,"isSlot":false,"src":"2822:4:18","valueSize":1}],"flags":["memory-safe"],"id":2282,"nodeType":"InlineAssembly","src":"2773:63:18"}]},"documentation":{"id":2274,"nodeType":"StructuredDocumentation","src":"2588:86:18","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":2284,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:18","nodeType":"FunctionDefinition","parameters":{"id":2277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2276,"mutability":"mutable","name":"slot","nameLocation":"2711:4:18","nodeType":"VariableDeclaration","scope":2284,"src":"2703:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:18"},"returnParameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"r","nameLocation":"2760:1:18","nodeType":"VariableDeclaration","scope":2284,"src":"2740:21:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2231_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2279,"nodeType":"UserDefinedTypeName","pathNode":{"id":2278,"name":"Uint256Slot","nameLocations":["2740:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2231,"src":"2740:11:18"},"referencedDeclaration":2231,"src":"2740:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2231_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:18"},"scope":2340,"src":"2679:163:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2294,"nodeType":"Block","src":"3020:79:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:18","statements":[{"nodeType":"YulAssignment","src":"3069:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2291,"isOffset":false,"isSlot":true,"src":"3069:6:18","suffix":"slot","valueSize":1},{"declaration":2287,"isOffset":false,"isSlot":false,"src":"3079:4:18","valueSize":1}],"flags":["memory-safe"],"id":2293,"nodeType":"InlineAssembly","src":"3030:63:18"}]},"documentation":{"id":2285,"nodeType":"StructuredDocumentation","src":"2848:85:18","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":2295,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:18","nodeType":"FunctionDefinition","parameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"slot","nameLocation":"2969:4:18","nodeType":"VariableDeclaration","scope":2295,"src":"2961:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:18"},"returnParameters":{"id":2292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"r","nameLocation":"3017:1:18","nodeType":"VariableDeclaration","scope":2295,"src":"2998:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2234_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":2290,"nodeType":"UserDefinedTypeName","pathNode":{"id":2289,"name":"Int256Slot","nameLocations":["2998:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":2234,"src":"2998:10:18"},"referencedDeclaration":2234,"src":"2998:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2234_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:18"},"scope":2340,"src":"2938:161:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2305,"nodeType":"Block","src":"3277:79:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:18","statements":[{"nodeType":"YulAssignment","src":"3326:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2302,"isOffset":false,"isSlot":true,"src":"3326:6:18","suffix":"slot","valueSize":1},{"declaration":2298,"isOffset":false,"isSlot":false,"src":"3336:4:18","valueSize":1}],"flags":["memory-safe"],"id":2304,"nodeType":"InlineAssembly","src":"3287:63:18"}]},"documentation":{"id":2296,"nodeType":"StructuredDocumentation","src":"3105:85:18","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":2306,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:18","nodeType":"FunctionDefinition","parameters":{"id":2299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2298,"mutability":"mutable","name":"slot","nameLocation":"3226:4:18","nodeType":"VariableDeclaration","scope":2306,"src":"3218:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:18"},"returnParameters":{"id":2303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2302,"mutability":"mutable","name":"r","nameLocation":"3274:1:18","nodeType":"VariableDeclaration","scope":2306,"src":"3255:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2237_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2301,"nodeType":"UserDefinedTypeName","pathNode":{"id":2300,"name":"StringSlot","nameLocations":["3255:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":2237,"src":"3255:10:18"},"referencedDeclaration":2237,"src":"3255:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2237_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:18"},"scope":2340,"src":"3195:161:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2316,"nodeType":"Block","src":"3558:85:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:18","statements":[{"nodeType":"YulAssignment","src":"3607:20:18","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2313,"isOffset":false,"isSlot":true,"src":"3607:6:18","suffix":"slot","valueSize":1},{"declaration":2309,"isOffset":false,"isSlot":true,"src":"3617:10:18","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2315,"nodeType":"InlineAssembly","src":"3568:69:18"}]},"documentation":{"id":2307,"nodeType":"StructuredDocumentation","src":"3362:101:18","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2317,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:18","nodeType":"FunctionDefinition","parameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"store","nameLocation":"3506:5:18","nodeType":"VariableDeclaration","scope":2317,"src":"3491:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2308,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:18"},"returnParameters":{"id":2314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2313,"mutability":"mutable","name":"r","nameLocation":"3555:1:18","nodeType":"VariableDeclaration","scope":2317,"src":"3536:20:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2237_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2312,"nodeType":"UserDefinedTypeName","pathNode":{"id":2311,"name":"StringSlot","nameLocations":["3536:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":2237,"src":"3536:10:18"},"referencedDeclaration":2237,"src":"3536:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2237_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:18"},"scope":2340,"src":"3468:175:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2327,"nodeType":"Block","src":"3818:79:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:18","statements":[{"nodeType":"YulAssignment","src":"3867:14:18","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2324,"isOffset":false,"isSlot":true,"src":"3867:6:18","suffix":"slot","valueSize":1},{"declaration":2320,"isOffset":false,"isSlot":false,"src":"3877:4:18","valueSize":1}],"flags":["memory-safe"],"id":2326,"nodeType":"InlineAssembly","src":"3828:63:18"}]},"documentation":{"id":2318,"nodeType":"StructuredDocumentation","src":"3649:84:18","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":2328,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:18","nodeType":"FunctionDefinition","parameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"slot","nameLocation":"3768:4:18","nodeType":"VariableDeclaration","scope":2328,"src":"3760:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:18"},"returnParameters":{"id":2325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2324,"mutability":"mutable","name":"r","nameLocation":"3815:1:18","nodeType":"VariableDeclaration","scope":2328,"src":"3797:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2240_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2323,"nodeType":"UserDefinedTypeName","pathNode":{"id":2322,"name":"BytesSlot","nameLocations":["3797:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":2240,"src":"3797:9:18"},"referencedDeclaration":2240,"src":"3797:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2240_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:18"},"scope":2340,"src":"3738:159:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2338,"nodeType":"Block","src":"4094:85:18","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:18","statements":[{"nodeType":"YulAssignment","src":"4143:20:18","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:18"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2335,"isOffset":false,"isSlot":true,"src":"4143:6:18","suffix":"slot","valueSize":1},{"declaration":2331,"isOffset":false,"isSlot":true,"src":"4153:10:18","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2337,"nodeType":"InlineAssembly","src":"4104:69:18"}]},"documentation":{"id":2329,"nodeType":"StructuredDocumentation","src":"3903:99:18","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2339,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:18","nodeType":"FunctionDefinition","parameters":{"id":2332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2331,"mutability":"mutable","name":"store","nameLocation":"4043:5:18","nodeType":"VariableDeclaration","scope":2339,"src":"4029:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2330,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:18"},"returnParameters":{"id":2336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2335,"mutability":"mutable","name":"r","nameLocation":"4091:1:18","nodeType":"VariableDeclaration","scope":2339,"src":"4073:19:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2240_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2334,"nodeType":"UserDefinedTypeName","pathNode":{"id":2333,"name":"BytesSlot","nameLocations":["4073:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":2240,"src":"4073:9:18"},"referencedDeclaration":2240,"src":"4073:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2240_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:18"},"scope":2340,"src":"4007:172:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2341,"src":"1407:2774:18","usedErrors":[],"usedEvents":[]}],"src":"193:3989:18"},"id":18},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[6036],"SafeCast":[7801],"SignedMath":[7945],"Strings":[3742]},"id":3743,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2342,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2344,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3743,"sourceUnit":6037,"src":"127:37:19","symbolAliases":[{"foreign":{"id":2343,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"135:4:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2346,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3743,"sourceUnit":7802,"src":"165:45:19","symbolAliases":[{"foreign":{"id":2345,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"173:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2348,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3743,"sourceUnit":7946,"src":"211:49:19","symbolAliases":[{"foreign":{"id":2347,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7945,"src":"219:10:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2349,"nodeType":"StructuredDocumentation","src":"262:34:19","text":" @dev String operations."},"fullyImplemented":true,"id":3742,"linearizedBaseContracts":[3742],"name":"Strings","nameLocation":"305:7:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2351,"libraryName":{"id":2350,"name":"SafeCast","nameLocations":["325:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":7801,"src":"325:8:19"},"nodeType":"UsingForDirective","src":"319:21:19"},{"constant":true,"id":2354,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:19","nodeType":"VariableDeclaration","scope":3742,"src":"346:56:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2352,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:19","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2357,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:19","nodeType":"VariableDeclaration","scope":3742,"src":"408:42:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2355,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:19","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":2393,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:19","nodeType":"VariableDeclaration","scope":3742,"src":"456:302:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2358,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":2392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":2387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":2382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":2377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":2372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":2367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2362,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":2365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":2364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:19","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:19","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":2366,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:19","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:19","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":2370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":2369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:19","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":2371,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:19","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:19","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":2375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:19","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:19","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":2376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:19","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:19","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":2380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:19","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:19","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":2381,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:19","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:19","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":2385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:19","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:19","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":2386,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:19","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:19","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":2390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:19","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:19","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":2391,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:19","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:19","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":2394,"nodeType":"StructuredDocumentation","src":"778:81:19","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2400,"name":"StringsInsufficientHexLength","nameLocation":"870:28:19","nodeType":"ErrorDefinition","parameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"value","nameLocation":"907:5:19","nodeType":"VariableDeclaration","scope":2400,"src":"899:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2395,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2398,"mutability":"mutable","name":"length","nameLocation":"922:6:19","nodeType":"VariableDeclaration","scope":2400,"src":"914:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2397,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:19"},"src":"864:66:19"},{"documentation":{"id":2401,"nodeType":"StructuredDocumentation","src":"936:108:19","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2403,"name":"StringsInvalidChar","nameLocation":"1055:18:19","nodeType":"ErrorDefinition","parameters":{"id":2402,"nodeType":"ParameterList","parameters":[],"src":"1073:2:19"},"src":"1049:27:19"},{"documentation":{"id":2404,"nodeType":"StructuredDocumentation","src":"1082:84:19","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2406,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:19","nodeType":"ErrorDefinition","parameters":{"id":2405,"nodeType":"ParameterList","parameters":[],"src":"1204:2:19"},"src":"1171:36:19"},{"body":{"id":2453,"nodeType":"Block","src":"1379:563:19","statements":[{"id":2452,"nodeType":"UncheckedBlock","src":"1389:547:19","statements":[{"assignments":[2415],"declarations":[{"constant":false,"id":2415,"mutability":"mutable","name":"length","nameLocation":"1421:6:19","nodeType":"VariableDeclaration","scope":2452,"src":"1413:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2414,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2422,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"1441:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2416,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"1430:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6036_$","typeString":"type(library Math)"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:19","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5868,"src":"1430:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:19"},{"assignments":[2424],"declarations":[{"constant":false,"id":2424,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:19","nodeType":"VariableDeclaration","scope":2452,"src":"1465:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2423,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2429,"initialValue":{"arguments":[{"id":2427,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"1499:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2425,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:19"},{"assignments":[2431],"declarations":[{"constant":false,"id":2431,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:19","nodeType":"VariableDeclaration","scope":2452,"src":"1520:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2430,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2432,"nodeType":"VariableDeclarationStatement","src":"1520:11:19"},{"AST":{"nodeType":"YulBlock","src":"1570:69:19","statements":[{"nodeType":"YulAssignment","src":"1588:37:19","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1603:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"1611:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1599:3:19"},"nodeType":"YulFunctionCall","src":"1599:17:19"},{"name":"length","nodeType":"YulIdentifier","src":"1618:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:19"},"nodeType":"YulFunctionCall","src":"1595:30:19"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2424,"isOffset":false,"isSlot":false,"src":"1603:6:19","valueSize":1},{"declaration":2415,"isOffset":false,"isSlot":false,"src":"1618:6:19","valueSize":1},{"declaration":2431,"isOffset":false,"isSlot":false,"src":"1588:3:19","valueSize":1}],"flags":["memory-safe"],"id":2433,"nodeType":"InlineAssembly","src":"1545:94:19"},{"body":{"id":2448,"nodeType":"Block","src":"1665:234:19","statements":[{"expression":{"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:19","subExpression":{"id":2435,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"1683:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2437,"nodeType":"ExpressionStatement","src":"1683:5:19"},{"AST":{"nodeType":"YulBlock","src":"1731:86:19","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1761:3:19"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1775:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"1782:2:19","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1771:3:19"},"nodeType":"YulFunctionCall","src":"1771:14:19"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1787:10:19"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1766:4:19"},"nodeType":"YulFunctionCall","src":"1766:32:19"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1753:7:19"},"nodeType":"YulFunctionCall","src":"1753:46:19"},"nodeType":"YulExpressionStatement","src":"1753:46:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":2354,"isOffset":false,"isSlot":false,"src":"1787:10:19","valueSize":1},{"declaration":2431,"isOffset":false,"isSlot":false,"src":"1761:3:19","valueSize":1},{"declaration":2409,"isOffset":false,"isSlot":false,"src":"1775:5:19","valueSize":1}],"flags":["memory-safe"],"id":2438,"nodeType":"InlineAssembly","src":"1706:111:19"},{"expression":{"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"1834:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2442,"nodeType":"ExpressionStatement","src":"1834:11:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"1867:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2447,"nodeType":"IfStatement","src":"1863:21:19","trueBody":{"id":2446,"nodeType":"Break","src":"1879:5:19"}}]},"condition":{"hexValue":"74727565","id":2434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2449,"nodeType":"WhileStatement","src":"1652:247:19"},{"expression":{"id":2450,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"1919:6:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2413,"id":2451,"nodeType":"Return","src":"1912:13:19"}]}]},"documentation":{"id":2407,"nodeType":"StructuredDocumentation","src":"1213:90:19","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2454,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:19","nodeType":"FunctionDefinition","parameters":{"id":2410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2409,"mutability":"mutable","name":"value","nameLocation":"1334:5:19","nodeType":"VariableDeclaration","scope":2454,"src":"1326:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2408,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:19"},"returnParameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2454,"src":"1364:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2411,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:19"},"scope":3742,"src":"1308:634:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2479,"nodeType":"Block","src":"2118:92:19","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"2149:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:19","trueExpression":{"hexValue":"2d","id":2468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"2195:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2472,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7945,"src":"2180:10:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7945_$","typeString":"type(library SignedMath)"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:19","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7944,"src":"2180:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2471,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"2171:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2462,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:19","typeDescriptions":{}}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:19","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:19","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2461,"id":2478,"nodeType":"Return","src":"2128:75:19"}]},"documentation":{"id":2455,"nodeType":"StructuredDocumentation","src":"1948:89:19","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2480,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:19","nodeType":"FunctionDefinition","parameters":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2457,"mutability":"mutable","name":"value","nameLocation":"2073:5:19","nodeType":"VariableDeclaration","scope":2480,"src":"2066:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2456,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:19"},"returnParameters":{"id":2461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2480,"src":"2103:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2459,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:19"},"scope":3742,"src":"2042:168:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2499,"nodeType":"Block","src":"2389:100:19","statements":[{"id":2498,"nodeType":"UncheckedBlock","src":"2399:84:19","statements":[{"expression":{"arguments":[{"id":2489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"2442:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"2461:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2490,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"2449:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6036_$","typeString":"type(library Math)"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:19","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5979,"src":"2449:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2488,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2500,2583,2603],"referencedDeclaration":2583,"src":"2430:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2487,"id":2497,"nodeType":"Return","src":"2423:49:19"}]}]},"documentation":{"id":2481,"nodeType":"StructuredDocumentation","src":"2216:94:19","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2500,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:19","nodeType":"FunctionDefinition","parameters":{"id":2484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"value","nameLocation":"2344:5:19","nodeType":"VariableDeclaration","scope":2500,"src":"2336:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2482,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:19"},"returnParameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2500,"src":"2374:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2485,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:19"},"scope":3742,"src":"2315:174:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2582,"nodeType":"Block","src":"2702:435:19","statements":[{"assignments":[2511],"declarations":[{"constant":false,"id":2511,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:19","nodeType":"VariableDeclaration","scope":2582,"src":"2712:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2513,"initialValue":{"id":2512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"2733:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:19"},{"assignments":[2515],"declarations":[{"constant":false,"id":2515,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:19","nodeType":"VariableDeclaration","scope":2582,"src":"2748:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2514,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2524,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2519,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"2784:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2516,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:19"},{"expression":{"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2525,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"2805:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2527,"indexExpression":{"hexValue":"30","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2530,"nodeType":"ExpressionStatement","src":"2805:15:19"},{"expression":{"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2531,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"2830:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2533,"indexExpression":{"hexValue":"31","id":2532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2536,"nodeType":"ExpressionStatement","src":"2830:15:19"},{"body":{"id":2565,"nodeType":"Block","src":"2900:95:19","statements":[{"expression":{"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2551,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"2914:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2553,"indexExpression":{"id":2552,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"2921:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2554,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"2926:10:19","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2558,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2555,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"2937:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2560,"nodeType":"ExpressionStatement","src":"2914:40:19"},{"expression":{"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2561,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"2968:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2564,"nodeType":"ExpressionStatement","src":"2968:16:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2545,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"2888:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2566,"initializationExpression":{"assignments":[2538],"declarations":[{"constant":false,"id":2538,"mutability":"mutable","name":"i","nameLocation":"2868:1:19","nodeType":"VariableDeclaration","scope":2566,"src":"2860:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2537,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2544,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2540,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"2876:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:19"},"loopExpression":{"expression":{"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:19","subExpression":{"id":2548,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"2897:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2550,"nodeType":"ExpressionStatement","src":"2895:3:19"},"nodeType":"ForStatement","src":"2855:140:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2567,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"3008:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2576,"nodeType":"IfStatement","src":"3004:96:19","trueBody":{"id":2575,"nodeType":"Block","src":"3025:75:19","statements":[{"errorCall":{"arguments":[{"id":2571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"3075:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2572,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"3082:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2570,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"3046:28:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2574,"nodeType":"RevertStatement","src":"3039:50:19"}]}},{"expression":{"arguments":[{"id":2579,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"3123:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2577,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:19","typeDescriptions":{}}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2509,"id":2581,"nodeType":"Return","src":"3109:21:19"}]},"documentation":{"id":2501,"nodeType":"StructuredDocumentation","src":"2495:112:19","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2583,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:19","nodeType":"FunctionDefinition","parameters":{"id":2506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"value","nameLocation":"2641:5:19","nodeType":"VariableDeclaration","scope":2583,"src":"2633:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2502,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2505,"mutability":"mutable","name":"length","nameLocation":"2656:6:19","nodeType":"VariableDeclaration","scope":2583,"src":"2648:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2504,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:19"},"returnParameters":{"id":2509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2583,"src":"2687:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2507,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:19"},"scope":3742,"src":"2612:525:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2602,"nodeType":"Block","src":"3369:75:19","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2596,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"3414:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2594,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:19","typeDescriptions":{}}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2592,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:19","typeDescriptions":{}}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2599,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"3422:14:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2591,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2500,2583,2603],"referencedDeclaration":2583,"src":"3386:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2590,"id":2601,"nodeType":"Return","src":"3379:58:19"}]},"documentation":{"id":2584,"nodeType":"StructuredDocumentation","src":"3143:148:19","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2603,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:19","nodeType":"FunctionDefinition","parameters":{"id":2587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2586,"mutability":"mutable","name":"addr","nameLocation":"3325:4:19","nodeType":"VariableDeclaration","scope":2603,"src":"3317:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2585,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:19"},"returnParameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2603,"src":"3354:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2588,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:19"},"scope":3742,"src":"3296:148:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2667,"nodeType":"Block","src":"3701:642:19","statements":[{"assignments":[2612],"declarations":[{"constant":false,"id":2612,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:19","nodeType":"VariableDeclaration","scope":2667,"src":"3711:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2611,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2619,"initialValue":{"arguments":[{"arguments":[{"id":2616,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"3751:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2615,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2500,2583,2603],"referencedDeclaration":2603,"src":"3739:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2613,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:19","typeDescriptions":{}}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:19"},{"assignments":[2621],"declarations":[{"constant":false,"id":2621,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:19","nodeType":"VariableDeclaration","scope":2667,"src":"3842:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2620,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2622,"nodeType":"VariableDeclarationStatement","src":"3842:17:19"},{"AST":{"nodeType":"YulBlock","src":"3894:78:19","statements":[{"nodeType":"YulAssignment","src":"3908:54:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3925:2:19","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3943:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3951:4:19","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3939:3:19"},"nodeType":"YulFunctionCall","src":"3939:17:19"},{"kind":"number","nodeType":"YulLiteral","src":"3958:2:19","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3929:9:19"},"nodeType":"YulFunctionCall","src":"3929:32:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3921:3:19"},"nodeType":"YulFunctionCall","src":"3921:41:19"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3908:9:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2612,"isOffset":false,"isSlot":false,"src":"3943:6:19","valueSize":1},{"declaration":2621,"isOffset":false,"isSlot":false,"src":"3908:9:19","valueSize":1}],"flags":["memory-safe"],"id":2623,"nodeType":"InlineAssembly","src":"3869:103:19"},{"body":{"id":2660,"nodeType":"Block","src":"4015:291:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2634,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"4121:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:19","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2641,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"4150:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2643,"indexExpression":{"id":2642,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"4157:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2639,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:19","typeDescriptions":{}}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2655,"nodeType":"IfStatement","src":"4117:150:19","trueBody":{"id":2654,"nodeType":"Block","src":"4167:100:19","statements":[{"expression":{"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2648,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"4235:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2650,"indexExpression":{"id":2649,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"4242:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2653,"nodeType":"ExpressionStatement","src":"4235:17:19"}]}},{"expression":{"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2656,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"4280:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2659,"nodeType":"ExpressionStatement","src":"4280:15:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2628,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"4003:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2661,"initializationExpression":{"assignments":[2625],"declarations":[{"constant":false,"id":2625,"mutability":"mutable","name":"i","nameLocation":"3995:1:19","nodeType":"VariableDeclaration","scope":2661,"src":"3987:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2624,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2627,"initialValue":{"hexValue":"3431","id":2626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:19","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:19"},"loopExpression":{"expression":{"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:19","subExpression":{"id":2631,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"4012:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2633,"nodeType":"ExpressionStatement","src":"4010:3:19"},"nodeType":"ForStatement","src":"3982:324:19"},{"expression":{"arguments":[{"id":2664,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"4329:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2662,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:19","typeDescriptions":{}}},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2610,"id":2666,"nodeType":"Return","src":"4315:21:19"}]},"documentation":{"id":2604,"nodeType":"StructuredDocumentation","src":"3450:165:19","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2668,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:19","nodeType":"FunctionDefinition","parameters":{"id":2607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2606,"mutability":"mutable","name":"addr","nameLocation":"3657:4:19","nodeType":"VariableDeclaration","scope":2668,"src":"3649:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2605,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:19"},"returnParameters":{"id":2610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2668,"src":"3686:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2608,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:19"},"scope":3742,"src":"3620:723:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2704,"nodeType":"Block","src":"4498:104:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2680,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"4521:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2678,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:19","typeDescriptions":{}}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:19","memberName":"length","nodeType":"MemberAccess","src":"4515:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2685,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"4540:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2683,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:19","typeDescriptions":{}}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:19","memberName":"length","nodeType":"MemberAccess","src":"4534:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2692,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"4569:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2690,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:19","typeDescriptions":{}}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2689,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2698,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"4592:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2696,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:19","typeDescriptions":{}}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2695,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2677,"id":2703,"nodeType":"Return","src":"4508:87:19"}]},"documentation":{"id":2669,"nodeType":"StructuredDocumentation","src":"4349:66:19","text":" @dev Returns true if the two strings are equal."},"id":2705,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:19","nodeType":"FunctionDefinition","parameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"a","nameLocation":"4449:1:19","nodeType":"VariableDeclaration","scope":2705,"src":"4435:15:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2670,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2673,"mutability":"mutable","name":"b","nameLocation":"4466:1:19","nodeType":"VariableDeclaration","scope":2705,"src":"4452:15:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2672,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:19"},"returnParameters":{"id":2677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2705,"src":"4492:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2675,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:19"},"scope":3742,"src":"4420:182:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2723,"nodeType":"Block","src":"4899:64:19","statements":[{"expression":{"arguments":[{"id":2714,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"4926:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2718,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"4942:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2716,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:19","typeDescriptions":{}}},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:19","memberName":"length","nodeType":"MemberAccess","src":"4936:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2713,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2724,2755],"referencedDeclaration":2755,"src":"4916:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2712,"id":2722,"nodeType":"Return","src":"4909:47:19"}]},"documentation":{"id":2706,"nodeType":"StructuredDocumentation","src":"4608:214:19","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2724,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:19","nodeType":"FunctionDefinition","parameters":{"id":2709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2708,"mutability":"mutable","name":"input","nameLocation":"4860:5:19","nodeType":"VariableDeclaration","scope":2724,"src":"4846:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2707,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:19"},"returnParameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2724,"src":"4890:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2710,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:19"},"scope":3742,"src":"4827:136:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2754,"nodeType":"Block","src":"5368:153:19","statements":[{"assignments":[2737,2739],"declarations":[{"constant":false,"id":2737,"mutability":"mutable","name":"success","nameLocation":"5384:7:19","nodeType":"VariableDeclaration","scope":2754,"src":"5379:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2736,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2739,"mutability":"mutable","name":"value","nameLocation":"5401:5:19","nodeType":"VariableDeclaration","scope":2754,"src":"5393:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2738,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2745,"initialValue":{"arguments":[{"id":2741,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"5423:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2742,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"5430:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2743,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"5437:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2740,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2776,2813],"referencedDeclaration":2813,"src":"5410:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:19"},{"condition":{"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:19","subExpression":{"id":2746,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"5456:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2751,"nodeType":"IfStatement","src":"5451:41:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2748,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"5472:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2750,"nodeType":"RevertStatement","src":"5465:27:19"}},{"expression":{"id":2752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"5509:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2735,"id":2753,"nodeType":"Return","src":"5502:12:19"}]},"documentation":{"id":2725,"nodeType":"StructuredDocumentation","src":"4969:294:19","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2755,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:19","nodeType":"FunctionDefinition","parameters":{"id":2732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2727,"mutability":"mutable","name":"input","nameLocation":"5301:5:19","nodeType":"VariableDeclaration","scope":2755,"src":"5287:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2726,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2729,"mutability":"mutable","name":"begin","nameLocation":"5316:5:19","nodeType":"VariableDeclaration","scope":2755,"src":"5308:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2728,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2731,"mutability":"mutable","name":"end","nameLocation":"5331:3:19","nodeType":"VariableDeclaration","scope":2755,"src":"5323:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2730,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:19"},"returnParameters":{"id":2735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2755,"src":"5359:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2733,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:19"},"scope":3742,"src":"5268:253:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2775,"nodeType":"Block","src":"5842:83:19","statements":[{"expression":{"arguments":[{"id":2766,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"5888:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2770,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"5904:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2768,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:19","typeDescriptions":{}}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:19","memberName":"length","nodeType":"MemberAccess","src":"5898:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2765,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"5859:28:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2764,"id":2774,"nodeType":"Return","src":"5852:66:19"}]},"documentation":{"id":2756,"nodeType":"StructuredDocumentation","src":"5527:215:19","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2776,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:19","nodeType":"FunctionDefinition","parameters":{"id":2759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2758,"mutability":"mutable","name":"input","nameLocation":"5783:5:19","nodeType":"VariableDeclaration","scope":2776,"src":"5769:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2757,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:19"},"returnParameters":{"id":2764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"success","nameLocation":"5818:7:19","nodeType":"VariableDeclaration","scope":2776,"src":"5813:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2760,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2763,"mutability":"mutable","name":"value","nameLocation":"5835:5:19","nodeType":"VariableDeclaration","scope":2776,"src":"5827:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2762,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:19"},"scope":3742,"src":"5747:178:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2812,"nodeType":"Block","src":"6327:144:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2790,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"6341:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2793,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"6353:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2791,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:19","typeDescriptions":{}}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:19","memberName":"length","nodeType":"MemberAccess","src":"6347:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2797,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"6370:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2798,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"6378:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2805,"nodeType":"IfStatement","src":"6337:63:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2789,"id":2804,"nodeType":"Return","src":"6383:17:19"}},{"expression":{"arguments":[{"id":2807,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"6446:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2808,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"6453:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2809,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"6460:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2806,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"6417:28:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2789,"id":2811,"nodeType":"Return","src":"6410:54:19"}]},"documentation":{"id":2777,"nodeType":"StructuredDocumentation","src":"5931:238:19","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2813,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:19","nodeType":"FunctionDefinition","parameters":{"id":2784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2779,"mutability":"mutable","name":"input","nameLocation":"6219:5:19","nodeType":"VariableDeclaration","scope":2813,"src":"6205:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2778,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2781,"mutability":"mutable","name":"begin","nameLocation":"6242:5:19","nodeType":"VariableDeclaration","scope":2813,"src":"6234:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2780,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2783,"mutability":"mutable","name":"end","nameLocation":"6265:3:19","nodeType":"VariableDeclaration","scope":2813,"src":"6257:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2782,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:19"},"returnParameters":{"id":2789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2786,"mutability":"mutable","name":"success","nameLocation":"6303:7:19","nodeType":"VariableDeclaration","scope":2813,"src":"6298:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2785,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2788,"mutability":"mutable","name":"value","nameLocation":"6320:5:19","nodeType":"VariableDeclaration","scope":2813,"src":"6312:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2787,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:19"},"scope":3742,"src":"6174:297:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2882,"nodeType":"Block","src":"6874:347:19","statements":[{"assignments":[2828],"declarations":[{"constant":false,"id":2828,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:19","nodeType":"VariableDeclaration","scope":2882,"src":"6884:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2827,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2833,"initialValue":{"arguments":[{"id":2831,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"6912:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2829,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:19","typeDescriptions":{}}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:19"},{"assignments":[2835],"declarations":[{"constant":false,"id":2835,"mutability":"mutable","name":"result","nameLocation":"6937:6:19","nodeType":"VariableDeclaration","scope":2882,"src":"6929:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2834,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2837,"initialValue":{"hexValue":"30","id":2836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:19"},{"body":{"id":2876,"nodeType":"Block","src":"6995:189:19","statements":[{"assignments":[2849],"declarations":[{"constant":false,"id":2849,"mutability":"mutable","name":"chr","nameLocation":"7015:3:19","nodeType":"VariableDeclaration","scope":2876,"src":"7009:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2848,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2859,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2854,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"7064:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2855,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"7072:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2853,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"7041:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2851,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:19","typeDescriptions":{}}},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2850,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"7021:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2860,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"7094:3:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:19","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2867,"nodeType":"IfStatement","src":"7090:30:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2865,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2826,"id":2866,"nodeType":"Return","src":"7103:17:19"}},{"expression":{"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2868,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"7134:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2871,"nodeType":"ExpressionStatement","src":"7134:12:19"},{"expression":{"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2872,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"7160:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2873,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"7170:3:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2875,"nodeType":"ExpressionStatement","src":"7160:13:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2842,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"6981:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2843,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"6985:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2877,"initializationExpression":{"assignments":[2839],"declarations":[{"constant":false,"id":2839,"mutability":"mutable","name":"i","nameLocation":"6970:1:19","nodeType":"VariableDeclaration","scope":2877,"src":"6962:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2838,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2841,"initialValue":{"id":2840,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"6974:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:19"},"loopExpression":{"expression":{"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:19","subExpression":{"id":2845,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"6992:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2847,"nodeType":"ExpressionStatement","src":"6990:3:19"},"nodeType":"ForStatement","src":"6957:227:19"},{"expression":{"components":[{"hexValue":"74727565","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2879,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"7207:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2880,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2826,"id":2881,"nodeType":"Return","src":"7193:21:19"}]},"documentation":{"id":2814,"nodeType":"StructuredDocumentation","src":"6477:224:19","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2883,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:19","nodeType":"FunctionDefinition","parameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2816,"mutability":"mutable","name":"input","nameLocation":"6767:5:19","nodeType":"VariableDeclaration","scope":2883,"src":"6753:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2815,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2818,"mutability":"mutable","name":"begin","nameLocation":"6790:5:19","nodeType":"VariableDeclaration","scope":2883,"src":"6782:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2817,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2820,"mutability":"mutable","name":"end","nameLocation":"6813:3:19","nodeType":"VariableDeclaration","scope":2883,"src":"6805:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2819,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:19"},"returnParameters":{"id":2826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"success","nameLocation":"6850:7:19","nodeType":"VariableDeclaration","scope":2883,"src":"6845:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2822,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2825,"mutability":"mutable","name":"value","nameLocation":"6867:5:19","nodeType":"VariableDeclaration","scope":2883,"src":"6859:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2824,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:19"},"scope":3742,"src":"6706:515:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2901,"nodeType":"Block","src":"7518:63:19","statements":[{"expression":{"arguments":[{"id":2892,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"7544:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2896,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"7560:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2894,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:19","typeDescriptions":{}}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:19","memberName":"length","nodeType":"MemberAccess","src":"7554:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2891,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2902,2933],"referencedDeclaration":2933,"src":"7535:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2890,"id":2900,"nodeType":"Return","src":"7528:46:19"}]},"documentation":{"id":2884,"nodeType":"StructuredDocumentation","src":"7227:216:19","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2902,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:19","nodeType":"FunctionDefinition","parameters":{"id":2887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2886,"mutability":"mutable","name":"input","nameLocation":"7480:5:19","nodeType":"VariableDeclaration","scope":2902,"src":"7466:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2885,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:19"},"returnParameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2902,"src":"7510:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2888,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:19"},"scope":3742,"src":"7448:133:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2932,"nodeType":"Block","src":"7986:151:19","statements":[{"assignments":[2915,2917],"declarations":[{"constant":false,"id":2915,"mutability":"mutable","name":"success","nameLocation":"8002:7:19","nodeType":"VariableDeclaration","scope":2932,"src":"7997:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2914,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2917,"mutability":"mutable","name":"value","nameLocation":"8018:5:19","nodeType":"VariableDeclaration","scope":2932,"src":"8011:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2916,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2923,"initialValue":{"arguments":[{"id":2919,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"8039:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2920,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"8046:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2921,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"8053:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2918,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2954,2996],"referencedDeclaration":2996,"src":"8027:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:19"},{"condition":{"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:19","subExpression":{"id":2924,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"8072:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2929,"nodeType":"IfStatement","src":"8067:41:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2926,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"8088:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2928,"nodeType":"RevertStatement","src":"8081:27:19"}},{"expression":{"id":2930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"8125:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2913,"id":2931,"nodeType":"Return","src":"8118:12:19"}]},"documentation":{"id":2903,"nodeType":"StructuredDocumentation","src":"7587:296:19","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2933,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:19","nodeType":"FunctionDefinition","parameters":{"id":2910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2905,"mutability":"mutable","name":"input","nameLocation":"7920:5:19","nodeType":"VariableDeclaration","scope":2933,"src":"7906:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2904,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2907,"mutability":"mutable","name":"begin","nameLocation":"7935:5:19","nodeType":"VariableDeclaration","scope":2933,"src":"7927:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2906,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2909,"mutability":"mutable","name":"end","nameLocation":"7950:3:19","nodeType":"VariableDeclaration","scope":2933,"src":"7942:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2908,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:19"},"returnParameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2933,"src":"7978:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2911,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:19"},"scope":3742,"src":"7888:249:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2953,"nodeType":"Block","src":"8528:82:19","statements":[{"expression":{"arguments":[{"id":2944,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"8573:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2948,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"8589:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2946,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:19","typeDescriptions":{}}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:19","memberName":"length","nodeType":"MemberAccess","src":"8583:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2943,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"8545:27:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2942,"id":2952,"nodeType":"Return","src":"8538:65:19"}]},"documentation":{"id":2934,"nodeType":"StructuredDocumentation","src":"8143:287:19","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2954,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:19","nodeType":"FunctionDefinition","parameters":{"id":2937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2936,"mutability":"mutable","name":"input","nameLocation":"8470:5:19","nodeType":"VariableDeclaration","scope":2954,"src":"8456:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2935,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:19"},"returnParameters":{"id":2942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2939,"mutability":"mutable","name":"success","nameLocation":"8505:7:19","nodeType":"VariableDeclaration","scope":2954,"src":"8500:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2938,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2941,"mutability":"mutable","name":"value","nameLocation":"8521:5:19","nodeType":"VariableDeclaration","scope":2954,"src":"8514:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2940,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:19"},"scope":3742,"src":"8435:175:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2959,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:19","nodeType":"VariableDeclaration","scope":3742,"src":"8616:50:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2955,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2995,"nodeType":"Block","src":"9132:143:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2973,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"9146:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2976,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"9158:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2974,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:19","typeDescriptions":{}}},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:19","memberName":"length","nodeType":"MemberAccess","src":"9152:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2980,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"9175:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2981,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"9183:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2988,"nodeType":"IfStatement","src":"9142:63:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2986,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2972,"id":2987,"nodeType":"Return","src":"9188:17:19"}},{"expression":{"arguments":[{"id":2990,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"9250:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2991,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"9257:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2992,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"9264:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2989,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"9222:27:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2972,"id":2994,"nodeType":"Return","src":"9215:53:19"}]},"documentation":{"id":2960,"nodeType":"StructuredDocumentation","src":"8673:303:19","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2996,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:19","nodeType":"FunctionDefinition","parameters":{"id":2967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2962,"mutability":"mutable","name":"input","nameLocation":"9025:5:19","nodeType":"VariableDeclaration","scope":2996,"src":"9011:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2961,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2964,"mutability":"mutable","name":"begin","nameLocation":"9048:5:19","nodeType":"VariableDeclaration","scope":2996,"src":"9040:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2963,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2966,"mutability":"mutable","name":"end","nameLocation":"9071:3:19","nodeType":"VariableDeclaration","scope":2996,"src":"9063:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2965,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:19"},"returnParameters":{"id":2972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2969,"mutability":"mutable","name":"success","nameLocation":"9109:7:19","nodeType":"VariableDeclaration","scope":2996,"src":"9104:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2968,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2971,"mutability":"mutable","name":"value","nameLocation":"9125:5:19","nodeType":"VariableDeclaration","scope":2996,"src":"9118:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2970,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:19"},"scope":3742,"src":"8981:294:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3116,"nodeType":"Block","src":"9675:812:19","statements":[{"assignments":[3011],"declarations":[{"constant":false,"id":3011,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:19","nodeType":"VariableDeclaration","scope":3116,"src":"9685:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3010,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3016,"initialValue":{"arguments":[{"id":3014,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"9713:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3012,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:19","typeDescriptions":{}}},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:19"},{"assignments":[3018],"declarations":[{"constant":false,"id":3018,"mutability":"mutable","name":"sign","nameLocation":"9783:4:19","nodeType":"VariableDeclaration","scope":3116,"src":"9776:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3017,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3034,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3019,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"9790:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3020,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"9799:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":3029,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"9847:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3030,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"9855:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3028,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"9824:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3026,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:19","typeDescriptions":{}}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:19","trueExpression":{"arguments":[{"hexValue":"30","id":3024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3022,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:19","typeDescriptions":{}}},"id":3025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:19"},{"assignments":[3036],"declarations":[{"constant":false,"id":3036,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:19","nodeType":"VariableDeclaration","scope":3116,"src":"9943:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3035,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3043,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3037,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"9963:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":3039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3038,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:19","typeDescriptions":{}}},"id":3041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:19"},{"assignments":[3045],"declarations":[{"constant":false,"id":3045,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:19","nodeType":"VariableDeclaration","scope":3116,"src":"9992:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3044,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3052,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3046,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"10012:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":3048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3047,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:19","typeDescriptions":{}}},"id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:19"},{"assignments":[3054],"declarations":[{"constant":false,"id":3054,"mutability":"mutable","name":"offset","nameLocation":"10049:6:19","nodeType":"VariableDeclaration","scope":3116,"src":"10041:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3053,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3061,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3055,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"10059:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3056,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"10075:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3058,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"10058:37:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:19"},{"assignments":[3063,3065],"declarations":[{"constant":false,"id":3063,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:19","nodeType":"VariableDeclaration","scope":3116,"src":"10109:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3062,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3065,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:19","nodeType":"VariableDeclaration","scope":3116,"src":"10126:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3064,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3073,"initialValue":{"arguments":[{"id":3067,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"10159:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3068,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"10166:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3069,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"10174:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3071,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"10182:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3066,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2776,2813],"referencedDeclaration":2813,"src":"10146:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3074,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"10201:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3075,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"10215:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3076,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"10226:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3094,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"10343:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3095,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"10357:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3097,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"10373:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3098,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"10385:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3112,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3009,"id":3113,"nodeType":"Return","src":"10463:17:19"},"id":3114,"nodeType":"IfStatement","src":"10339:141:19","trueBody":{"id":3109,"nodeType":"Block","src":"10401:56:19","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":3104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3103,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3102,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:19","memberName":"min","nodeType":"MemberAccess","src":"10429:16:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3009,"id":3108,"nodeType":"Return","src":"10415:31:19"}]}},"id":3115,"nodeType":"IfStatement","src":"10197:283:19","trueBody":{"id":3093,"nodeType":"Block","src":"10242:91:19","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":3080,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"10270:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3088,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"10312:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3086,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:19","typeDescriptions":{}}},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:19","trueExpression":{"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:19","subExpression":{"arguments":[{"id":3083,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"10293:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3081,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:19","typeDescriptions":{}}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3091,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3009,"id":3092,"nodeType":"Return","src":"10256:66:19"}]}}]},"documentation":{"id":2997,"nodeType":"StructuredDocumentation","src":"9281:223:19","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3117,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:19","nodeType":"FunctionDefinition","parameters":{"id":3004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2999,"mutability":"mutable","name":"input","nameLocation":"9569:5:19","nodeType":"VariableDeclaration","scope":3117,"src":"9555:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2998,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3001,"mutability":"mutable","name":"begin","nameLocation":"9592:5:19","nodeType":"VariableDeclaration","scope":3117,"src":"9584:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3000,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3003,"mutability":"mutable","name":"end","nameLocation":"9615:3:19","nodeType":"VariableDeclaration","scope":3117,"src":"9607:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3002,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:19"},"returnParameters":{"id":3009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3006,"mutability":"mutable","name":"success","nameLocation":"9652:7:19","nodeType":"VariableDeclaration","scope":3117,"src":"9647:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3005,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3008,"mutability":"mutable","name":"value","nameLocation":"9668:5:19","nodeType":"VariableDeclaration","scope":3117,"src":"9661:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3007,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:19"},"scope":3742,"src":"9509:978:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3135,"nodeType":"Block","src":"10832:67:19","statements":[{"expression":{"arguments":[{"id":3126,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"10862:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3130,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"10878:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3128,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:19","typeDescriptions":{}}},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:19","memberName":"length","nodeType":"MemberAccess","src":"10872:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3125,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[3136,3167],"referencedDeclaration":3167,"src":"10849:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3124,"id":3134,"nodeType":"Return","src":"10842:50:19"}]},"documentation":{"id":3118,"nodeType":"StructuredDocumentation","src":"10493:259:19","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3136,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:19","nodeType":"FunctionDefinition","parameters":{"id":3121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3120,"mutability":"mutable","name":"input","nameLocation":"10793:5:19","nodeType":"VariableDeclaration","scope":3136,"src":"10779:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3119,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:19"},"returnParameters":{"id":3124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3136,"src":"10823:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3122,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:19"},"scope":3742,"src":"10757:142:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3166,"nodeType":"Block","src":"11320:156:19","statements":[{"assignments":[3149,3151],"declarations":[{"constant":false,"id":3149,"mutability":"mutable","name":"success","nameLocation":"11336:7:19","nodeType":"VariableDeclaration","scope":3166,"src":"11331:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3148,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3151,"mutability":"mutable","name":"value","nameLocation":"11353:5:19","nodeType":"VariableDeclaration","scope":3166,"src":"11345:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3150,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3157,"initialValue":{"arguments":[{"id":3153,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"11378:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3154,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"11385:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3155,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"11392:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3152,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3188,3225],"referencedDeclaration":3225,"src":"11362:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:19"},{"condition":{"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:19","subExpression":{"id":3158,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"11411:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3163,"nodeType":"IfStatement","src":"11406:41:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3160,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"11427:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3162,"nodeType":"RevertStatement","src":"11420:27:19"}},{"expression":{"id":3164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"11464:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3147,"id":3165,"nodeType":"Return","src":"11457:12:19"}]},"documentation":{"id":3137,"nodeType":"StructuredDocumentation","src":"10905:307:19","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3167,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:19","nodeType":"FunctionDefinition","parameters":{"id":3144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3139,"mutability":"mutable","name":"input","nameLocation":"11253:5:19","nodeType":"VariableDeclaration","scope":3167,"src":"11239:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3138,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3141,"mutability":"mutable","name":"begin","nameLocation":"11268:5:19","nodeType":"VariableDeclaration","scope":3167,"src":"11260:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3140,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3143,"mutability":"mutable","name":"end","nameLocation":"11283:3:19","nodeType":"VariableDeclaration","scope":3167,"src":"11275:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3142,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:19"},"returnParameters":{"id":3147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3167,"src":"11311:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3145,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:19"},"scope":3742,"src":"11217:259:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3187,"nodeType":"Block","src":"11803:86:19","statements":[{"expression":{"arguments":[{"id":3178,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"11852:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3182,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"11868:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3180,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:19","typeDescriptions":{}}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:19","memberName":"length","nodeType":"MemberAccess","src":"11862:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3177,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"11820:31:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3176,"id":3186,"nodeType":"Return","src":"11813:69:19"}]},"documentation":{"id":3168,"nodeType":"StructuredDocumentation","src":"11482:218:19","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3188,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:19","nodeType":"FunctionDefinition","parameters":{"id":3171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3170,"mutability":"mutable","name":"input","nameLocation":"11744:5:19","nodeType":"VariableDeclaration","scope":3188,"src":"11730:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3169,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:19"},"returnParameters":{"id":3176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3173,"mutability":"mutable","name":"success","nameLocation":"11779:7:19","nodeType":"VariableDeclaration","scope":3188,"src":"11774:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3172,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3175,"mutability":"mutable","name":"value","nameLocation":"11796:5:19","nodeType":"VariableDeclaration","scope":3188,"src":"11788:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3174,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:19"},"scope":3742,"src":"11705:184:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3224,"nodeType":"Block","src":"12297:147:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3202,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12311:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3205,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"12323:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3203,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:19","typeDescriptions":{}}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:19","memberName":"length","nodeType":"MemberAccess","src":"12317:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3209,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"12340:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3210,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12348:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3217,"nodeType":"IfStatement","src":"12307:63:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3215,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3201,"id":3216,"nodeType":"Return","src":"12353:17:19"}},{"expression":{"arguments":[{"id":3219,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"12419:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3220,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"12426:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3221,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"12433:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3218,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"12387:31:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3201,"id":3223,"nodeType":"Return","src":"12380:57:19"}]},"documentation":{"id":3189,"nodeType":"StructuredDocumentation","src":"11895:241:19","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3225,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:19","nodeType":"FunctionDefinition","parameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"input","nameLocation":"12189:5:19","nodeType":"VariableDeclaration","scope":3225,"src":"12175:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3190,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3193,"mutability":"mutable","name":"begin","nameLocation":"12212:5:19","nodeType":"VariableDeclaration","scope":3225,"src":"12204:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3192,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3195,"mutability":"mutable","name":"end","nameLocation":"12235:3:19","nodeType":"VariableDeclaration","scope":3225,"src":"12227:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3194,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:19"},"returnParameters":{"id":3201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3198,"mutability":"mutable","name":"success","nameLocation":"12273:7:19","nodeType":"VariableDeclaration","scope":3225,"src":"12268:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3197,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3200,"mutability":"mutable","name":"value","nameLocation":"12290:5:19","nodeType":"VariableDeclaration","scope":3225,"src":"12282:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3199,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:19"},"scope":3742,"src":"12141:303:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3327,"nodeType":"Block","src":"12853:881:19","statements":[{"assignments":[3240],"declarations":[{"constant":false,"id":3240,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:19","nodeType":"VariableDeclaration","scope":3327,"src":"12863:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3239,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3245,"initialValue":{"arguments":[{"id":3243,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"12891:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3241,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:19","typeDescriptions":{}}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:19"},{"assignments":[3247],"declarations":[{"constant":false,"id":3247,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:19","nodeType":"VariableDeclaration","scope":3327,"src":"12945:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3246,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3267,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3248,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"12963:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3249,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"12969:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3253,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3257,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"13013:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3258,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"13021:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3256,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"12990:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3254,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:19","typeDescriptions":{}}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3261,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:19","typeDescriptions":{}}},"id":3264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:19"},{"assignments":[3269],"declarations":[{"constant":false,"id":3269,"mutability":"mutable","name":"offset","nameLocation":"13133:6:19","nodeType":"VariableDeclaration","scope":3327,"src":"13125:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3268,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3275,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3270,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"13142:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"13142:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:19"},{"assignments":[3277],"declarations":[{"constant":false,"id":3277,"mutability":"mutable","name":"result","nameLocation":"13183:6:19","nodeType":"VariableDeclaration","scope":3327,"src":"13175:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3276,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3279,"initialValue":{"hexValue":"30","id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:19"},{"body":{"id":3321,"nodeType":"Block","src":"13250:447:19","statements":[{"assignments":[3293],"declarations":[{"constant":false,"id":3293,"mutability":"mutable","name":"chr","nameLocation":"13270:3:19","nodeType":"VariableDeclaration","scope":3321,"src":"13264:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3292,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3303,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3298,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"13319:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3299,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"13327:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3297,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"13296:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3295,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:19","typeDescriptions":{}}},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3294,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"13276:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3304,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"13349:3:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3311,"nodeType":"IfStatement","src":"13345:31:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3309,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3238,"id":3310,"nodeType":"Return","src":"13359:17:19"}},{"expression":{"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3312,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"13390:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3315,"nodeType":"ExpressionStatement","src":"13390:12:19"},{"id":3320,"nodeType":"UncheckedBlock","src":"13416:271:19","statements":[{"expression":{"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3316,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"13659:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3317,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"13669:3:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3319,"nodeType":"ExpressionStatement","src":"13659:13:19"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3286,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"13236:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3287,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"13240:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3322,"initializationExpression":{"assignments":[3281],"declarations":[{"constant":false,"id":3281,"mutability":"mutable","name":"i","nameLocation":"13216:1:19","nodeType":"VariableDeclaration","scope":3322,"src":"13208:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3280,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3285,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3282,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"13220:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3283,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"13228:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:19"},"loopExpression":{"expression":{"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:19","subExpression":{"id":3289,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"13247:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3291,"nodeType":"ExpressionStatement","src":"13245:3:19"},"nodeType":"ForStatement","src":"13203:494:19"},{"expression":{"components":[{"hexValue":"74727565","id":3323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3324,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"13720:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3325,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3238,"id":3326,"nodeType":"Return","src":"13706:21:19"}]},"documentation":{"id":3226,"nodeType":"StructuredDocumentation","src":"12450:227:19","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3328,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:19","nodeType":"FunctionDefinition","parameters":{"id":3233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3228,"mutability":"mutable","name":"input","nameLocation":"12746:5:19","nodeType":"VariableDeclaration","scope":3328,"src":"12732:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3227,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3230,"mutability":"mutable","name":"begin","nameLocation":"12769:5:19","nodeType":"VariableDeclaration","scope":3328,"src":"12761:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3229,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3232,"mutability":"mutable","name":"end","nameLocation":"12792:3:19","nodeType":"VariableDeclaration","scope":3328,"src":"12784:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3231,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:19"},"returnParameters":{"id":3238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3235,"mutability":"mutable","name":"success","nameLocation":"12829:7:19","nodeType":"VariableDeclaration","scope":3328,"src":"12824:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3234,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3237,"mutability":"mutable","name":"value","nameLocation":"12846:5:19","nodeType":"VariableDeclaration","scope":3328,"src":"12838:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3236,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:19"},"scope":3742,"src":"12682:1052:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3346,"nodeType":"Block","src":"14032:67:19","statements":[{"expression":{"arguments":[{"id":3337,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"14062:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3341,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"14078:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3339,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:19","typeDescriptions":{}}},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:19","memberName":"length","nodeType":"MemberAccess","src":"14072:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3336,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3347,3378],"referencedDeclaration":3378,"src":"14049:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3335,"id":3345,"nodeType":"Return","src":"14042:50:19"}]},"documentation":{"id":3329,"nodeType":"StructuredDocumentation","src":"13740:212:19","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3347,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:19","nodeType":"FunctionDefinition","parameters":{"id":3332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3331,"mutability":"mutable","name":"input","nameLocation":"13993:5:19","nodeType":"VariableDeclaration","scope":3347,"src":"13979:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3330,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:19"},"returnParameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3347,"src":"14023:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3333,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:19"},"scope":3742,"src":"13957:142:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3377,"nodeType":"Block","src":"14472:165:19","statements":[{"assignments":[3360,3362],"declarations":[{"constant":false,"id":3360,"mutability":"mutable","name":"success","nameLocation":"14488:7:19","nodeType":"VariableDeclaration","scope":3377,"src":"14483:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3359,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3362,"mutability":"mutable","name":"value","nameLocation":"14505:5:19","nodeType":"VariableDeclaration","scope":3377,"src":"14497:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3361,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3368,"initialValue":{"arguments":[{"id":3364,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"14530:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3365,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"14537:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3366,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"14544:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3363,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3399,3503],"referencedDeclaration":3503,"src":"14514:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:19"},{"condition":{"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:19","subExpression":{"id":3369,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"14563:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3374,"nodeType":"IfStatement","src":"14558:50:19","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3371,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"14579:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3373,"nodeType":"RevertStatement","src":"14572:36:19"}},{"expression":{"id":3375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"14625:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3358,"id":3376,"nodeType":"Return","src":"14618:12:19"}]},"documentation":{"id":3348,"nodeType":"StructuredDocumentation","src":"14105:259:19","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3378,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:19","nodeType":"FunctionDefinition","parameters":{"id":3355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3350,"mutability":"mutable","name":"input","nameLocation":"14405:5:19","nodeType":"VariableDeclaration","scope":3378,"src":"14391:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3349,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3352,"mutability":"mutable","name":"begin","nameLocation":"14420:5:19","nodeType":"VariableDeclaration","scope":3378,"src":"14412:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3354,"mutability":"mutable","name":"end","nameLocation":"14435:3:19","nodeType":"VariableDeclaration","scope":3378,"src":"14427:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3353,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:19"},"returnParameters":{"id":3358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3378,"src":"14463:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3356,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:19"},"scope":3742,"src":"14369:268:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3398,"nodeType":"Block","src":"14944:70:19","statements":[{"expression":{"arguments":[{"id":3389,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"14977:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3393,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"14993:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3391,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:19","typeDescriptions":{}}},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:19","memberName":"length","nodeType":"MemberAccess","src":"14987:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3388,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3399,3503],"referencedDeclaration":3503,"src":"14961:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3387,"id":3397,"nodeType":"Return","src":"14954:53:19"}]},"documentation":{"id":3379,"nodeType":"StructuredDocumentation","src":"14643:198:19","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":3399,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:19","nodeType":"FunctionDefinition","parameters":{"id":3382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3381,"mutability":"mutable","name":"input","nameLocation":"14885:5:19","nodeType":"VariableDeclaration","scope":3399,"src":"14871:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3380,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:19"},"returnParameters":{"id":3387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3384,"mutability":"mutable","name":"success","nameLocation":"14920:7:19","nodeType":"VariableDeclaration","scope":3399,"src":"14915:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3383,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3386,"mutability":"mutable","name":"value","nameLocation":"14937:5:19","nodeType":"VariableDeclaration","scope":3399,"src":"14929:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3385,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:19"},"scope":3742,"src":"14846:168:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3502,"nodeType":"Block","src":"15407:733:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3413,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"15421:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3416,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"15433:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3414,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:19","typeDescriptions":{}}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:19","memberName":"length","nodeType":"MemberAccess","src":"15427:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3420,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"15450:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3421,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"15458:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3431,"nodeType":"IfStatement","src":"15417:72:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3425,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:19","typeDescriptions":{}}},"id":3428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3429,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3412,"id":3430,"nodeType":"Return","src":"15463:26:19"}},{"assignments":[3433],"declarations":[{"constant":false,"id":3433,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:19","nodeType":"VariableDeclaration","scope":3502,"src":"15500:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3432,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3456,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3434,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"15518:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3435,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"15524:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3439,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3445,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"15574:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3443,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:19","typeDescriptions":{}}},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3447,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"15582:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3442,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"15545:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3440,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:19","typeDescriptions":{}}},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3450,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:19","typeDescriptions":{}}},"id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:19"},{"assignments":[3458],"declarations":[{"constant":false,"id":3458,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:19","nodeType":"VariableDeclaration","scope":3502,"src":"15686:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3457,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3466,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:19","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3460,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"15716:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"15716:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3467,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"15803:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3468,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"15809:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3470,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"15818:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3500,"nodeType":"Block","src":"16083:51:19","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3494,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:19","typeDescriptions":{}}},"id":3497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3498,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3412,"id":3499,"nodeType":"Return","src":"16097:26:19"}]},"id":3501,"nodeType":"IfStatement","src":"15799:335:19","trueBody":{"id":3492,"nodeType":"Block","src":"15834:243:19","statements":[{"assignments":[3473,3475],"declarations":[{"constant":false,"id":3473,"mutability":"mutable","name":"s","nameLocation":"15955:1:19","nodeType":"VariableDeclaration","scope":3492,"src":"15950:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3472,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3475,"mutability":"mutable","name":"v","nameLocation":"15966:1:19","nodeType":"VariableDeclaration","scope":3492,"src":"15958:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3474,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3481,"initialValue":{"arguments":[{"id":3477,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"16003:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3478,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"16010:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3479,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"16017:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3476,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"15971:31:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:19"},{"expression":{"components":[{"id":3482,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"16043:1:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3487,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"16062:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3485,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:19","typeDescriptions":{}}},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3483,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:19","typeDescriptions":{}}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3490,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3412,"id":3491,"nodeType":"Return","src":"16035:31:19"}]}}]},"documentation":{"id":3400,"nodeType":"StructuredDocumentation","src":"15020:226:19","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":3503,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:19","nodeType":"FunctionDefinition","parameters":{"id":3407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3402,"mutability":"mutable","name":"input","nameLocation":"15299:5:19","nodeType":"VariableDeclaration","scope":3503,"src":"15285:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3401,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3404,"mutability":"mutable","name":"begin","nameLocation":"15322:5:19","nodeType":"VariableDeclaration","scope":3503,"src":"15314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3403,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3406,"mutability":"mutable","name":"end","nameLocation":"15345:3:19","nodeType":"VariableDeclaration","scope":3503,"src":"15337:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3405,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:19"},"returnParameters":{"id":3412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3409,"mutability":"mutable","name":"success","nameLocation":"15383:7:19","nodeType":"VariableDeclaration","scope":3503,"src":"15378:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3408,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3411,"mutability":"mutable","name":"value","nameLocation":"15400:5:19","nodeType":"VariableDeclaration","scope":3503,"src":"15392:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3410,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:19"},"scope":3742,"src":"15251:889:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3562,"nodeType":"Block","src":"16209:461:19","statements":[{"assignments":[3511],"declarations":[{"constant":false,"id":3511,"mutability":"mutable","name":"value","nameLocation":"16225:5:19","nodeType":"VariableDeclaration","scope":3562,"src":"16219:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3510,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3516,"initialValue":{"arguments":[{"id":3514,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"16239:3:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3512,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:19","typeDescriptions":{}}},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:19"},{"id":3559,"nodeType":"UncheckedBlock","src":"16403:238:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"16431:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:19","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"16445:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:19","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"16491:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"16505:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:19","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"16552:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"16566:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:19","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3551,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3550,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:19","memberName":"max","nodeType":"MemberAccess","src":"16615:15:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3509,"id":3555,"nodeType":"Return","src":"16608:22:19"},"id":3556,"nodeType":"IfStatement","src":"16548:82:19","trueBody":{"expression":{"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"16578:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:19","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3549,"nodeType":"ExpressionStatement","src":"16578:11:19"}},"id":3557,"nodeType":"IfStatement","src":"16487:143:19","trueBody":{"expression":{"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"16518:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:19","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3538,"nodeType":"ExpressionStatement","src":"16518:11:19"}},"id":3558,"nodeType":"IfStatement","src":"16427:203:19","trueBody":{"expression":{"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"16457:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:19","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3527,"nodeType":"ExpressionStatement","src":"16457:11:19"}}]},{"expression":{"id":3560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"16658:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3509,"id":3561,"nodeType":"Return","src":"16651:12:19"}]},"id":3563,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:19","nodeType":"FunctionDefinition","parameters":{"id":3506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"mutability":"mutable","name":"chr","nameLocation":"16175:3:19","nodeType":"VariableDeclaration","scope":3563,"src":"16168:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3504,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:19"},"returnParameters":{"id":3509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3563,"src":"16202:5:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3507,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:19"},"scope":3742,"src":"16146:524:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3728,"nodeType":"Block","src":"17336:1331:19","statements":[{"assignments":[3572],"declarations":[{"constant":false,"id":3572,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:19","nodeType":"VariableDeclaration","scope":3728,"src":"17346:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3571,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3577,"initialValue":{"arguments":[{"id":3575,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"17374:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3573,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:19","typeDescriptions":{}}},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:19"},{"assignments":[3579],"declarations":[{"constant":false,"id":3579,"mutability":"mutable","name":"output","nameLocation":"17403:6:19","nodeType":"VariableDeclaration","scope":3728,"src":"17390:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3578,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3587,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3583,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"17426:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:19","memberName":"length","nodeType":"MemberAccess","src":"17426:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3580,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:19"},{"assignments":[3589],"declarations":[{"constant":false,"id":3589,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:19","nodeType":"VariableDeclaration","scope":3728,"src":"17473:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3588,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3591,"initialValue":{"hexValue":"30","id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:19"},{"body":{"id":3720,"nodeType":"Block","src":"17548:854:19","statements":[{"assignments":[3603],"declarations":[{"constant":false,"id":3603,"mutability":"mutable","name":"char","nameLocation":"17569:4:19","nodeType":"VariableDeclaration","scope":3720,"src":"17562:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3602,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3611,"initialValue":{"arguments":[{"arguments":[{"id":3607,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"17606:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3608,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"17614:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3606,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"17583:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3604,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:19","typeDescriptions":{}}},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:19"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3612,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"17637:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3616,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"17672:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3614,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:19","typeDescriptions":{}}},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3619,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3621,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3624,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3718,"nodeType":"Block","src":"18330:62:19","statements":[{"expression":{"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3711,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"18348:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3714,"indexExpression":{"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:19","subExpression":{"id":3712,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"18355:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3715,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"18373:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3717,"nodeType":"ExpressionStatement","src":"18348:29:19"}]},"id":3719,"nodeType":"IfStatement","src":"17631:761:19","trueBody":{"id":3710,"nodeType":"Block","src":"17687:637:19","statements":[{"expression":{"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3625,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"17705:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3628,"indexExpression":{"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:19","subExpression":{"id":3626,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"17712:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3631,"nodeType":"ExpressionStatement","src":"17705:29:19"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3632,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"17756:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3642,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"17825:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:19","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3652,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"17894:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3662,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"17963:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:19","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3672,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"18032:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:19","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3682,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"18101:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:19","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3692,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"18171:4:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:19","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3703,"nodeType":"IfStatement","src":"18167:143:19","trueBody":{"id":3702,"nodeType":"Block","src":"18185:125:19","statements":[{"expression":{"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3695,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"18263:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3698,"indexExpression":{"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:19","subExpression":{"id":3696,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"18270:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3701,"nodeType":"ExpressionStatement","src":"18263:28:19"}]}},"id":3704,"nodeType":"IfStatement","src":"18097:213:19","trueBody":{"expression":{"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3685,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"18115:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3688,"indexExpression":{"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:19","subExpression":{"id":3686,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"18122:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3691,"nodeType":"ExpressionStatement","src":"18115:29:19"}},"id":3705,"nodeType":"IfStatement","src":"18028:282:19","trueBody":{"expression":{"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3675,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"18046:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3678,"indexExpression":{"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:19","subExpression":{"id":3676,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"18053:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3681,"nodeType":"ExpressionStatement","src":"18046:28:19"}},"id":3706,"nodeType":"IfStatement","src":"17959:351:19","trueBody":{"expression":{"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3665,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"17977:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3668,"indexExpression":{"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:19","subExpression":{"id":3666,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"17984:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3671,"nodeType":"ExpressionStatement","src":"17977:28:19"}},"id":3707,"nodeType":"IfStatement","src":"17890:420:19","trueBody":{"expression":{"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3655,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"17908:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3658,"indexExpression":{"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:19","subExpression":{"id":3656,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"17915:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3661,"nodeType":"ExpressionStatement","src":"17908:28:19"}},"id":3708,"nodeType":"IfStatement","src":"17821:489:19","trueBody":{"expression":{"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3645,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"17839:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3648,"indexExpression":{"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:19","subExpression":{"id":3646,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"17846:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3651,"nodeType":"ExpressionStatement","src":"17839:28:19"}},"id":3709,"nodeType":"IfStatement","src":"17752:558:19","trueBody":{"expression":{"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3635,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"17770:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3638,"indexExpression":{"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:19","subExpression":{"id":3636,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"17777:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3641,"nodeType":"ExpressionStatement","src":"17770:28:19"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3595,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"17524:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3596,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"17528:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:19","memberName":"length","nodeType":"MemberAccess","src":"17528:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3721,"initializationExpression":{"assignments":[3593],"declarations":[{"constant":false,"id":3593,"mutability":"mutable","name":"i","nameLocation":"17521:1:19","nodeType":"VariableDeclaration","scope":3721,"src":"17513:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3592,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3594,"nodeType":"VariableDeclarationStatement","src":"17513:9:19"},"loopExpression":{"expression":{"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:19","subExpression":{"id":3599,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"17545:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3601,"nodeType":"ExpressionStatement","src":"17543:3:19"},"nodeType":"ForStatement","src":"17508:894:19"},{"AST":{"nodeType":"YulBlock","src":"18500:129:19","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18521:6:19"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18529:12:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18514:6:19"},"nodeType":"YulFunctionCall","src":"18514:28:19"},"nodeType":"YulExpressionStatement","src":"18514:28:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18562:4:19","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18572:6:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18584:1:19","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18591:1:19","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18598:12:19"},{"kind":"number","nodeType":"YulLiteral","src":"18612:2:19","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18594:3:19"},"nodeType":"YulFunctionCall","src":"18594:21:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18587:3:19"},"nodeType":"YulFunctionCall","src":"18587:29:19"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18580:3:19"},"nodeType":"YulFunctionCall","src":"18580:37:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18568:3:19"},"nodeType":"YulFunctionCall","src":"18568:50:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18555:6:19"},"nodeType":"YulFunctionCall","src":"18555:64:19"},"nodeType":"YulExpressionStatement","src":"18555:64:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":3579,"isOffset":false,"isSlot":false,"src":"18521:6:19","valueSize":1},{"declaration":3579,"isOffset":false,"isSlot":false,"src":"18572:6:19","valueSize":1},{"declaration":3589,"isOffset":false,"isSlot":false,"src":"18529:12:19","valueSize":1},{"declaration":3589,"isOffset":false,"isSlot":false,"src":"18598:12:19","valueSize":1}],"flags":["memory-safe"],"id":3722,"nodeType":"InlineAssembly","src":"18475:154:19"},{"expression":{"arguments":[{"id":3725,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"18653:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3723,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:19","typeDescriptions":{}}},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3570,"id":3727,"nodeType":"Return","src":"18639:21:19"}]},"documentation":{"id":3564,"nodeType":"StructuredDocumentation","src":"16676:576:19","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3729,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:19","nodeType":"FunctionDefinition","parameters":{"id":3567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3566,"mutability":"mutable","name":"input","nameLocation":"17291:5:19","nodeType":"VariableDeclaration","scope":3729,"src":"17277:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3565,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:19"},"returnParameters":{"id":3570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3729,"src":"17321:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3568,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:19"},"scope":3742,"src":"17257:1410:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3740,"nodeType":"Block","src":"19052:225:19","statements":[{"AST":{"nodeType":"YulBlock","src":"19201:70:19","statements":[{"nodeType":"YulAssignment","src":"19215:46:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19238:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"19246:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19234:3:19"},"nodeType":"YulFunctionCall","src":"19234:17:19"},{"name":"offset","nodeType":"YulIdentifier","src":"19253:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19230:3:19"},"nodeType":"YulFunctionCall","src":"19230:30:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19224:5:19"},"nodeType":"YulFunctionCall","src":"19224:37:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19215:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3732,"isOffset":false,"isSlot":false,"src":"19238:6:19","valueSize":1},{"declaration":3734,"isOffset":false,"isSlot":false,"src":"19253:6:19","valueSize":1},{"declaration":3737,"isOffset":false,"isSlot":false,"src":"19215:5:19","valueSize":1}],"flags":["memory-safe"],"id":3739,"nodeType":"InlineAssembly","src":"19176:95:19"}]},"documentation":{"id":3730,"nodeType":"StructuredDocumentation","src":"18673:268:19","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3741,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:19","nodeType":"FunctionDefinition","parameters":{"id":3735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3732,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:19","nodeType":"VariableDeclaration","scope":3741,"src":"18978:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3731,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3734,"mutability":"mutable","name":"offset","nameLocation":"19007:6:19","nodeType":"VariableDeclaration","scope":3741,"src":"18999:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3733,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:19"},"returnParameters":{"id":3738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3737,"mutability":"mutable","name":"value","nameLocation":"19045:5:19","nodeType":"VariableDeclaration","scope":3741,"src":"19037:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3736,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:19"},"scope":3742,"src":"18946:331:19","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3743,"src":"297:18982:19","usedErrors":[2400,2403,2406],"usedEvents":[]}],"src":"101:19179:19"},"id":19},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[4090]},"id":4091,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3744,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3745,"nodeType":"StructuredDocumentation","src":"138:205:20","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":4090,"linearizedBaseContracts":[4090],"name":"ECDSA","nameLocation":"352:5:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3750,"members":[{"id":3746,"name":"NoError","nameLocation":"392:7:20","nodeType":"EnumValue","src":"392:7:20"},{"id":3747,"name":"InvalidSignature","nameLocation":"409:16:20","nodeType":"EnumValue","src":"409:16:20"},{"id":3748,"name":"InvalidSignatureLength","nameLocation":"435:22:20","nodeType":"EnumValue","src":"435:22:20"},{"id":3749,"name":"InvalidSignatureS","nameLocation":"467:17:20","nodeType":"EnumValue","src":"467:17:20"}],"name":"RecoverError","nameLocation":"369:12:20","nodeType":"EnumDefinition","src":"364:126:20"},{"documentation":{"id":3751,"nodeType":"StructuredDocumentation","src":"496:63:20","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3753,"name":"ECDSAInvalidSignature","nameLocation":"570:21:20","nodeType":"ErrorDefinition","parameters":{"id":3752,"nodeType":"ParameterList","parameters":[],"src":"591:2:20"},"src":"564:30:20"},{"documentation":{"id":3754,"nodeType":"StructuredDocumentation","src":"600:60:20","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3758,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:20","nodeType":"ErrorDefinition","parameters":{"id":3757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3756,"mutability":"mutable","name":"length","nameLocation":"707:6:20","nodeType":"VariableDeclaration","scope":3758,"src":"699:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3755,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:20"},"src":"665:50:20"},{"documentation":{"id":3759,"nodeType":"StructuredDocumentation","src":"721:85:20","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3763,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:20","nodeType":"ErrorDefinition","parameters":{"id":3762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3761,"mutability":"mutable","name":"s","nameLocation":"848:1:20","nodeType":"VariableDeclaration","scope":3763,"src":"840:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3760,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:20"},"src":"811:40:20"},{"body":{"id":3815,"nodeType":"Block","src":"2285:622:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3778,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"2299:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:20","memberName":"length","nodeType":"MemberAccess","src":"2299:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:20","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3813,"nodeType":"Block","src":"2793:108:20","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3800,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:20","typeDescriptions":{}}},"id":3803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3804,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"2827:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3750_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:20","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3748,"src":"2827:35:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3808,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"2872:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:20","memberName":"length","nodeType":"MemberAccess","src":"2872:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3806,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:20","typeDescriptions":{}}},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3811,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3750_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3777,"id":3812,"nodeType":"Return","src":"2807:83:20"}]},"id":3814,"nodeType":"IfStatement","src":"2295:606:20","trueBody":{"id":3799,"nodeType":"Block","src":"2323:464:20","statements":[{"assignments":[3783],"declarations":[{"constant":false,"id":3783,"mutability":"mutable","name":"r","nameLocation":"2345:1:20","nodeType":"VariableDeclaration","scope":3799,"src":"2337:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3784,"nodeType":"VariableDeclarationStatement","src":"2337:9:20"},{"assignments":[3786],"declarations":[{"constant":false,"id":3786,"mutability":"mutable","name":"s","nameLocation":"2368:1:20","nodeType":"VariableDeclaration","scope":3799,"src":"2360:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3785,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3787,"nodeType":"VariableDeclarationStatement","src":"2360:9:20"},{"assignments":[3789],"declarations":[{"constant":false,"id":3789,"mutability":"mutable","name":"v","nameLocation":"2389:1:20","nodeType":"VariableDeclaration","scope":3799,"src":"2383:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3788,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3790,"nodeType":"VariableDeclarationStatement","src":"2383:7:20"},{"AST":{"nodeType":"YulBlock","src":"2560:171:20","statements":[{"nodeType":"YulAssignment","src":"2578:32:20","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2593:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2604:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:20"},"nodeType":"YulFunctionCall","src":"2589:20:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2583:5:20"},"nodeType":"YulFunctionCall","src":"2583:27:20"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2578:1:20"}]},{"nodeType":"YulAssignment","src":"2627:32:20","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2642:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2653:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2638:3:20"},"nodeType":"YulFunctionCall","src":"2638:20:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2632:5:20"},"nodeType":"YulFunctionCall","src":"2632:27:20"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2627:1:20"}]},{"nodeType":"YulAssignment","src":"2676:41:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2686:1:20","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2699:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"2710:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:20"},"nodeType":"YulFunctionCall","src":"2695:20:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2689:5:20"},"nodeType":"YulFunctionCall","src":"2689:27:20"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2681:4:20"},"nodeType":"YulFunctionCall","src":"2681:36:20"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2676:1:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3783,"isOffset":false,"isSlot":false,"src":"2578:1:20","valueSize":1},{"declaration":3786,"isOffset":false,"isSlot":false,"src":"2627:1:20","valueSize":1},{"declaration":3768,"isOffset":false,"isSlot":false,"src":"2593:9:20","valueSize":1},{"declaration":3768,"isOffset":false,"isSlot":false,"src":"2642:9:20","valueSize":1},{"declaration":3768,"isOffset":false,"isSlot":false,"src":"2699:9:20","valueSize":1},{"declaration":3789,"isOffset":false,"isSlot":false,"src":"2676:1:20","valueSize":1}],"flags":["memory-safe"],"id":3791,"nodeType":"InlineAssembly","src":"2535:196:20"},{"expression":{"arguments":[{"id":3793,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"2762:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3794,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"2768:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3795,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"2771:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3796,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"2774:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3792,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3816,3896,4004],"referencedDeclaration":4004,"src":"2751:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3750_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3750_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3777,"id":3798,"nodeType":"Return","src":"2744:32:20"}]}}]},"documentation":{"id":3764,"nodeType":"StructuredDocumentation","src":"857:1267:20","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3816,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:20","nodeType":"FunctionDefinition","parameters":{"id":3769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3766,"mutability":"mutable","name":"hash","nameLocation":"2166:4:20","nodeType":"VariableDeclaration","scope":3816,"src":"2158:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3765,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3768,"mutability":"mutable","name":"signature","nameLocation":"2193:9:20","nodeType":"VariableDeclaration","scope":3816,"src":"2180:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3767,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:20"},"returnParameters":{"id":3777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3771,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:20","nodeType":"VariableDeclaration","scope":3816,"src":"2232:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3770,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3774,"mutability":"mutable","name":"err","nameLocation":"2264:3:20","nodeType":"VariableDeclaration","scope":3816,"src":"2251:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3773,"nodeType":"UserDefinedTypeName","pathNode":{"id":3772,"name":"RecoverError","nameLocations":["2251:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3750,"src":"2251:12:20"},"referencedDeclaration":3750,"src":"2251:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3776,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:20","nodeType":"VariableDeclaration","scope":3816,"src":"2269:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3775,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:20"},"scope":4090,"src":"2129:778:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3845,"nodeType":"Block","src":"3801:168:20","statements":[{"assignments":[3827,3830,3832],"declarations":[{"constant":false,"id":3827,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:20","nodeType":"VariableDeclaration","scope":3845,"src":"3812:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3826,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3830,"mutability":"mutable","name":"error","nameLocation":"3844:5:20","nodeType":"VariableDeclaration","scope":3845,"src":"3831:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3829,"nodeType":"UserDefinedTypeName","pathNode":{"id":3828,"name":"RecoverError","nameLocations":["3831:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3750,"src":"3831:12:20"},"referencedDeclaration":3750,"src":"3831:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3832,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:20","nodeType":"VariableDeclaration","scope":3845,"src":"3851:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3837,"initialValue":{"arguments":[{"id":3834,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"3882:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3835,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"3888:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3833,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3816,3896,4004],"referencedDeclaration":3816,"src":"3871:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3750_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3750_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:20"},{"expression":{"arguments":[{"id":3839,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"3920:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"}},{"id":3840,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"3927:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3838,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"3908:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3750_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3842,"nodeType":"ExpressionStatement","src":"3908:28:20"},{"expression":{"id":3843,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"3953:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3825,"id":3844,"nodeType":"Return","src":"3946:16:20"}]},"documentation":{"id":3817,"nodeType":"StructuredDocumentation","src":"2913:796:20","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3846,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:20","nodeType":"FunctionDefinition","parameters":{"id":3822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3819,"mutability":"mutable","name":"hash","nameLocation":"3739:4:20","nodeType":"VariableDeclaration","scope":3846,"src":"3731:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3818,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3821,"mutability":"mutable","name":"signature","nameLocation":"3758:9:20","nodeType":"VariableDeclaration","scope":3846,"src":"3745:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3820,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:20"},"returnParameters":{"id":3825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3846,"src":"3792:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3823,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:20"},"scope":4090,"src":"3714:255:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3895,"nodeType":"Block","src":"4348:342:20","statements":[{"id":3894,"nodeType":"UncheckedBlock","src":"4358:326:20","statements":[{"assignments":[3864],"declarations":[{"constant":false,"id":3864,"mutability":"mutable","name":"s","nameLocation":"4390:1:20","nodeType":"VariableDeclaration","scope":3894,"src":"4382:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3863,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3871,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3865,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"4394:2:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:20","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3866,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:20","typeDescriptions":{}}},"id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:20"},{"assignments":[3873],"declarations":[{"constant":false,"id":3873,"mutability":"mutable","name":"v","nameLocation":"4591:1:20","nodeType":"VariableDeclaration","scope":3894,"src":"4585:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3872,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3886,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3878,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"4610:2:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3876,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:20","typeDescriptions":{}}},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3882,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:20","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3874,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:20","typeDescriptions":{}}},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:20"},{"expression":{"arguments":[{"id":3888,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"4659:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3889,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"4665:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3890,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"4668:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3891,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"4671:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3887,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3816,3896,4004],"referencedDeclaration":4004,"src":"4648:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3750_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3750_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3862,"id":3893,"nodeType":"Return","src":"4641:32:20"}]}]},"documentation":{"id":3847,"nodeType":"StructuredDocumentation","src":"3975:205:20","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3896,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:20","nodeType":"FunctionDefinition","parameters":{"id":3854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3849,"mutability":"mutable","name":"hash","nameLocation":"4222:4:20","nodeType":"VariableDeclaration","scope":3896,"src":"4214:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3848,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3851,"mutability":"mutable","name":"r","nameLocation":"4244:1:20","nodeType":"VariableDeclaration","scope":3896,"src":"4236:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3850,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3853,"mutability":"mutable","name":"vs","nameLocation":"4263:2:20","nodeType":"VariableDeclaration","scope":3896,"src":"4255:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:20"},"returnParameters":{"id":3862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:20","nodeType":"VariableDeclaration","scope":3896,"src":"4295:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3855,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3859,"mutability":"mutable","name":"err","nameLocation":"4327:3:20","nodeType":"VariableDeclaration","scope":3896,"src":"4314:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3858,"nodeType":"UserDefinedTypeName","pathNode":{"id":3857,"name":"RecoverError","nameLocations":["4314:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3750,"src":"4314:12:20"},"referencedDeclaration":3750,"src":"4314:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3861,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:20","nodeType":"VariableDeclaration","scope":3896,"src":"4332:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:20"},"scope":4090,"src":"4185:505:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3928,"nodeType":"Block","src":"4903:164:20","statements":[{"assignments":[3909,3912,3914],"declarations":[{"constant":false,"id":3909,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:20","nodeType":"VariableDeclaration","scope":3928,"src":"4914:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3908,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3912,"mutability":"mutable","name":"error","nameLocation":"4946:5:20","nodeType":"VariableDeclaration","scope":3928,"src":"4933:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3911,"nodeType":"UserDefinedTypeName","pathNode":{"id":3910,"name":"RecoverError","nameLocations":["4933:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3750,"src":"4933:12:20"},"referencedDeclaration":3750,"src":"4933:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3914,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:20","nodeType":"VariableDeclaration","scope":3928,"src":"4953:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3913,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3920,"initialValue":{"arguments":[{"id":3916,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"4984:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3917,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"4990:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3918,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"4993:2:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3915,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3816,3896,4004],"referencedDeclaration":3896,"src":"4973:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3750_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3750_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:20"},{"expression":{"arguments":[{"id":3922,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"5018:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"}},{"id":3923,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"5025:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3921,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"5006:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3750_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3925,"nodeType":"ExpressionStatement","src":"5006:28:20"},{"expression":{"id":3926,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"5051:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3907,"id":3927,"nodeType":"Return","src":"5044:16:20"}]},"documentation":{"id":3897,"nodeType":"StructuredDocumentation","src":"4696:116:20","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3929,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:20","nodeType":"FunctionDefinition","parameters":{"id":3904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3899,"mutability":"mutable","name":"hash","nameLocation":"4842:4:20","nodeType":"VariableDeclaration","scope":3929,"src":"4834:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3901,"mutability":"mutable","name":"r","nameLocation":"4856:1:20","nodeType":"VariableDeclaration","scope":3929,"src":"4848:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3903,"mutability":"mutable","name":"vs","nameLocation":"4867:2:20","nodeType":"VariableDeclaration","scope":3929,"src":"4859:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:20"},"returnParameters":{"id":3907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3929,"src":"4894:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3905,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:20"},"scope":4090,"src":"4817:250:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4003,"nodeType":"Block","src":"5382:1372:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3950,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"6278:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3948,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:20","typeDescriptions":{}}},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:20","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3964,"nodeType":"IfStatement","src":"6266:164:20","trueBody":{"id":3963,"nodeType":"Block","src":"6351:79:20","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3954,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:20","typeDescriptions":{}}},"id":3957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3958,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"6385:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3750_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:20","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3749,"src":"6385:30:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"}},{"id":3960,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"6417:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3961,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3750_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3947,"id":3962,"nodeType":"Return","src":"6365:54:20"}]}},{"assignments":[3966],"declarations":[{"constant":false,"id":3966,"mutability":"mutable","name":"signer","nameLocation":"6532:6:20","nodeType":"VariableDeclaration","scope":4003,"src":"6524:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3965,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3973,"initialValue":{"arguments":[{"id":3968,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"6551:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3969,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"6557:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3970,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"6560:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3971,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"6563:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3967,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:20","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:20"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3974,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"6579:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3975,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:20","typeDescriptions":{}}},"id":3978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3993,"nodeType":"IfStatement","src":"6575:113:20","trueBody":{"id":3992,"nodeType":"Block","src":"6601:87:20","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3980,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:20","typeDescriptions":{}}},"id":3983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3984,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"6635:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3750_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:20","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3747,"src":"6635:29:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3986,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:20","typeDescriptions":{}}},"id":3989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3990,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3750_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3947,"id":3991,"nodeType":"Return","src":"6615:62:20"}]}},{"expression":{"components":[{"id":3994,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"6706:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3995,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"6714:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3750_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:20","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"6714:20:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3997,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:20","typeDescriptions":{}}},"id":4000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4001,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3750_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3947,"id":4002,"nodeType":"Return","src":"6698:49:20"}]},"documentation":{"id":3930,"nodeType":"StructuredDocumentation","src":"5073:125:20","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4004,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:20","nodeType":"FunctionDefinition","parameters":{"id":3939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3932,"mutability":"mutable","name":"hash","nameLocation":"5240:4:20","nodeType":"VariableDeclaration","scope":4004,"src":"5232:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3931,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3934,"mutability":"mutable","name":"v","nameLocation":"5260:1:20","nodeType":"VariableDeclaration","scope":4004,"src":"5254:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3933,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3936,"mutability":"mutable","name":"r","nameLocation":"5279:1:20","nodeType":"VariableDeclaration","scope":4004,"src":"5271:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3938,"mutability":"mutable","name":"s","nameLocation":"5298:1:20","nodeType":"VariableDeclaration","scope":4004,"src":"5290:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3937,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:20"},"returnParameters":{"id":3947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3941,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:20","nodeType":"VariableDeclaration","scope":4004,"src":"5329:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3940,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3944,"mutability":"mutable","name":"err","nameLocation":"5361:3:20","nodeType":"VariableDeclaration","scope":4004,"src":"5348:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3943,"nodeType":"UserDefinedTypeName","pathNode":{"id":3942,"name":"RecoverError","nameLocations":["5348:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3750,"src":"5348:12:20"},"referencedDeclaration":3750,"src":"5348:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3946,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:20","nodeType":"VariableDeclaration","scope":4004,"src":"5366:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:20"},"scope":4090,"src":"5203:1551:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4039,"nodeType":"Block","src":"6981:166:20","statements":[{"assignments":[4019,4022,4024],"declarations":[{"constant":false,"id":4019,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:20","nodeType":"VariableDeclaration","scope":4039,"src":"6992:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4018,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4022,"mutability":"mutable","name":"error","nameLocation":"7024:5:20","nodeType":"VariableDeclaration","scope":4039,"src":"7011:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4021,"nodeType":"UserDefinedTypeName","pathNode":{"id":4020,"name":"RecoverError","nameLocations":["7011:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3750,"src":"7011:12:20"},"referencedDeclaration":3750,"src":"7011:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4024,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:20","nodeType":"VariableDeclaration","scope":4039,"src":"7031:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4023,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4031,"initialValue":{"arguments":[{"id":4026,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"7062:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4027,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"7068:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4028,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"7071:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4029,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"7074:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4025,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3816,3896,4004],"referencedDeclaration":4004,"src":"7051:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3750_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3750_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:20"},{"expression":{"arguments":[{"id":4033,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"7098:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"}},{"id":4034,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"7105:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4032,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"7086:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3750_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4036,"nodeType":"ExpressionStatement","src":"7086:28:20"},{"expression":{"id":4037,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"7131:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4017,"id":4038,"nodeType":"Return","src":"7124:16:20"}]},"documentation":{"id":4005,"nodeType":"StructuredDocumentation","src":"6760:122:20","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4040,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:20","nodeType":"FunctionDefinition","parameters":{"id":4014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4007,"mutability":"mutable","name":"hash","nameLocation":"6912:4:20","nodeType":"VariableDeclaration","scope":4040,"src":"6904:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4006,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4009,"mutability":"mutable","name":"v","nameLocation":"6924:1:20","nodeType":"VariableDeclaration","scope":4040,"src":"6918:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4008,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4011,"mutability":"mutable","name":"r","nameLocation":"6935:1:20","nodeType":"VariableDeclaration","scope":4040,"src":"6927:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4010,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4013,"mutability":"mutable","name":"s","nameLocation":"6946:1:20","nodeType":"VariableDeclaration","scope":4040,"src":"6938:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4012,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:20"},"returnParameters":{"id":4017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4040,"src":"6972:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4015,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:20"},"scope":4090,"src":"6887:260:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4088,"nodeType":"Block","src":"7352:460:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4049,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"7366:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4050,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"7375:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3750_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:20","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3746,"src":"7375:20:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4055,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"7462:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4056,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"7471:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3750_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:20","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3747,"src":"7471:29:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4063,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"7567:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4064,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"7576:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3750_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:20","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3748,"src":"7576:35:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4075,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"7701:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4076,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"7710:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3750_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:20","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3749,"src":"7710:30:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4084,"nodeType":"IfStatement","src":"7697:109:20","trueBody":{"id":4083,"nodeType":"Block","src":"7742:64:20","statements":[{"errorCall":{"arguments":[{"id":4080,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"7786:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4079,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"7763:22:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4082,"nodeType":"RevertStatement","src":"7756:39:20"}]}},"id":4085,"nodeType":"IfStatement","src":"7563:243:20","trueBody":{"id":4074,"nodeType":"Block","src":"7613:78:20","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":4070,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"7670:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4068,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:20","typeDescriptions":{}}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4067,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"7634:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4073,"nodeType":"RevertStatement","src":"7627:53:20"}]}},"id":4086,"nodeType":"IfStatement","src":"7458:348:20","trueBody":{"id":4062,"nodeType":"Block","src":"7502:55:20","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4059,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"7523:21:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4061,"nodeType":"RevertStatement","src":"7516:30:20"}]}},"id":4087,"nodeType":"IfStatement","src":"7362:444:20","trueBody":{"id":4054,"nodeType":"Block","src":"7397:55:20","statements":[{"functionReturnParameters":4048,"id":4053,"nodeType":"Return","src":"7411:7:20"}]}}]},"documentation":{"id":4041,"nodeType":"StructuredDocumentation","src":"7153:122:20","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":4089,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:20","nodeType":"FunctionDefinition","parameters":{"id":4047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4044,"mutability":"mutable","name":"error","nameLocation":"7314:5:20","nodeType":"VariableDeclaration","scope":4089,"src":"7301:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4043,"nodeType":"UserDefinedTypeName","pathNode":{"id":4042,"name":"RecoverError","nameLocations":["7301:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3750,"src":"7301:12:20"},"referencedDeclaration":3750,"src":"7301:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3750","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4046,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:20","nodeType":"VariableDeclaration","scope":4089,"src":"7321:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4045,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:20"},"returnParameters":{"id":4048,"nodeType":"ParameterList","parameters":[],"src":"7352:0:20"},"scope":4090,"src":"7280:532:20","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4091,"src":"344:7470:20","usedErrors":[3753,3758,3763],"usedEvents":[]}],"src":"112:7703:20"},"id":20},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[4317],"IERC5267":[262],"MessageHashUtils":[4403],"ShortString":[2005],"ShortStrings":[2216]},"id":4318,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4092,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":4094,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4318,"sourceUnit":4404,"src":"139:56:21","symbolAliases":[{"foreign":{"id":4093,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"147:16:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":4097,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4318,"sourceUnit":2217,"src":"196:62:21","symbolAliases":[{"foreign":{"id":4095,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"204:12:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4096,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"218:11:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":4099,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4318,"sourceUnit":263,"src":"259:55:21","symbolAliases":[{"foreign":{"id":4098,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"267:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4101,"name":"IERC5267","nameLocations":["1988:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":262,"src":"1988:8:21"},"id":4102,"nodeType":"InheritanceSpecifier","src":"1988:8:21"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":4100,"nodeType":"StructuredDocumentation","src":"316:1643:21","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":4317,"linearizedBaseContracts":[4317,262],"name":"EIP712","nameLocation":"1978:6:21","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4104,"libraryName":{"id":4103,"name":"ShortStrings","nameLocations":["2009:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":2216,"src":"2009:12:21"},"nodeType":"UsingForDirective","src":"2003:25:21"},{"constant":true,"id":4109,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:21","nodeType":"VariableDeclaration","scope":4317,"src":"2034:140:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":4107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":4106,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4111,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:21","nodeType":"VariableDeclaration","scope":4317,"src":"2373:48:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4110,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4113,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:21","nodeType":"VariableDeclaration","scope":4317,"src":"2427:40:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4112,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4115,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:21","nodeType":"VariableDeclaration","scope":4317,"src":"2473:37:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4114,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":4117,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:21","nodeType":"VariableDeclaration","scope":4317,"src":"2517:37:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4119,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:21","nodeType":"VariableDeclaration","scope":4317,"src":"2560:40:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4122,"mutability":"immutable","name":"_name","nameLocation":"2637:5:21","nodeType":"VariableDeclaration","scope":4317,"src":"2607:35:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"},"typeName":{"id":4121,"nodeType":"UserDefinedTypeName","pathNode":{"id":4120,"name":"ShortString","nameLocations":["2607:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2005,"src":"2607:11:21"},"referencedDeclaration":2005,"src":"2607:11:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":4125,"mutability":"immutable","name":"_version","nameLocation":"2678:8:21","nodeType":"VariableDeclaration","scope":4317,"src":"2648:38:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"},"typeName":{"id":4124,"nodeType":"UserDefinedTypeName","pathNode":{"id":4123,"name":"ShortString","nameLocations":["2648:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2005,"src":"2648:11:21"},"referencedDeclaration":2005,"src":"2648:11:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":4127,"mutability":"mutable","name":"_nameFallback","nameLocation":"2757:13:21","nodeType":"VariableDeclaration","scope":4317,"src":"2742:28:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4126,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":4129,"mutability":"mutable","name":"_versionFallback","nameLocation":"2841:16:21","nodeType":"VariableDeclaration","scope":4317,"src":"2826:31:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4128,"name":"string","nodeType":"ElementaryTypeName","src":"2826:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":4186,"nodeType":"Block","src":"3483:376:21","statements":[{"expression":{"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4137,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"3493:5:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4140,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"3532:13:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4138,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"3501:4:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3506:25:21","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2157,"src":"3501:30:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2005_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}},"src":"3493:53:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}},"id":4143,"nodeType":"ExpressionStatement","src":"3493:53:21"},{"expression":{"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4144,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"3556:8:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4147,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"3601:16:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4145,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"3567:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3575:25:21","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2157,"src":"3567:33:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2005_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3567:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}},"src":"3556:62:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}},"id":4150,"nodeType":"ExpressionStatement","src":"3556:62:21"},{"expression":{"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4151,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"3628:11:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4155,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"3658:4:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3652:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4153,"name":"bytes","nodeType":"ElementaryTypeName","src":"3652:5:21","typeDescriptions":{}}},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3652:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4152,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3642:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3628:36:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4159,"nodeType":"ExpressionStatement","src":"3628:36:21"},{"expression":{"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4160,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"3674:14:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4164,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"3707:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4162,"name":"bytes","nodeType":"ElementaryTypeName","src":"3701:5:21","typeDescriptions":{}}},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4161,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3691:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3691:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3674:42:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4168,"nodeType":"ExpressionStatement","src":"3674:42:21"},{"expression":{"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4169,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"3727:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4170,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3744:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3750:7:21","memberName":"chainid","nodeType":"MemberAccess","src":"3744:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3727:30:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4173,"nodeType":"ExpressionStatement","src":"3727:30:21"},{"expression":{"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4174,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"3767:22:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4175,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"3792:21:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3767:48:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4178,"nodeType":"ExpressionStatement","src":"3767:48:21"},{"expression":{"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4179,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"3825:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4182,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3847:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4317","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4317","typeString":"contract EIP712"}],"id":4181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3839:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4180,"name":"address","nodeType":"ElementaryTypeName","src":"3839:7:21","typeDescriptions":{}}},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3825:27:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4185,"nodeType":"ExpressionStatement","src":"3825:27:21"}]},"documentation":{"id":4130,"nodeType":"StructuredDocumentation","src":"2864:559:21","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":4187,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4132,"mutability":"mutable","name":"name","nameLocation":"3454:4:21","nodeType":"VariableDeclaration","scope":4187,"src":"3440:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4131,"name":"string","nodeType":"ElementaryTypeName","src":"3440:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4134,"mutability":"mutable","name":"version","nameLocation":"3474:7:21","nodeType":"VariableDeclaration","scope":4187,"src":"3460:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4133,"name":"string","nodeType":"ElementaryTypeName","src":"3460:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3439:43:21"},"returnParameters":{"id":4136,"nodeType":"ParameterList","parameters":[],"src":"3483:0:21"},"scope":4317,"src":"3428:431:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4212,"nodeType":"Block","src":"4007:200:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4195,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4029:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4317","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4317","typeString":"contract EIP712"}],"id":4194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4021:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4193,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:21","typeDescriptions":{}}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4021:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4197,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"4038:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4021:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4199,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4053:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4059:7:21","memberName":"chainid","nodeType":"MemberAccess","src":"4053:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4201,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"4070:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4053:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4021:63:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4210,"nodeType":"Block","src":"4146:55:21","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4207,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"4167:21:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4192,"id":4209,"nodeType":"Return","src":"4160:30:21"}]},"id":4211,"nodeType":"IfStatement","src":"4017:184:21","trueBody":{"id":4206,"nodeType":"Block","src":"4086:54:21","statements":[{"expression":{"id":4204,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"4107:22:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4192,"id":4205,"nodeType":"Return","src":"4100:29:21"}]}}]},"documentation":{"id":4188,"nodeType":"StructuredDocumentation","src":"3865:75:21","text":" @dev Returns the domain separator for the current chain."},"id":4213,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3954:18:21","nodeType":"FunctionDefinition","parameters":{"id":4189,"nodeType":"ParameterList","parameters":[],"src":"3972:2:21"},"returnParameters":{"id":4192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4213,"src":"3998:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3998:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3997:9:21"},"scope":4317,"src":"3945:262:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4233,"nodeType":"Block","src":"4277:115:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":4221,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"4315:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4222,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"4326:11:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4223,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"4339:14:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4224,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4355:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4361:7:21","memberName":"chainid","nodeType":"MemberAccess","src":"4355:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4228,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4378:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4317","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4317","typeString":"contract EIP712"}],"id":4227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4370:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4226,"name":"address","nodeType":"ElementaryTypeName","src":"4370:7:21","typeDescriptions":{}}},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4370:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4219,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4304:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4308:6:21","memberName":"encode","nodeType":"MemberAccess","src":"4304:10:21","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:80:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4218,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4294:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:91:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4217,"id":4232,"nodeType":"Return","src":"4287:98:21"}]},"id":4234,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4222:21:21","nodeType":"FunctionDefinition","parameters":{"id":4214,"nodeType":"ParameterList","parameters":[],"src":"4243:2:21"},"returnParameters":{"id":4217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4234,"src":"4268:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4268:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4267:9:21"},"scope":4317,"src":"4213:179:21","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4249,"nodeType":"Block","src":"5103:90:21","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4244,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"5153:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5153:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4246,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4237,"src":"5175:10:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4242,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"5120:16:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$4403_$","typeString":"type(library MessageHashUtils)"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5137:15:21","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4402,"src":"5120:32:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5120:66:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4241,"id":4248,"nodeType":"Return","src":"5113:73:21"}]},"documentation":{"id":4235,"nodeType":"StructuredDocumentation","src":"4398:614:21","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":4250,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"5026:16:21","nodeType":"FunctionDefinition","parameters":{"id":4238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4237,"mutability":"mutable","name":"structHash","nameLocation":"5051:10:21","nodeType":"VariableDeclaration","scope":4250,"src":"5043:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5043:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5042:20:21"},"returnParameters":{"id":4241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4250,"src":"5094:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4239,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5094:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5093:9:21"},"scope":4317,"src":"5017:176:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[261],"body":{"id":4291,"nodeType":"Block","src":"5556:229:21","statements":[{"expression":{"components":[{"hexValue":"0f","id":4269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5587:7:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":4270,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"5617:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4272,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"5644:14:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":4274,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5674:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:7:21","memberName":"chainid","nodeType":"MemberAccess","src":"5674:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4278,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5709:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4317","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4317","typeString":"contract EIP712"}],"id":4277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5701:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4276,"name":"address","nodeType":"ElementaryTypeName","src":"5701:7:21","typeDescriptions":{}}},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5736:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5728:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5728:7:21","typeDescriptions":{}}},"id":4283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5728:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":4287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5766:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5752:13:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4284,"name":"uint256","nodeType":"ElementaryTypeName","src":"5756:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4285,"nodeType":"ArrayTypeName","src":"5756:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5752:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4289,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5573:205:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":4268,"id":4290,"nodeType":"Return","src":"5566:212:21"}]},"documentation":{"id":4251,"nodeType":"StructuredDocumentation","src":"5199:24:21","text":"@inheritdoc IERC5267"},"functionSelector":"84b0196e","id":4292,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5237:12:21","nodeType":"FunctionDefinition","parameters":{"id":4252,"nodeType":"ParameterList","parameters":[],"src":"5249:2:21"},"returnParameters":{"id":4268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4254,"mutability":"mutable","name":"fields","nameLocation":"5333:6:21","nodeType":"VariableDeclaration","scope":4292,"src":"5326:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4253,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5326:6:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":4256,"mutability":"mutable","name":"name","nameLocation":"5367:4:21","nodeType":"VariableDeclaration","scope":4292,"src":"5353:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4255,"name":"string","nodeType":"ElementaryTypeName","src":"5353:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4258,"mutability":"mutable","name":"version","nameLocation":"5399:7:21","nodeType":"VariableDeclaration","scope":4292,"src":"5385:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4257,"name":"string","nodeType":"ElementaryTypeName","src":"5385:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4260,"mutability":"mutable","name":"chainId","nameLocation":"5428:7:21","nodeType":"VariableDeclaration","scope":4292,"src":"5420:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4259,"name":"uint256","nodeType":"ElementaryTypeName","src":"5420:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4262,"mutability":"mutable","name":"verifyingContract","nameLocation":"5457:17:21","nodeType":"VariableDeclaration","scope":4292,"src":"5449:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4261,"name":"address","nodeType":"ElementaryTypeName","src":"5449:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4264,"mutability":"mutable","name":"salt","nameLocation":"5496:4:21","nodeType":"VariableDeclaration","scope":4292,"src":"5488:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5488:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4267,"mutability":"mutable","name":"extensions","nameLocation":"5531:10:21","nodeType":"VariableDeclaration","scope":4292,"src":"5514:27:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4265,"name":"uint256","nodeType":"ElementaryTypeName","src":"5514:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4266,"nodeType":"ArrayTypeName","src":"5514:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5312:239:21"},"scope":4317,"src":"5228:557:21","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4303,"nodeType":"Block","src":"6166:65:21","statements":[{"expression":{"arguments":[{"id":4300,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"6210:13:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4298,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"6183:5:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6189:20:21","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2184,"src":"6183:26:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2005_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2005_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6183:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4297,"id":4302,"nodeType":"Return","src":"6176:48:21"}]},"documentation":{"id":4293,"nodeType":"StructuredDocumentation","src":"5791:256:21","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4304,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6114:11:21","nodeType":"FunctionDefinition","parameters":{"id":4294,"nodeType":"ParameterList","parameters":[],"src":"6125:2:21"},"returnParameters":{"id":4297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4304,"src":"6151:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4295,"name":"string","nodeType":"ElementaryTypeName","src":"6151:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6150:15:21"},"scope":4317,"src":"6105:126:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4315,"nodeType":"Block","src":"6621:71:21","statements":[{"expression":{"arguments":[{"id":4312,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"6668:16:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4310,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"6638:8:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2005","typeString":"ShortString"}},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6647:20:21","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2184,"src":"6638:29:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2005_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2005_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6638:47:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4309,"id":4314,"nodeType":"Return","src":"6631:54:21"}]},"documentation":{"id":4305,"nodeType":"StructuredDocumentation","src":"6237:262:21","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4316,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6566:14:21","nodeType":"FunctionDefinition","parameters":{"id":4306,"nodeType":"ParameterList","parameters":[],"src":"6580:2:21"},"returnParameters":{"id":4309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4316,"src":"6606:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4307,"name":"string","nodeType":"ElementaryTypeName","src":"6606:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6605:15:21"},"scope":4317,"src":"6557:135:21","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4318,"src":"1960:4734:21","usedErrors":[2013,2015],"usedEvents":[242]}],"src":"113:6582:21"},"id":21},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[4403],"Strings":[3742]},"id":4404,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4319,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4321,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4404,"sourceUnit":3743,"src":"149:39:22","symbolAliases":[{"foreign":{"id":4320,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"157:7:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":4322,"nodeType":"StructuredDocumentation","src":"190:330:22","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":4403,"linearizedBaseContracts":[4403],"name":"MessageHashUtils","nameLocation":"529:16:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":4331,"nodeType":"Block","src":"1339:341:22","statements":[{"AST":{"nodeType":"YulBlock","src":"1374:300:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1395:4:22","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1401:34:22","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1388:6:22"},"nodeType":"YulFunctionCall","src":"1388:48:22"},"nodeType":"YulExpressionStatement","src":"1388:48:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1497:4:22","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1503:11:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1490:6:22"},"nodeType":"YulFunctionCall","src":"1490:25:22"},"nodeType":"YulExpressionStatement","src":"1490:25:22"},{"nodeType":"YulAssignment","src":"1569:31:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1589:4:22","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1595:4:22","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1579:9:22"},"nodeType":"YulFunctionCall","src":"1579:21:22"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1569:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4328,"isOffset":false,"isSlot":false,"src":"1569:6:22","valueSize":1},{"declaration":4325,"isOffset":false,"isSlot":false,"src":"1503:11:22","valueSize":1}],"flags":["memory-safe"],"id":4330,"nodeType":"InlineAssembly","src":"1349:325:22"}]},"documentation":{"id":4323,"nodeType":"StructuredDocumentation","src":"552:690:22","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":4332,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:22","nodeType":"FunctionDefinition","parameters":{"id":4326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4325,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:22","nodeType":"VariableDeclaration","scope":4332,"src":"1279:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:22"},"returnParameters":{"id":4329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4328,"mutability":"mutable","name":"digest","nameLocation":"1331:6:22","nodeType":"VariableDeclaration","scope":4332,"src":"1323:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:22"},"scope":4403,"src":"1247:433:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4357,"nodeType":"Block","src":"2257:143:22","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":4349,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"2366:7:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:22","memberName":"length","nodeType":"MemberAccess","src":"2366:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4347,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"2349:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3742_$","typeString":"type(library Strings)"}},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:22","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2454,"src":"2349:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4345,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:22","typeDescriptions":{}}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4353,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"2384:7:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4341,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:22","typeDescriptions":{}}},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:22","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:22","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4340,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4339,"id":4356,"nodeType":"Return","src":"2267:126:22"}]},"documentation":{"id":4333,"nodeType":"StructuredDocumentation","src":"1686:480:22","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":4358,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:22","nodeType":"FunctionDefinition","parameters":{"id":4336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4335,"mutability":"mutable","name":"message","nameLocation":"2216:7:22","nodeType":"VariableDeclaration","scope":4358,"src":"2203:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4334,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:22"},"returnParameters":{"id":4339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4358,"src":"2248:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:22"},"scope":4403,"src":"2171:229:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4377,"nodeType":"Block","src":"2854:80:22","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4372,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"2910:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4373,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"2921:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4369,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:22","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4368,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4367,"id":4376,"nodeType":"Return","src":"2864:63:22"}]},"documentation":{"id":4359,"nodeType":"StructuredDocumentation","src":"2406:332:22","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":4378,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:22","nodeType":"FunctionDefinition","parameters":{"id":4364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4361,"mutability":"mutable","name":"validator","nameLocation":"2792:9:22","nodeType":"VariableDeclaration","scope":4378,"src":"2784:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4360,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4363,"mutability":"mutable","name":"data","nameLocation":"2816:4:22","nodeType":"VariableDeclaration","scope":4378,"src":"2803:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4362,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:22"},"returnParameters":{"id":4367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4378,"src":"2845:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:22"},"scope":4403,"src":"2743:191:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4389,"nodeType":"Block","src":"3216:216:22","statements":[{"AST":{"nodeType":"YulBlock","src":"3251:175:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3272:4:22","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nodeType":"YulLiteral","src":"3278:10:22","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3265:6:22"},"nodeType":"YulFunctionCall","src":"3265:24:22"},"nodeType":"YulExpressionStatement","src":"3265:24:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3309:4:22","type":"","value":"0x02"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3319:2:22","type":"","value":"96"},{"name":"validator","nodeType":"YulIdentifier","src":"3323:9:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3315:3:22"},"nodeType":"YulFunctionCall","src":"3315:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3302:6:22"},"nodeType":"YulFunctionCall","src":"3302:32:22"},"nodeType":"YulExpressionStatement","src":"3302:32:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3354:4:22","type":"","value":"0x16"},{"name":"messageHash","nodeType":"YulIdentifier","src":"3360:11:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3347:6:22"},"nodeType":"YulFunctionCall","src":"3347:25:22"},"nodeType":"YulExpressionStatement","src":"3347:25:22"},{"nodeType":"YulAssignment","src":"3385:31:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3405:4:22","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3411:4:22","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3395:9:22"},"nodeType":"YulFunctionCall","src":"3395:21:22"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3385:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4386,"isOffset":false,"isSlot":false,"src":"3385:6:22","valueSize":1},{"declaration":4383,"isOffset":false,"isSlot":false,"src":"3360:11:22","valueSize":1},{"declaration":4381,"isOffset":false,"isSlot":false,"src":"3323:9:22","valueSize":1}],"flags":["memory-safe"],"id":4388,"nodeType":"InlineAssembly","src":"3226:200:22"}]},"documentation":{"id":4379,"nodeType":"StructuredDocumentation","src":"2940:129:22","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":4390,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:22","nodeType":"FunctionDefinition","parameters":{"id":4384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4381,"mutability":"mutable","name":"validator","nameLocation":"3132:9:22","nodeType":"VariableDeclaration","scope":4390,"src":"3124:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4380,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4383,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:22","nodeType":"VariableDeclaration","scope":4390,"src":"3151:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4382,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:22"},"returnParameters":{"id":4387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4386,"mutability":"mutable","name":"digest","nameLocation":"3208:6:22","nodeType":"VariableDeclaration","scope":4390,"src":"3200:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:22"},"scope":4403,"src":"3074:358:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4401,"nodeType":"Block","src":"3983:265:22","statements":[{"AST":{"nodeType":"YulBlock","src":"4018:224:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4032:22:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4049:4:22","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4043:5:22"},"nodeType":"YulFunctionCall","src":"4043:11:22"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"4036:3:22","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4074:3:22"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"4079:10:22","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4067:6:22"},"nodeType":"YulFunctionCall","src":"4067:23:22"},"nodeType":"YulExpressionStatement","src":"4067:23:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4114:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"4119:4:22","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:22"},"nodeType":"YulFunctionCall","src":"4110:14:22"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"4126:15:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:22"},"nodeType":"YulFunctionCall","src":"4103:39:22"},"nodeType":"YulExpressionStatement","src":"4103:39:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4166:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"4171:4:22","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4162:3:22"},"nodeType":"YulFunctionCall","src":"4162:14:22"},{"name":"structHash","nodeType":"YulIdentifier","src":"4178:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4155:6:22"},"nodeType":"YulFunctionCall","src":"4155:34:22"},"nodeType":"YulExpressionStatement","src":"4155:34:22"},{"nodeType":"YulAssignment","src":"4202:30:22","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4222:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"4227:4:22","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4212:9:22"},"nodeType":"YulFunctionCall","src":"4212:20:22"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"4202:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4398,"isOffset":false,"isSlot":false,"src":"4202:6:22","valueSize":1},{"declaration":4393,"isOffset":false,"isSlot":false,"src":"4126:15:22","valueSize":1},{"declaration":4395,"isOffset":false,"isSlot":false,"src":"4178:10:22","valueSize":1}],"flags":["memory-safe"],"id":4400,"nodeType":"InlineAssembly","src":"3993:249:22"}]},"documentation":{"id":4391,"nodeType":"StructuredDocumentation","src":"3438:431:22","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":4402,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:22","nodeType":"FunctionDefinition","parameters":{"id":4396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4393,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:22","nodeType":"VariableDeclaration","scope":4402,"src":"3899:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4392,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4395,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:22","nodeType":"VariableDeclaration","scope":4402,"src":"3924:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:22"},"returnParameters":{"id":4399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4398,"mutability":"mutable","name":"digest","nameLocation":"3975:6:22","nodeType":"VariableDeclaration","scope":4402,"src":"3967:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4397,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:22"},"scope":4403,"src":"3874:374:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4404,"src":"521:3729:22","usedErrors":[],"usedEvents":[]}],"src":"123:4128:22"},"id":22},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4415]},"id":4416,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4405,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:23"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4406,"nodeType":"StructuredDocumentation","src":"142:280:23","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4415,"linearizedBaseContracts":[4415],"name":"IERC165","nameLocation":"433:7:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4407,"nodeType":"StructuredDocumentation","src":"447:340:23","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4414,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:23","nodeType":"FunctionDefinition","parameters":{"id":4410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4409,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:23","nodeType":"VariableDeclaration","scope":4414,"src":"819:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4408,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:23"},"returnParameters":{"id":4413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4414,"src":"862:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4411,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:23"},"scope":4415,"src":"792:76:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4416,"src":"423:447:23","usedErrors":[],"usedEvents":[]}],"src":"115:756:23"},"id":23},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6036],"Panic":[1822],"SafeCast":[7801]},"id":6037,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4417,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4419,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6037,"sourceUnit":1823,"src":"129:35:24","symbolAliases":[{"foreign":{"id":4418,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"137:5:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4421,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6037,"sourceUnit":7802,"src":"165:40:24","symbolAliases":[{"foreign":{"id":4420,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"173:8:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4422,"nodeType":"StructuredDocumentation","src":"207:73:24","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6036,"linearizedBaseContracts":[6036],"name":"Math","nameLocation":"289:4:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4427,"members":[{"id":4423,"name":"Floor","nameLocation":"324:5:24","nodeType":"EnumValue","src":"324:5:24"},{"id":4424,"name":"Ceil","nameLocation":"367:4:24","nodeType":"EnumValue","src":"367:4:24"},{"id":4425,"name":"Trunc","nameLocation":"409:5:24","nodeType":"EnumValue","src":"409:5:24"},{"id":4426,"name":"Expand","nameLocation":"439:6:24","nodeType":"EnumValue","src":"439:6:24"}],"name":"Rounding","nameLocation":"305:8:24","nodeType":"EnumDefinition","src":"300:169:24"},{"body":{"id":4440,"nodeType":"Block","src":"731:112:24","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:24","statements":[{"nodeType":"YulAssignment","src":"780:16:24","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:24"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:24"},"nodeType":"YulFunctionCall","src":"787:9:24"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:24"}]},{"nodeType":"YulAssignment","src":"809:18:24","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:24"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:24"},"nodeType":"YulFunctionCall","src":"817:10:24"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4430,"isOffset":false,"isSlot":false,"src":"791:1:24","valueSize":1},{"declaration":4430,"isOffset":false,"isSlot":false,"src":"825:1:24","valueSize":1},{"declaration":4432,"isOffset":false,"isSlot":false,"src":"794:1:24","valueSize":1},{"declaration":4435,"isOffset":false,"isSlot":false,"src":"809:4:24","valueSize":1},{"declaration":4437,"isOffset":false,"isSlot":false,"src":"780:3:24","valueSize":1},{"declaration":4437,"isOffset":false,"isSlot":false,"src":"820:3:24","valueSize":1}],"flags":["memory-safe"],"id":4439,"nodeType":"InlineAssembly","src":"741:96:24"}]},"documentation":{"id":4428,"nodeType":"StructuredDocumentation","src":"475:163:24","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":4441,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:24","nodeType":"FunctionDefinition","parameters":{"id":4433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4430,"mutability":"mutable","name":"a","nameLocation":"667:1:24","nodeType":"VariableDeclaration","scope":4441,"src":"659:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4429,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4432,"mutability":"mutable","name":"b","nameLocation":"678:1:24","nodeType":"VariableDeclaration","scope":4441,"src":"670:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4431,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:24"},"returnParameters":{"id":4438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4435,"mutability":"mutable","name":"high","nameLocation":"712:4:24","nodeType":"VariableDeclaration","scope":4441,"src":"704:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4434,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4437,"mutability":"mutable","name":"low","nameLocation":"726:3:24","nodeType":"VariableDeclaration","scope":4441,"src":"718:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4436,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:24"},"scope":6036,"src":"643:200:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4454,"nodeType":"Block","src":"1115:462:24","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:24","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:24","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:24"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:24"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:24","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:24"},"nodeType":"YulFunctionCall","src":"1474:6:24"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:24"},"nodeType":"YulFunctionCall","src":"1461:20:24"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:24","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:24","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:24"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:24"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:24"},"nodeType":"YulFunctionCall","src":"1501:9:24"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:24"}]},{"nodeType":"YulAssignment","src":"1523:38:24","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:24"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:24"},"nodeType":"YulFunctionCall","src":"1535:12:24"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:24"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:24"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:24"},"nodeType":"YulFunctionCall","src":"1549:11:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:24"},"nodeType":"YulFunctionCall","src":"1531:30:24"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4444,"isOffset":false,"isSlot":false,"src":"1468:1:24","valueSize":1},{"declaration":4444,"isOffset":false,"isSlot":false,"src":"1505:1:24","valueSize":1},{"declaration":4446,"isOffset":false,"isSlot":false,"src":"1471:1:24","valueSize":1},{"declaration":4446,"isOffset":false,"isSlot":false,"src":"1508:1:24","valueSize":1},{"declaration":4449,"isOffset":false,"isSlot":false,"src":"1523:4:24","valueSize":1},{"declaration":4451,"isOffset":false,"isSlot":false,"src":"1494:3:24","valueSize":1},{"declaration":4451,"isOffset":false,"isSlot":false,"src":"1543:3:24","valueSize":1},{"declaration":4451,"isOffset":false,"isSlot":false,"src":"1556:3:24","valueSize":1}],"flags":["memory-safe"],"id":4453,"nodeType":"InlineAssembly","src":"1412:159:24"}]},"documentation":{"id":4442,"nodeType":"StructuredDocumentation","src":"849:173:24","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":4455,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:24","nodeType":"FunctionDefinition","parameters":{"id":4447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4444,"mutability":"mutable","name":"a","nameLocation":"1051:1:24","nodeType":"VariableDeclaration","scope":4455,"src":"1043:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4443,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4446,"mutability":"mutable","name":"b","nameLocation":"1062:1:24","nodeType":"VariableDeclaration","scope":4455,"src":"1054:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4445,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:24"},"returnParameters":{"id":4452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4449,"mutability":"mutable","name":"high","nameLocation":"1096:4:24","nodeType":"VariableDeclaration","scope":4455,"src":"1088:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4448,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4451,"mutability":"mutable","name":"low","nameLocation":"1110:3:24","nodeType":"VariableDeclaration","scope":4455,"src":"1102:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4450,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:24"},"scope":6036,"src":"1027:550:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4489,"nodeType":"Block","src":"1784:149:24","statements":[{"id":4488,"nodeType":"UncheckedBlock","src":"1794:133:24","statements":[{"assignments":[4468],"declarations":[{"constant":false,"id":4468,"mutability":"mutable","name":"c","nameLocation":"1826:1:24","nodeType":"VariableDeclaration","scope":4488,"src":"1818:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4467,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4472,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4469,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"1830:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4470,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"1834:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:24"},{"expression":{"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4473,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"1849:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4474,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4468,"src":"1859:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4475,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"1864:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4478,"nodeType":"ExpressionStatement","src":"1849:16:24"},{"expression":{"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4479,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"1879:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4480,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4468,"src":"1888:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4483,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"1908:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4481,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"1892:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"1892:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4487,"nodeType":"ExpressionStatement","src":"1879:37:24"}]}]},"documentation":{"id":4456,"nodeType":"StructuredDocumentation","src":"1583:105:24","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":4490,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:24","nodeType":"FunctionDefinition","parameters":{"id":4461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4458,"mutability":"mutable","name":"a","nameLocation":"1717:1:24","nodeType":"VariableDeclaration","scope":4490,"src":"1709:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4457,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4460,"mutability":"mutable","name":"b","nameLocation":"1728:1:24","nodeType":"VariableDeclaration","scope":4490,"src":"1720:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4459,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:24"},"returnParameters":{"id":4466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4463,"mutability":"mutable","name":"success","nameLocation":"1759:7:24","nodeType":"VariableDeclaration","scope":4490,"src":"1754:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4462,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4465,"mutability":"mutable","name":"result","nameLocation":"1776:6:24","nodeType":"VariableDeclaration","scope":4490,"src":"1768:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4464,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:24"},"scope":6036,"src":"1693:240:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4524,"nodeType":"Block","src":"2143:149:24","statements":[{"id":4523,"nodeType":"UncheckedBlock","src":"2153:133:24","statements":[{"assignments":[4503],"declarations":[{"constant":false,"id":4503,"mutability":"mutable","name":"c","nameLocation":"2185:1:24","nodeType":"VariableDeclaration","scope":4523,"src":"2177:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4502,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4507,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4504,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"2189:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4505,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"2193:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:24"},{"expression":{"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4508,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"2208:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4509,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"2218:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4510,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"2223:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4513,"nodeType":"ExpressionStatement","src":"2208:16:24"},{"expression":{"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4514,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"2238:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4515,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"2247:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4518,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"2267:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4516,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"2251:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"2251:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4522,"nodeType":"ExpressionStatement","src":"2238:37:24"}]}]},"documentation":{"id":4491,"nodeType":"StructuredDocumentation","src":"1939:108:24","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":4525,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:24","nodeType":"FunctionDefinition","parameters":{"id":4496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4493,"mutability":"mutable","name":"a","nameLocation":"2076:1:24","nodeType":"VariableDeclaration","scope":4525,"src":"2068:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4492,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4495,"mutability":"mutable","name":"b","nameLocation":"2087:1:24","nodeType":"VariableDeclaration","scope":4525,"src":"2079:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4494,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:24"},"returnParameters":{"id":4501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4498,"mutability":"mutable","name":"success","nameLocation":"2118:7:24","nodeType":"VariableDeclaration","scope":4525,"src":"2113:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4497,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4500,"mutability":"mutable","name":"result","nameLocation":"2135:6:24","nodeType":"VariableDeclaration","scope":4525,"src":"2127:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4499,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:24"},"scope":6036,"src":"2052:240:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4554,"nodeType":"Block","src":"2505:391:24","statements":[{"id":4553,"nodeType":"UncheckedBlock","src":"2515:375:24","statements":[{"assignments":[4538],"declarations":[{"constant":false,"id":4538,"mutability":"mutable","name":"c","nameLocation":"2547:1:24","nodeType":"VariableDeclaration","scope":4553,"src":"2539:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4537,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4542,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4539,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"2551:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4540,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"2555:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:24"},{"AST":{"nodeType":"YulBlock","src":"2595:188:24","statements":[{"nodeType":"YulAssignment","src":"2727:42:24","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:24"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:24"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:24"},"nodeType":"YulFunctionCall","src":"2744:9:24"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:24"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:24"},"nodeType":"YulFunctionCall","src":"2741:16:24"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:24"},"nodeType":"YulFunctionCall","src":"2759:9:24"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:24"},"nodeType":"YulFunctionCall","src":"2738:31:24"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4528,"isOffset":false,"isSlot":false,"src":"2751:1:24","valueSize":1},{"declaration":4528,"isOffset":false,"isSlot":false,"src":"2766:1:24","valueSize":1},{"declaration":4530,"isOffset":false,"isSlot":false,"src":"2755:1:24","valueSize":1},{"declaration":4538,"isOffset":false,"isSlot":false,"src":"2748:1:24","valueSize":1},{"declaration":4533,"isOffset":false,"isSlot":false,"src":"2727:7:24","valueSize":1}],"flags":["memory-safe"],"id":4543,"nodeType":"InlineAssembly","src":"2570:213:24"},{"expression":{"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4544,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"2842:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4545,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"2851:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4548,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4533,"src":"2871:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4546,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"2855:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"2855:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4552,"nodeType":"ExpressionStatement","src":"2842:37:24"}]}]},"documentation":{"id":4526,"nodeType":"StructuredDocumentation","src":"2298:111:24","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":4555,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:24","nodeType":"FunctionDefinition","parameters":{"id":4531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4528,"mutability":"mutable","name":"a","nameLocation":"2438:1:24","nodeType":"VariableDeclaration","scope":4555,"src":"2430:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4527,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4530,"mutability":"mutable","name":"b","nameLocation":"2449:1:24","nodeType":"VariableDeclaration","scope":4555,"src":"2441:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4529,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:24"},"returnParameters":{"id":4536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4533,"mutability":"mutable","name":"success","nameLocation":"2480:7:24","nodeType":"VariableDeclaration","scope":4555,"src":"2475:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4532,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4535,"mutability":"mutable","name":"result","nameLocation":"2497:6:24","nodeType":"VariableDeclaration","scope":4555,"src":"2489:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4534,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:24"},"scope":6036,"src":"2414:482:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4575,"nodeType":"Block","src":"3111:231:24","statements":[{"id":4574,"nodeType":"UncheckedBlock","src":"3121:215:24","statements":[{"expression":{"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4567,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"3145:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4568,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"3155:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4572,"nodeType":"ExpressionStatement","src":"3145:15:24"},{"AST":{"nodeType":"YulBlock","src":"3199:127:24","statements":[{"nodeType":"YulAssignment","src":"3293:19:24","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:24"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:24"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:24"},"nodeType":"YulFunctionCall","src":"3303:9:24"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4558,"isOffset":false,"isSlot":false,"src":"3307:1:24","valueSize":1},{"declaration":4560,"isOffset":false,"isSlot":false,"src":"3310:1:24","valueSize":1},{"declaration":4565,"isOffset":false,"isSlot":false,"src":"3293:6:24","valueSize":1}],"flags":["memory-safe"],"id":4573,"nodeType":"InlineAssembly","src":"3174:152:24"}]}]},"documentation":{"id":4556,"nodeType":"StructuredDocumentation","src":"2902:113:24","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4576,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:24","nodeType":"FunctionDefinition","parameters":{"id":4561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4558,"mutability":"mutable","name":"a","nameLocation":"3044:1:24","nodeType":"VariableDeclaration","scope":4576,"src":"3036:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4557,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4560,"mutability":"mutable","name":"b","nameLocation":"3055:1:24","nodeType":"VariableDeclaration","scope":4576,"src":"3047:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4559,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:24"},"returnParameters":{"id":4566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4563,"mutability":"mutable","name":"success","nameLocation":"3086:7:24","nodeType":"VariableDeclaration","scope":4576,"src":"3081:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4562,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4565,"mutability":"mutable","name":"result","nameLocation":"3103:6:24","nodeType":"VariableDeclaration","scope":4576,"src":"3095:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4564,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:24"},"scope":6036,"src":"3020:322:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4596,"nodeType":"Block","src":"3567:231:24","statements":[{"id":4595,"nodeType":"UncheckedBlock","src":"3577:215:24","statements":[{"expression":{"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4588,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"3601:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4589,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"3611:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4593,"nodeType":"ExpressionStatement","src":"3601:15:24"},{"AST":{"nodeType":"YulBlock","src":"3655:127:24","statements":[{"nodeType":"YulAssignment","src":"3749:19:24","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:24"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:24"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:24"},"nodeType":"YulFunctionCall","src":"3759:9:24"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4579,"isOffset":false,"isSlot":false,"src":"3763:1:24","valueSize":1},{"declaration":4581,"isOffset":false,"isSlot":false,"src":"3766:1:24","valueSize":1},{"declaration":4586,"isOffset":false,"isSlot":false,"src":"3749:6:24","valueSize":1}],"flags":["memory-safe"],"id":4594,"nodeType":"InlineAssembly","src":"3630:152:24"}]}]},"documentation":{"id":4577,"nodeType":"StructuredDocumentation","src":"3348:123:24","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4597,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:24","nodeType":"FunctionDefinition","parameters":{"id":4582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4579,"mutability":"mutable","name":"a","nameLocation":"3500:1:24","nodeType":"VariableDeclaration","scope":4597,"src":"3492:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4578,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4581,"mutability":"mutable","name":"b","nameLocation":"3511:1:24","nodeType":"VariableDeclaration","scope":4597,"src":"3503:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4580,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:24"},"returnParameters":{"id":4587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4584,"mutability":"mutable","name":"success","nameLocation":"3542:7:24","nodeType":"VariableDeclaration","scope":4597,"src":"3537:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4583,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4586,"mutability":"mutable","name":"result","nameLocation":"3559:6:24","nodeType":"VariableDeclaration","scope":4597,"src":"3551:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4585,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:24"},"scope":6036,"src":"3476:322:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4626,"nodeType":"Block","src":"3989:122:24","statements":[{"assignments":[4608,4610],"declarations":[{"constant":false,"id":4608,"mutability":"mutable","name":"success","nameLocation":"4005:7:24","nodeType":"VariableDeclaration","scope":4626,"src":"4000:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4607,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4610,"mutability":"mutable","name":"result","nameLocation":"4022:6:24","nodeType":"VariableDeclaration","scope":4626,"src":"4014:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4609,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4615,"initialValue":{"arguments":[{"id":4612,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"4039:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4613,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"4042:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4611,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"4032:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:24"},{"expression":{"arguments":[{"id":4617,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"4069:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4618,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"4078:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4620,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4619,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:24","memberName":"max","nodeType":"MemberAccess","src":"4086:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4616,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"4061:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4606,"id":4625,"nodeType":"Return","src":"4054:50:24"}]},"documentation":{"id":4598,"nodeType":"StructuredDocumentation","src":"3804:103:24","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4627,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:24","nodeType":"FunctionDefinition","parameters":{"id":4603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4600,"mutability":"mutable","name":"a","nameLocation":"3943:1:24","nodeType":"VariableDeclaration","scope":4627,"src":"3935:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4599,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4602,"mutability":"mutable","name":"b","nameLocation":"3954:1:24","nodeType":"VariableDeclaration","scope":4627,"src":"3946:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4601,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:24"},"returnParameters":{"id":4606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4627,"src":"3980:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4604,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:24"},"scope":6036,"src":"3912:199:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4646,"nodeType":"Block","src":"4294:73:24","statements":[{"assignments":[null,4638],"declarations":[null,{"constant":false,"id":4638,"mutability":"mutable","name":"result","nameLocation":"4315:6:24","nodeType":"VariableDeclaration","scope":4646,"src":"4307:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4637,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4643,"initialValue":{"arguments":[{"id":4640,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"4332:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4641,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"4335:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4639,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"4325:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:24"},{"expression":{"id":4644,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"4354:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4636,"id":4645,"nodeType":"Return","src":"4347:13:24"}]},"documentation":{"id":4628,"nodeType":"StructuredDocumentation","src":"4117:95:24","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":4647,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:24","nodeType":"FunctionDefinition","parameters":{"id":4633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4630,"mutability":"mutable","name":"a","nameLocation":"4248:1:24","nodeType":"VariableDeclaration","scope":4647,"src":"4240:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4629,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4632,"mutability":"mutable","name":"b","nameLocation":"4259:1:24","nodeType":"VariableDeclaration","scope":4647,"src":"4251:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4631,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:24"},"returnParameters":{"id":4636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4647,"src":"4285:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4634,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:24"},"scope":6036,"src":"4217:150:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4676,"nodeType":"Block","src":"4564:122:24","statements":[{"assignments":[4658,4660],"declarations":[{"constant":false,"id":4658,"mutability":"mutable","name":"success","nameLocation":"4580:7:24","nodeType":"VariableDeclaration","scope":4676,"src":"4575:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4657,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4660,"mutability":"mutable","name":"result","nameLocation":"4597:6:24","nodeType":"VariableDeclaration","scope":4676,"src":"4589:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4659,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4665,"initialValue":{"arguments":[{"id":4662,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"4614:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4663,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"4617:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4661,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"4607:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:24"},{"expression":{"arguments":[{"id":4667,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"4644:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4668,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4660,"src":"4653:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4670,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4669,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:24","memberName":"max","nodeType":"MemberAccess","src":"4661:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4666,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"4636:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4656,"id":4675,"nodeType":"Return","src":"4629:50:24"}]},"documentation":{"id":4648,"nodeType":"StructuredDocumentation","src":"4373:109:24","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4677,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:24","nodeType":"FunctionDefinition","parameters":{"id":4653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4650,"mutability":"mutable","name":"a","nameLocation":"4518:1:24","nodeType":"VariableDeclaration","scope":4677,"src":"4510:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4649,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4652,"mutability":"mutable","name":"b","nameLocation":"4529:1:24","nodeType":"VariableDeclaration","scope":4677,"src":"4521:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4651,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:24"},"returnParameters":{"id":4656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4677,"src":"4555:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4654,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:24"},"scope":6036,"src":"4487:199:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4703,"nodeType":"Block","src":"5158:207:24","statements":[{"id":4702,"nodeType":"UncheckedBlock","src":"5168:191:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4689,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"5306:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4690,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"5312:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4691,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"5316:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4693,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4696,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"5337:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4694,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"5321:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"5321:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4699,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4688,"id":4701,"nodeType":"Return","src":"5299:49:24"}]}]},"documentation":{"id":4678,"nodeType":"StructuredDocumentation","src":"4692:374:24","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4704,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:24","nodeType":"FunctionDefinition","parameters":{"id":4685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4680,"mutability":"mutable","name":"condition","nameLocation":"5093:9:24","nodeType":"VariableDeclaration","scope":4704,"src":"5088:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4679,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4682,"mutability":"mutable","name":"a","nameLocation":"5112:1:24","nodeType":"VariableDeclaration","scope":4704,"src":"5104:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4681,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4684,"mutability":"mutable","name":"b","nameLocation":"5123:1:24","nodeType":"VariableDeclaration","scope":4704,"src":"5115:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4683,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:24"},"returnParameters":{"id":4688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4704,"src":"5149:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4686,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:24"},"scope":6036,"src":"5071:294:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4722,"nodeType":"Block","src":"5502:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4715,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"5527:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4716,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4709,"src":"5531:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4718,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4707,"src":"5534:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4719,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4709,"src":"5537:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4714,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"5519:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4713,"id":4721,"nodeType":"Return","src":"5512:27:24"}]},"documentation":{"id":4705,"nodeType":"StructuredDocumentation","src":"5371:59:24","text":" @dev Returns the largest of two numbers."},"id":4723,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:24","nodeType":"FunctionDefinition","parameters":{"id":4710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4707,"mutability":"mutable","name":"a","nameLocation":"5456:1:24","nodeType":"VariableDeclaration","scope":4723,"src":"5448:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4706,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4709,"mutability":"mutable","name":"b","nameLocation":"5467:1:24","nodeType":"VariableDeclaration","scope":4723,"src":"5459:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4708,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:24"},"returnParameters":{"id":4713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4723,"src":"5493:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4711,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:24"},"scope":6036,"src":"5435:111:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4741,"nodeType":"Block","src":"5684:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4734,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"5709:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4735,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"5713:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4737,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"5716:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4738,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"5719:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4733,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"5701:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4732,"id":4740,"nodeType":"Return","src":"5694:27:24"}]},"documentation":{"id":4724,"nodeType":"StructuredDocumentation","src":"5552:60:24","text":" @dev Returns the smallest of two numbers."},"id":4742,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:24","nodeType":"FunctionDefinition","parameters":{"id":4729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4726,"mutability":"mutable","name":"a","nameLocation":"5638:1:24","nodeType":"VariableDeclaration","scope":4742,"src":"5630:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4725,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4728,"mutability":"mutable","name":"b","nameLocation":"5649:1:24","nodeType":"VariableDeclaration","scope":4742,"src":"5641:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4727,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:24"},"returnParameters":{"id":4732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4742,"src":"5675:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4730,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:24"},"scope":6036,"src":"5617:111:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4764,"nodeType":"Block","src":"5912:82:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4752,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"5967:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4753,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"5971:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4755,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4756,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"5977:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4757,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"5981:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4759,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4751,"id":4763,"nodeType":"Return","src":"5959:28:24"}]},"documentation":{"id":4743,"nodeType":"StructuredDocumentation","src":"5734:102:24","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4765,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:24","nodeType":"FunctionDefinition","parameters":{"id":4748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4745,"mutability":"mutable","name":"a","nameLocation":"5866:1:24","nodeType":"VariableDeclaration","scope":4765,"src":"5858:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4744,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4747,"mutability":"mutable","name":"b","nameLocation":"5877:1:24","nodeType":"VariableDeclaration","scope":4765,"src":"5869:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4746,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:24"},"returnParameters":{"id":4751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4765,"src":"5903:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4749,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:24"},"scope":6036,"src":"5841:153:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4805,"nodeType":"Block","src":"6286:633:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4775,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4770,"src":"6300:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4786,"nodeType":"IfStatement","src":"6296:150:24","trueBody":{"id":4785,"nodeType":"Block","src":"6308:138:24","statements":[{"expression":{"arguments":[{"expression":{"id":4781,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"6412:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1822_$","typeString":"type(library Panic)"}},"id":4782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1789,"src":"6412:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4778,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"6400:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1822_$","typeString":"type(library Panic)"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1821,"src":"6400:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4784,"nodeType":"ExpressionStatement","src":"6400:35:24"}]}},{"id":4804,"nodeType":"UncheckedBlock","src":"6829:84:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4789,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"6876:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4787,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"6860:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"6860:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4793,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"6887:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4796,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4797,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4770,"src":"6896:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4801,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4774,"id":4803,"nodeType":"Return","src":"6853:49:24"}]}]},"documentation":{"id":4766,"nodeType":"StructuredDocumentation","src":"6000:210:24","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4806,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:24","nodeType":"FunctionDefinition","parameters":{"id":4771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4768,"mutability":"mutable","name":"a","nameLocation":"6240:1:24","nodeType":"VariableDeclaration","scope":4806,"src":"6232:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4767,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4770,"mutability":"mutable","name":"b","nameLocation":"6251:1:24","nodeType":"VariableDeclaration","scope":4806,"src":"6243:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4769,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:24"},"returnParameters":{"id":4774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4806,"src":"6277:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4772,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:24"},"scope":6036,"src":"6215:704:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4941,"nodeType":"Block","src":"7340:3585:24","statements":[{"id":4940,"nodeType":"UncheckedBlock","src":"7350:3569:24","statements":[{"assignments":[4819,4821],"declarations":[{"constant":false,"id":4819,"mutability":"mutable","name":"high","nameLocation":"7383:4:24","nodeType":"VariableDeclaration","scope":4940,"src":"7375:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4818,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4821,"mutability":"mutable","name":"low","nameLocation":"7397:3:24","nodeType":"VariableDeclaration","scope":4940,"src":"7389:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4820,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4826,"initialValue":{"arguments":[{"id":4823,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"7411:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4824,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"7414:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4822,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"7404:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4827,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"7498:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4835,"nodeType":"IfStatement","src":"7494:365:24","trueBody":{"id":4834,"nodeType":"Block","src":"7509:350:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4830,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"7827:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4831,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"7833:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4817,"id":4833,"nodeType":"Return","src":"7820:24:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4836,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"7969:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4837,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"7984:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4854,"nodeType":"IfStatement","src":"7965:142:24","trueBody":{"id":4853,"nodeType":"Block","src":"7990:117:24","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4843,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"8028:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4846,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"8046:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1822_$","typeString":"type(library Panic)"}},"id":4847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1789,"src":"8046:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4848,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"8070:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1822_$","typeString":"type(library Panic)"}},"id":4849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:24","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1785,"src":"8070:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4842,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"8020:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4839,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"8008:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1822_$","typeString":"type(library Panic)"}},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1821,"src":"8008:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4852,"nodeType":"ExpressionStatement","src":"8008:84:24"}]}},{"assignments":[4856],"declarations":[{"constant":false,"id":4856,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:24","nodeType":"VariableDeclaration","scope":4940,"src":"8359:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4855,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4857,"nodeType":"VariableDeclarationStatement","src":"8359:17:24"},{"AST":{"nodeType":"YulBlock","src":"8415:283:24","statements":[{"nodeType":"YulAssignment","src":"8484:38:24","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:24"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:24"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:24"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:24"},"nodeType":"YulFunctionCall","src":"8497:25:24"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:24"}]},{"nodeType":"YulAssignment","src":"8604:37:24","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:24"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:24"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:24"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:24"},"nodeType":"YulFunctionCall","src":"8622:18:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:24"},"nodeType":"YulFunctionCall","src":"8612:29:24"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:24"}]},{"nodeType":"YulAssignment","src":"8658:26:24","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:24"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:24"},"nodeType":"YulFunctionCall","src":"8665:19:24"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4813,"isOffset":false,"isSlot":false,"src":"8510:11:24","valueSize":1},{"declaration":4819,"isOffset":false,"isSlot":false,"src":"8604:4:24","valueSize":1},{"declaration":4819,"isOffset":false,"isSlot":false,"src":"8616:4:24","valueSize":1},{"declaration":4821,"isOffset":false,"isSlot":false,"src":"8636:3:24","valueSize":1},{"declaration":4821,"isOffset":false,"isSlot":false,"src":"8658:3:24","valueSize":1},{"declaration":4821,"isOffset":false,"isSlot":false,"src":"8669:3:24","valueSize":1},{"declaration":4856,"isOffset":false,"isSlot":false,"src":"8484:9:24","valueSize":1},{"declaration":4856,"isOffset":false,"isSlot":false,"src":"8625:9:24","valueSize":1},{"declaration":4856,"isOffset":false,"isSlot":false,"src":"8674:9:24","valueSize":1},{"declaration":4809,"isOffset":false,"isSlot":false,"src":"8504:1:24","valueSize":1},{"declaration":4811,"isOffset":false,"isSlot":false,"src":"8507:1:24","valueSize":1}],"flags":["memory-safe"],"id":4858,"nodeType":"InlineAssembly","src":"8390:308:24"},{"assignments":[4860],"declarations":[{"constant":false,"id":4860,"mutability":"mutable","name":"twos","nameLocation":"8910:4:24","nodeType":"VariableDeclaration","scope":4940,"src":"8902:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4859,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4867,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4861,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"8917:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4863,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"8936:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4865,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:24"},{"AST":{"nodeType":"YulBlock","src":"8987:359:24","statements":[{"nodeType":"YulAssignment","src":"9052:37:24","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:24"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:24"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:24"},"nodeType":"YulFunctionCall","src":"9067:22:24"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:24"}]},{"nodeType":"YulAssignment","src":"9153:21:24","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:24"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:24"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:24"},"nodeType":"YulFunctionCall","src":"9160:14:24"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:24"}]},{"nodeType":"YulAssignment","src":"9293:39:24","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:24","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:24"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:24"},"nodeType":"YulFunctionCall","src":"9309:12:24"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:24"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:24"},"nodeType":"YulFunctionCall","src":"9305:23:24"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:24","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:24"},"nodeType":"YulFunctionCall","src":"9301:31:24"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4813,"isOffset":false,"isSlot":false,"src":"9052:11:24","valueSize":1},{"declaration":4813,"isOffset":false,"isSlot":false,"src":"9071:11:24","valueSize":1},{"declaration":4821,"isOffset":false,"isSlot":false,"src":"9153:3:24","valueSize":1},{"declaration":4821,"isOffset":false,"isSlot":false,"src":"9164:3:24","valueSize":1},{"declaration":4860,"isOffset":false,"isSlot":false,"src":"9084:4:24","valueSize":1},{"declaration":4860,"isOffset":false,"isSlot":false,"src":"9169:4:24","valueSize":1},{"declaration":4860,"isOffset":false,"isSlot":false,"src":"9293:4:24","valueSize":1},{"declaration":4860,"isOffset":false,"isSlot":false,"src":"9316:4:24","valueSize":1},{"declaration":4860,"isOffset":false,"isSlot":false,"src":"9323:4:24","valueSize":1}],"flags":["memory-safe"],"id":4868,"nodeType":"InlineAssembly","src":"8962:384:24"},{"expression":{"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4869,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"9409:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4870,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"9416:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4871,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"9423:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4874,"nodeType":"ExpressionStatement","src":"9409:18:24"},{"assignments":[4876],"declarations":[{"constant":false,"id":4876,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:24","nodeType":"VariableDeclaration","scope":4940,"src":"9762:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4875,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4883,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4878,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"9785:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4880,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:24"},{"expression":{"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4884,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"10018:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4886,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"10033:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4887,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"10047:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4891,"nodeType":"ExpressionStatement","src":"10018:36:24"},{"expression":{"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4892,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"10088:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4894,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"10103:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4895,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"10117:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4899,"nodeType":"ExpressionStatement","src":"10088:36:24"},{"expression":{"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4900,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"10160:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4902,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"10175:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4903,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"10189:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4907,"nodeType":"ExpressionStatement","src":"10160:36:24"},{"expression":{"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4908,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"10231:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4910,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"10246:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4911,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"10260:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4915,"nodeType":"ExpressionStatement","src":"10231:36:24"},{"expression":{"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4916,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"10304:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4918,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"10319:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4919,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"10333:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4923,"nodeType":"ExpressionStatement","src":"10304:36:24"},{"expression":{"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4924,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"10378:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4926,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"10393:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4927,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"10407:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4931,"nodeType":"ExpressionStatement","src":"10378:36:24"},{"expression":{"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4932,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4816,"src":"10859:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4933,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"10868:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4934,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"10874:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4937,"nodeType":"ExpressionStatement","src":"10859:22:24"},{"expression":{"id":4938,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4816,"src":"10902:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4817,"id":4939,"nodeType":"Return","src":"10895:13:24"}]}]},"documentation":{"id":4807,"nodeType":"StructuredDocumentation","src":"6925:312:24","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4942,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:24","nodeType":"FunctionDefinition","parameters":{"id":4814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4809,"mutability":"mutable","name":"x","nameLocation":"7266:1:24","nodeType":"VariableDeclaration","scope":4942,"src":"7258:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4808,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4811,"mutability":"mutable","name":"y","nameLocation":"7277:1:24","nodeType":"VariableDeclaration","scope":4942,"src":"7269:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4810,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4813,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:24","nodeType":"VariableDeclaration","scope":4942,"src":"7280:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4812,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:24"},"returnParameters":{"id":4817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4816,"mutability":"mutable","name":"result","nameLocation":"7332:6:24","nodeType":"VariableDeclaration","scope":4942,"src":"7324:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4815,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:24"},"scope":6036,"src":"7242:3683:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4978,"nodeType":"Block","src":"11164:128:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4958,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"11188:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4959,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"11191:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4960,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"11194:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4957,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4942,4979],"referencedDeclaration":4942,"src":"11181:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4965,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"11242:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"}],"id":4964,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"11225:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4427_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4968,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"11262:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4969,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"11265:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4970,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"11268:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4967,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:24","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4962,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"11209:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"11209:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4956,"id":4977,"nodeType":"Return","src":"11174:111:24"}]},"documentation":{"id":4943,"nodeType":"StructuredDocumentation","src":"10931:118:24","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4979,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:24","nodeType":"FunctionDefinition","parameters":{"id":4953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"mutability":"mutable","name":"x","nameLocation":"11078:1:24","nodeType":"VariableDeclaration","scope":4979,"src":"11070:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4944,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4947,"mutability":"mutable","name":"y","nameLocation":"11089:1:24","nodeType":"VariableDeclaration","scope":4979,"src":"11081:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4946,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4949,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:24","nodeType":"VariableDeclaration","scope":4979,"src":"11092:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4948,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4952,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:24","nodeType":"VariableDeclaration","scope":4979,"src":"11113:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"},"typeName":{"id":4951,"nodeType":"UserDefinedTypeName","pathNode":{"id":4950,"name":"Rounding","nameLocations":["11113:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4427,"src":"11113:8:24"},"referencedDeclaration":4427,"src":"11113:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:24"},"returnParameters":{"id":4956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4979,"src":"11155:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4954,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:24"},"scope":6036,"src":"11054:238:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5028,"nodeType":"Block","src":"11500:245:24","statements":[{"id":5027,"nodeType":"UncheckedBlock","src":"11510:229:24","statements":[{"assignments":[4992,4994],"declarations":[{"constant":false,"id":4992,"mutability":"mutable","name":"high","nameLocation":"11543:4:24","nodeType":"VariableDeclaration","scope":5027,"src":"11535:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4991,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4994,"mutability":"mutable","name":"low","nameLocation":"11557:3:24","nodeType":"VariableDeclaration","scope":5027,"src":"11549:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4993,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4999,"initialValue":{"arguments":[{"id":4996,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"11571:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4997,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"11574:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4995,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"11564:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5000,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"11594:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5002,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"11607:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5013,"nodeType":"IfStatement","src":"11590:86:24","trueBody":{"id":5012,"nodeType":"Block","src":"11610:66:24","statements":[{"expression":{"arguments":[{"expression":{"id":5008,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"11640:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1822_$","typeString":"type(library Panic)"}},"id":5009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:24","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1785,"src":"11640:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5005,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"11628:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1822_$","typeString":"type(library Panic)"}},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1821,"src":"11628:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5011,"nodeType":"ExpressionStatement","src":"11628:33:24"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5014,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"11697:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":5015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5016,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"11712:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":5018,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5021,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"11719:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5022,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"11726:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5024,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4990,"id":5026,"nodeType":"Return","src":"11689:39:24"}]}]},"documentation":{"id":4980,"nodeType":"StructuredDocumentation","src":"11298:111:24","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":5029,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:24","nodeType":"FunctionDefinition","parameters":{"id":4987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4982,"mutability":"mutable","name":"x","nameLocation":"11438:1:24","nodeType":"VariableDeclaration","scope":5029,"src":"11430:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4981,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4984,"mutability":"mutable","name":"y","nameLocation":"11449:1:24","nodeType":"VariableDeclaration","scope":5029,"src":"11441:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4983,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4986,"mutability":"mutable","name":"n","nameLocation":"11458:1:24","nodeType":"VariableDeclaration","scope":5029,"src":"11452:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4985,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:24"},"returnParameters":{"id":4990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4989,"mutability":"mutable","name":"result","nameLocation":"11492:6:24","nodeType":"VariableDeclaration","scope":5029,"src":"11484:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4988,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:24"},"scope":6036,"src":"11414:331:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5067,"nodeType":"Block","src":"11963:113:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5045,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"11987:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5046,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"11990:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5047,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"11993:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5044,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[5029,5068],"referencedDeclaration":5029,"src":"11980:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5052,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"12031:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"}],"id":5051,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"12014:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4427_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5055,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"12051:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5056,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"12054:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5058,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"12062:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5054,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:24","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5049,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"11998:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"11998:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5043,"id":5066,"nodeType":"Return","src":"11973:96:24"}]},"documentation":{"id":5030,"nodeType":"StructuredDocumentation","src":"11751:109:24","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":5068,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:24","nodeType":"FunctionDefinition","parameters":{"id":5040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5032,"mutability":"mutable","name":"x","nameLocation":"11889:1:24","nodeType":"VariableDeclaration","scope":5068,"src":"11881:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5031,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5034,"mutability":"mutable","name":"y","nameLocation":"11900:1:24","nodeType":"VariableDeclaration","scope":5068,"src":"11892:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5033,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5036,"mutability":"mutable","name":"n","nameLocation":"11909:1:24","nodeType":"VariableDeclaration","scope":5068,"src":"11903:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5035,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5039,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:24","nodeType":"VariableDeclaration","scope":5068,"src":"11912:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"},"typeName":{"id":5038,"nodeType":"UserDefinedTypeName","pathNode":{"id":5037,"name":"Rounding","nameLocations":["11912:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4427,"src":"11912:8:24"},"referencedDeclaration":4427,"src":"11912:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:24"},"returnParameters":{"id":5043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5068,"src":"11954:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5041,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:24"},"scope":6036,"src":"11865:211:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5164,"nodeType":"Block","src":"12710:1849:24","statements":[{"id":5163,"nodeType":"UncheckedBlock","src":"12720:1833:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5078,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"12748:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5083,"nodeType":"IfStatement","src":"12744:20:24","trueBody":{"expression":{"hexValue":"30","id":5081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5077,"id":5082,"nodeType":"Return","src":"12756:8:24"}},{"assignments":[5085],"declarations":[{"constant":false,"id":5085,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:24","nodeType":"VariableDeclaration","scope":5163,"src":"13235:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5084,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5089,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5086,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"13255:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5087,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"13259:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:24"},{"assignments":[5091],"declarations":[{"constant":false,"id":5091,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:24","nodeType":"VariableDeclaration","scope":5163,"src":"13274:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5090,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5093,"initialValue":{"id":5092,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"13288:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:24"},{"assignments":[5095],"declarations":[{"constant":false,"id":5095,"mutability":"mutable","name":"x","nameLocation":"13432:1:24","nodeType":"VariableDeclaration","scope":5163,"src":"13425:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5094,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5097,"initialValue":{"hexValue":"30","id":5096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:24"},{"assignments":[5099],"declarations":[{"constant":false,"id":5099,"mutability":"mutable","name":"y","nameLocation":"13458:1:24","nodeType":"VariableDeclaration","scope":5163,"src":"13451:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5098,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5101,"initialValue":{"hexValue":"31","id":5100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:24"},{"body":{"id":5138,"nodeType":"Block","src":"13501:882:24","statements":[{"assignments":[5106],"declarations":[{"constant":false,"id":5106,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:24","nodeType":"VariableDeclaration","scope":5138,"src":"13519:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5105,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5110,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5107,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"13538:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5108,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"13544:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:24"},{"expression":{"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5111,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"13573:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5112,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"13578:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5113,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5114,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"13678:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5115,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"13923:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5116,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"13929:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5117,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"13941:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5120,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:24","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5122,"nodeType":"ExpressionStatement","src":"13572:395:24"},{"expression":{"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5123,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"13987:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5124,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"13990:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5125,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5126,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"14072:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5127,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"14326:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5128,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"14330:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5131,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"14341:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5129,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:24","typeDescriptions":{}}},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5135,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:24","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5137,"nodeType":"ExpressionStatement","src":"13986:382:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5102,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"13485:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5139,"nodeType":"WhileStatement","src":"13478:905:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5140,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"14401:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":5141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5145,"nodeType":"IfStatement","src":"14397:22:24","trueBody":{"expression":{"hexValue":"30","id":5143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5077,"id":5144,"nodeType":"Return","src":"14411:8:24"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5147,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"14470:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5150,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"14477:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:24","subExpression":{"id":5153,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"14490:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5151,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:24","typeDescriptions":{}}},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5159,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"14502:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5157,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:24","typeDescriptions":{}}},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5146,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"14462:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5077,"id":5162,"nodeType":"Return","src":"14455:50:24"}]}]},"documentation":{"id":5069,"nodeType":"StructuredDocumentation","src":"12082:553:24","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":5165,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:24","nodeType":"FunctionDefinition","parameters":{"id":5074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5071,"mutability":"mutable","name":"a","nameLocation":"12664:1:24","nodeType":"VariableDeclaration","scope":5165,"src":"12656:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5070,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5073,"mutability":"mutable","name":"n","nameLocation":"12675:1:24","nodeType":"VariableDeclaration","scope":5165,"src":"12667:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5072,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:24"},"returnParameters":{"id":5077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5165,"src":"12701:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5075,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:24"},"scope":6036,"src":"12640:1919:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5185,"nodeType":"Block","src":"15159:82:24","statements":[{"id":5184,"nodeType":"UncheckedBlock","src":"15169:66:24","statements":[{"expression":{"arguments":[{"id":5177,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5168,"src":"15212:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5178,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"15215:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5181,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"15222:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5175,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"15200:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6036_$","typeString":"type(library Math)"}},"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:24","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5222,"src":"15200:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5174,"id":5183,"nodeType":"Return","src":"15193:31:24"}]}]},"documentation":{"id":5166,"nodeType":"StructuredDocumentation","src":"14565:514:24","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":5186,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:24","nodeType":"FunctionDefinition","parameters":{"id":5171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5168,"mutability":"mutable","name":"a","nameLocation":"15113:1:24","nodeType":"VariableDeclaration","scope":5186,"src":"15105:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5167,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5170,"mutability":"mutable","name":"p","nameLocation":"15124:1:24","nodeType":"VariableDeclaration","scope":5186,"src":"15116:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5169,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:24"},"returnParameters":{"id":5174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5186,"src":"15150:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5172,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:24"},"scope":6036,"src":"15084:157:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5221,"nodeType":"Block","src":"16011:174:24","statements":[{"assignments":[5199,5201],"declarations":[{"constant":false,"id":5199,"mutability":"mutable","name":"success","nameLocation":"16027:7:24","nodeType":"VariableDeclaration","scope":5221,"src":"16022:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5198,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5201,"mutability":"mutable","name":"result","nameLocation":"16044:6:24","nodeType":"VariableDeclaration","scope":5221,"src":"16036:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5200,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5207,"initialValue":{"arguments":[{"id":5203,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"16064:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5204,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"16067:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5205,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"16070:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5202,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5246,5328],"referencedDeclaration":5246,"src":"16054:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:24"},{"condition":{"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:24","subExpression":{"id":5208,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"16087:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5218,"nodeType":"IfStatement","src":"16082:74:24","trueBody":{"id":5217,"nodeType":"Block","src":"16096:60:24","statements":[{"expression":{"arguments":[{"expression":{"id":5213,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"16122:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1822_$","typeString":"type(library Panic)"}},"id":5214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1789,"src":"16122:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5210,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"16110:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1822_$","typeString":"type(library Panic)"}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1821,"src":"16110:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5216,"nodeType":"ExpressionStatement","src":"16110:35:24"}]}},{"expression":{"id":5219,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"16172:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5197,"id":5220,"nodeType":"Return","src":"16165:13:24"}]},"documentation":{"id":5187,"nodeType":"StructuredDocumentation","src":"15247:678:24","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5222,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:24","nodeType":"FunctionDefinition","parameters":{"id":5194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5189,"mutability":"mutable","name":"b","nameLocation":"15954:1:24","nodeType":"VariableDeclaration","scope":5222,"src":"15946:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5188,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5191,"mutability":"mutable","name":"e","nameLocation":"15965:1:24","nodeType":"VariableDeclaration","scope":5222,"src":"15957:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5190,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5193,"mutability":"mutable","name":"m","nameLocation":"15976:1:24","nodeType":"VariableDeclaration","scope":5222,"src":"15968:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5192,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:24"},"returnParameters":{"id":5197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5222,"src":"16002:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5195,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:24"},"scope":6036,"src":"15930:255:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5245,"nodeType":"Block","src":"17039:1493:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5236,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"17053:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5243,"nodeType":"IfStatement","src":"17049:29:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5241,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5235,"id":5242,"nodeType":"Return","src":"17061:17:24"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:24","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:24","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:24"},"nodeType":"YulFunctionCall","src":"17138:11:24"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:24","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:24","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:24"},"nodeType":"YulFunctionCall","src":"18050:17:24"},"nodeType":"YulExpressionStatement","src":"18050:17:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:24"},"nodeType":"YulFunctionCall","src":"18087:14:24"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:24","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:24"},"nodeType":"YulFunctionCall","src":"18080:28:24"},"nodeType":"YulExpressionStatement","src":"18080:28:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:24","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:24"},"nodeType":"YulFunctionCall","src":"18128:14:24"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:24","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:24"},"nodeType":"YulFunctionCall","src":"18121:28:24"},"nodeType":"YulExpressionStatement","src":"18121:28:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:24","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:24"},"nodeType":"YulFunctionCall","src":"18169:14:24"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:24"},"nodeType":"YulFunctionCall","src":"18162:25:24"},"nodeType":"YulExpressionStatement","src":"18162:25:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:24","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:24"},"nodeType":"YulFunctionCall","src":"18207:14:24"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:24"},"nodeType":"YulFunctionCall","src":"18200:25:24"},"nodeType":"YulExpressionStatement","src":"18200:25:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:24","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:24"},"nodeType":"YulFunctionCall","src":"18245:14:24"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:24"},"nodeType":"YulFunctionCall","src":"18238:25:24"},"nodeType":"YulExpressionStatement","src":"18238:25:24"},{"nodeType":"YulAssignment","src":"18425:57:24","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:24"},"nodeType":"YulFunctionCall","src":"18447:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:24","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:24"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:24","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:24","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:24","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:24"},"nodeType":"YulFunctionCall","src":"18436:46:24"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:24"}]},{"nodeType":"YulAssignment","src":"18495:21:24","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:24","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:24"},"nodeType":"YulFunctionCall","src":"18505:11:24"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5225,"isOffset":false,"isSlot":false,"src":"18185:1:24","valueSize":1},{"declaration":5227,"isOffset":false,"isSlot":false,"src":"18223:1:24","valueSize":1},{"declaration":5229,"isOffset":false,"isSlot":false,"src":"18261:1:24","valueSize":1},{"declaration":5234,"isOffset":false,"isSlot":false,"src":"18495:6:24","valueSize":1},{"declaration":5232,"isOffset":false,"isSlot":false,"src":"18425:7:24","valueSize":1}],"flags":["memory-safe"],"id":5244,"nodeType":"InlineAssembly","src":"17088:1438:24"}]},"documentation":{"id":5223,"nodeType":"StructuredDocumentation","src":"16191:738:24","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":5246,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:24","nodeType":"FunctionDefinition","parameters":{"id":5230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5225,"mutability":"mutable","name":"b","nameLocation":"16961:1:24","nodeType":"VariableDeclaration","scope":5246,"src":"16953:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5224,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5227,"mutability":"mutable","name":"e","nameLocation":"16972:1:24","nodeType":"VariableDeclaration","scope":5246,"src":"16964:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5226,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5229,"mutability":"mutable","name":"m","nameLocation":"16983:1:24","nodeType":"VariableDeclaration","scope":5246,"src":"16975:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5228,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:24"},"returnParameters":{"id":5235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5232,"mutability":"mutable","name":"success","nameLocation":"17014:7:24","nodeType":"VariableDeclaration","scope":5246,"src":"17009:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5231,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5234,"mutability":"mutable","name":"result","nameLocation":"17031:6:24","nodeType":"VariableDeclaration","scope":5246,"src":"17023:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5233,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:24"},"scope":6036,"src":"16934:1598:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5281,"nodeType":"Block","src":"18729:179:24","statements":[{"assignments":[5259,5261],"declarations":[{"constant":false,"id":5259,"mutability":"mutable","name":"success","nameLocation":"18745:7:24","nodeType":"VariableDeclaration","scope":5281,"src":"18740:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5258,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5261,"mutability":"mutable","name":"result","nameLocation":"18767:6:24","nodeType":"VariableDeclaration","scope":5281,"src":"18754:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5260,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5267,"initialValue":{"arguments":[{"id":5263,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"18787:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5264,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"18790:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5265,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"18793:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5262,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5246,5328],"referencedDeclaration":5328,"src":"18777:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:24"},{"condition":{"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:24","subExpression":{"id":5268,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"18810:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5278,"nodeType":"IfStatement","src":"18805:74:24","trueBody":{"id":5277,"nodeType":"Block","src":"18819:60:24","statements":[{"expression":{"arguments":[{"expression":{"id":5273,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"18845:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1822_$","typeString":"type(library Panic)"}},"id":5274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1789,"src":"18845:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5270,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"18833:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1822_$","typeString":"type(library Panic)"}},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1821,"src":"18833:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5276,"nodeType":"ExpressionStatement","src":"18833:35:24"}]}},{"expression":{"id":5279,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"18895:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5257,"id":5280,"nodeType":"Return","src":"18888:13:24"}]},"documentation":{"id":5247,"nodeType":"StructuredDocumentation","src":"18538:85:24","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5282,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:24","nodeType":"FunctionDefinition","parameters":{"id":5254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5249,"mutability":"mutable","name":"b","nameLocation":"18657:1:24","nodeType":"VariableDeclaration","scope":5282,"src":"18644:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5248,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5251,"mutability":"mutable","name":"e","nameLocation":"18673:1:24","nodeType":"VariableDeclaration","scope":5282,"src":"18660:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5250,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5253,"mutability":"mutable","name":"m","nameLocation":"18689:1:24","nodeType":"VariableDeclaration","scope":5282,"src":"18676:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5252,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:24"},"returnParameters":{"id":5257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5282,"src":"18715:12:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5255,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:24"},"scope":6036,"src":"18628:280:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5327,"nodeType":"Block","src":"19162:771:24","statements":[{"condition":{"arguments":[{"id":5297,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"19187:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5296,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"19176:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5306,"nodeType":"IfStatement","src":"19172:47:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5300,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5295,"id":5305,"nodeType":"Return","src":"19191:28:24"}},{"assignments":[5308],"declarations":[{"constant":false,"id":5308,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:24","nodeType":"VariableDeclaration","scope":5327,"src":"19230:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5307,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5311,"initialValue":{"expression":{"id":5309,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"19245:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:24","memberName":"length","nodeType":"MemberAccess","src":"19245:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:24"},{"expression":{"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5312,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"19335:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5315,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"19361:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:24","memberName":"length","nodeType":"MemberAccess","src":"19361:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5317,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"19371:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:24","memberName":"length","nodeType":"MemberAccess","src":"19371:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5319,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"19381:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5320,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"19387:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5321,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"19390:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5322,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"19393:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5313,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:24","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5325,"nodeType":"ExpressionStatement","src":"19335:60:24"},{"AST":{"nodeType":"YulBlock","src":"19431:496:24","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:24","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:24"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:24"},"nodeType":"YulFunctionCall","src":"19460:17:24"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:24","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:24","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:24"},"nodeType":"YulFunctionCall","src":"19589:5:24"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:24","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:24"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:24"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:24"},"nodeType":"YulFunctionCall","src":"19611:13:24"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:24"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:24"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:24"},"nodeType":"YulFunctionCall","src":"19578:62:24"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:24"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:24"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:24"},"nodeType":"YulFunctionCall","src":"19789:20:24"},"nodeType":"YulExpressionStatement","src":"19789:20:24"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:24","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:24"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:24"},"nodeType":"YulFunctionCall","src":"19898:18:24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:24"},"nodeType":"YulFunctionCall","src":"19885:32:24"},"nodeType":"YulExpressionStatement","src":"19885:32:24"}]},"evmVersion":"paris","externalReferences":[{"declaration":5308,"isOffset":false,"isSlot":false,"src":"19635:4:24","valueSize":1},{"declaration":5308,"isOffset":false,"isSlot":false,"src":"19804:4:24","valueSize":1},{"declaration":5308,"isOffset":false,"isSlot":false,"src":"19911:4:24","valueSize":1},{"declaration":5294,"isOffset":false,"isSlot":false,"src":"19464:6:24","valueSize":1},{"declaration":5294,"isOffset":false,"isSlot":false,"src":"19617:6:24","valueSize":1},{"declaration":5294,"isOffset":false,"isSlot":false,"src":"19796:6:24","valueSize":1},{"declaration":5292,"isOffset":false,"isSlot":false,"src":"19567:7:24","valueSize":1}],"flags":["memory-safe"],"id":5326,"nodeType":"InlineAssembly","src":"19406:521:24"}]},"documentation":{"id":5283,"nodeType":"StructuredDocumentation","src":"18914:88:24","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5328,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:24","nodeType":"FunctionDefinition","parameters":{"id":5290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5285,"mutability":"mutable","name":"b","nameLocation":"19048:1:24","nodeType":"VariableDeclaration","scope":5328,"src":"19035:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5284,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5287,"mutability":"mutable","name":"e","nameLocation":"19072:1:24","nodeType":"VariableDeclaration","scope":5328,"src":"19059:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5286,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5289,"mutability":"mutable","name":"m","nameLocation":"19096:1:24","nodeType":"VariableDeclaration","scope":5328,"src":"19083:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5288,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:24"},"returnParameters":{"id":5295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5292,"mutability":"mutable","name":"success","nameLocation":"19132:7:24","nodeType":"VariableDeclaration","scope":5328,"src":"19127:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5291,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5294,"mutability":"mutable","name":"result","nameLocation":"19154:6:24","nodeType":"VariableDeclaration","scope":5328,"src":"19141:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5293,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:24"},"scope":6036,"src":"19007:926:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5360,"nodeType":"Block","src":"20088:176:24","statements":[{"body":{"id":5356,"nodeType":"Block","src":"20145:92:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5347,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"20163:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5349,"indexExpression":{"id":5348,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"20173:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5355,"nodeType":"IfStatement","src":"20159:68:24","trueBody":{"id":5354,"nodeType":"Block","src":"20182:45:24","statements":[{"expression":{"hexValue":"66616c7365","id":5352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5335,"id":5353,"nodeType":"Return","src":"20200:12:24"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5340,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"20118:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5341,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"20122:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:24","memberName":"length","nodeType":"MemberAccess","src":"20122:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5357,"initializationExpression":{"assignments":[5337],"declarations":[{"constant":false,"id":5337,"mutability":"mutable","name":"i","nameLocation":"20111:1:24","nodeType":"VariableDeclaration","scope":5357,"src":"20103:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5336,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5339,"initialValue":{"hexValue":"30","id":5338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:24"},"loopExpression":{"expression":{"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:24","subExpression":{"id":5344,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"20142:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5346,"nodeType":"ExpressionStatement","src":"20140:3:24"},"nodeType":"ForStatement","src":"20098:139:24"},{"expression":{"hexValue":"74727565","id":5358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5335,"id":5359,"nodeType":"Return","src":"20246:11:24"}]},"documentation":{"id":5329,"nodeType":"StructuredDocumentation","src":"19939:72:24","text":" @dev Returns whether the provided byte array is zero."},"id":5361,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:24","nodeType":"FunctionDefinition","parameters":{"id":5332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5331,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:24","nodeType":"VariableDeclaration","scope":5361,"src":"20036:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5330,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:24"},"returnParameters":{"id":5335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5361,"src":"20082:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5333,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:24"},"scope":6036,"src":"20016:248:24","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5579,"nodeType":"Block","src":"20624:5124:24","statements":[{"id":5578,"nodeType":"UncheckedBlock","src":"20634:5108:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5369,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"20728:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5375,"nodeType":"IfStatement","src":"20724:53:24","trueBody":{"id":5374,"nodeType":"Block","src":"20736:41:24","statements":[{"expression":{"id":5372,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"20761:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5368,"id":5373,"nodeType":"Return","src":"20754:8:24"}]}},{"assignments":[5377],"declarations":[{"constant":false,"id":5377,"mutability":"mutable","name":"aa","nameLocation":"21712:2:24","nodeType":"VariableDeclaration","scope":5578,"src":"21704:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5376,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5379,"initialValue":{"id":5378,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"21717:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:24"},{"assignments":[5381],"declarations":[{"constant":false,"id":5381,"mutability":"mutable","name":"xn","nameLocation":"21740:2:24","nodeType":"VariableDeclaration","scope":5578,"src":"21732:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5380,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5383,"initialValue":{"hexValue":"31","id":5382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5384,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"21765:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5388,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5399,"nodeType":"IfStatement","src":"21761:92:24","trueBody":{"id":5398,"nodeType":"Block","src":"21783:70:24","statements":[{"expression":{"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5390,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"21801:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5393,"nodeType":"ExpressionStatement","src":"21801:10:24"},{"expression":{"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5394,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"21829:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5397,"nodeType":"ExpressionStatement","src":"21829:9:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5400,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"21870:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5404,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5415,"nodeType":"IfStatement","src":"21866:90:24","trueBody":{"id":5414,"nodeType":"Block","src":"21887:69:24","statements":[{"expression":{"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5406,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"21905:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5409,"nodeType":"ExpressionStatement","src":"21905:9:24"},{"expression":{"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5410,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"21932:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5413,"nodeType":"ExpressionStatement","src":"21932:9:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5416,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"21973:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5420,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5431,"nodeType":"IfStatement","src":"21969:90:24","trueBody":{"id":5430,"nodeType":"Block","src":"21990:69:24","statements":[{"expression":{"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5422,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"22008:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5425,"nodeType":"ExpressionStatement","src":"22008:9:24"},{"expression":{"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5426,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"22035:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5429,"nodeType":"ExpressionStatement","src":"22035:9:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5432,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"22076:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5436,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5447,"nodeType":"IfStatement","src":"22072:89:24","trueBody":{"id":5446,"nodeType":"Block","src":"22093:68:24","statements":[{"expression":{"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5438,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"22111:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5441,"nodeType":"ExpressionStatement","src":"22111:9:24"},{"expression":{"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5442,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"22138:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5445,"nodeType":"ExpressionStatement","src":"22138:8:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5448,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"22178:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5452,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5463,"nodeType":"IfStatement","src":"22174:87:24","trueBody":{"id":5462,"nodeType":"Block","src":"22194:67:24","statements":[{"expression":{"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5454,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"22212:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5457,"nodeType":"ExpressionStatement","src":"22212:8:24"},{"expression":{"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5458,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"22238:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5461,"nodeType":"ExpressionStatement","src":"22238:8:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5464,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"22278:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5468,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5479,"nodeType":"IfStatement","src":"22274:87:24","trueBody":{"id":5478,"nodeType":"Block","src":"22294:67:24","statements":[{"expression":{"id":5472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5470,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"22312:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5473,"nodeType":"ExpressionStatement","src":"22312:8:24"},{"expression":{"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5474,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"22338:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5477,"nodeType":"ExpressionStatement","src":"22338:8:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5480,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"22378:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5484,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5491,"nodeType":"IfStatement","src":"22374:61:24","trueBody":{"id":5490,"nodeType":"Block","src":"22394:41:24","statements":[{"expression":{"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5486,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"22412:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5489,"nodeType":"ExpressionStatement","src":"22412:8:24"}]}},{"expression":{"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5492,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"22855:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5494,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"22865:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5496,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5500,"nodeType":"ExpressionStatement","src":"22855:18:24"},{"expression":{"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5501,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"24760:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5502,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"24766:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5503,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"24771:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5504,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"24775:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5511,"nodeType":"ExpressionStatement","src":"24760:23:24"},{"expression":{"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5512,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"24869:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5513,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"24875:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5514,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"24880:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5515,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"24884:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5518,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5522,"nodeType":"ExpressionStatement","src":"24869:23:24"},{"expression":{"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5523,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"24980:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5524,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"24986:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5525,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"24991:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5526,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"24995:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5529,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5533,"nodeType":"ExpressionStatement","src":"24980:23:24"},{"expression":{"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5534,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"25089:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5535,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"25095:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"25100:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5537,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"25104:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5544,"nodeType":"ExpressionStatement","src":"25089:23:24"},{"expression":{"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5545,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"25199:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5546,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"25205:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5547,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"25210:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5548,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"25214:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5555,"nodeType":"ExpressionStatement","src":"25199:23:24"},{"expression":{"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5556,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"25309:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5557,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"25315:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5558,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"25320:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5559,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"25324:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5566,"nodeType":"ExpressionStatement","src":"25309:23:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5567,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"25698:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5570,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"25719:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5571,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"25724:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5572,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"25728:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5568,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"25703:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"25703:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5368,"id":5577,"nodeType":"Return","src":"25691:40:24"}]}]},"documentation":{"id":5362,"nodeType":"StructuredDocumentation","src":"20270:292:24","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5580,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:24","nodeType":"FunctionDefinition","parameters":{"id":5365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5364,"mutability":"mutable","name":"a","nameLocation":"20589:1:24","nodeType":"VariableDeclaration","scope":5580,"src":"20581:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5363,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:24"},"returnParameters":{"id":5368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5580,"src":"20615:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5366,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:24"},"scope":6036,"src":"20567:5181:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5613,"nodeType":"Block","src":"25921:171:24","statements":[{"id":5612,"nodeType":"UncheckedBlock","src":"25931:155:24","statements":[{"assignments":[5592],"declarations":[{"constant":false,"id":5592,"mutability":"mutable","name":"result","nameLocation":"25963:6:24","nodeType":"VariableDeclaration","scope":5612,"src":"25955:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5591,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5596,"initialValue":{"arguments":[{"id":5594,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5583,"src":"25977:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5593,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5580,5614],"referencedDeclaration":5580,"src":"25972:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5597,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"26000:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5601,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"26042:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"}],"id":5600,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"26025:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4427_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5603,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"26055:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5604,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"26064:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5606,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5583,"src":"26073:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5598,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"26009:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":5599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"26009:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5590,"id":5611,"nodeType":"Return","src":"25993:82:24"}]}]},"documentation":{"id":5581,"nodeType":"StructuredDocumentation","src":"25754:86:24","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5614,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:24","nodeType":"FunctionDefinition","parameters":{"id":5587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5583,"mutability":"mutable","name":"a","nameLocation":"25867:1:24","nodeType":"VariableDeclaration","scope":5614,"src":"25859:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5582,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5586,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:24","nodeType":"VariableDeclaration","scope":5614,"src":"25870:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"},"typeName":{"id":5585,"nodeType":"UserDefinedTypeName","pathNode":{"id":5584,"name":"Rounding","nameLocations":["25870:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4427,"src":"25870:8:24"},"referencedDeclaration":4427,"src":"25870:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:24"},"returnParameters":{"id":5590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5614,"src":"25912:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5588,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:24"},"scope":6036,"src":"25845:247:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5704,"nodeType":"Block","src":"26281:2334:24","statements":[{"expression":{"id":5631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5622,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"26363:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5625,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"26383:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5623,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"26367:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":5624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"26367:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:24","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5632,"nodeType":"ExpressionStatement","src":"26363:64:24"},{"expression":{"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5633,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"26503:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5636,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"26525:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5637,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"26530:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5639,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5634,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"26508:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"26508:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:24","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5646,"nodeType":"ExpressionStatement","src":"26503:56:24"},{"expression":{"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5647,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"26634:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5650,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"26656:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5651,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"26661:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5653,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5648,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"26639:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"26639:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:24","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5660,"nodeType":"ExpressionStatement","src":"26634:48:24"},{"expression":{"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5661,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"26757:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5664,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"26779:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5665,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"26784:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:24","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5662,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"26762:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":5663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"26762:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5674,"nodeType":"ExpressionStatement","src":"26757:44:24"},{"expression":{"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5675,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"26874:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5678,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"26896:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5679,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"26901:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5681,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5676,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"26879:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"26879:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5688,"nodeType":"ExpressionStatement","src":"26874:42:24"},{"expression":{"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5689,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"26988:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5692,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"27010:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5693,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5620,"src":"27015:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5695,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":5696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:24","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5690,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"26993:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"26993:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5702,"nodeType":"ExpressionStatement","src":"26988:41:24"},{"AST":{"nodeType":"YulBlock","src":"28490:119:24","statements":[{"nodeType":"YulAssignment","src":"28504:95:24","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:24"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:24"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:24"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:24"},"nodeType":"YulFunctionCall","src":"28520:9:24"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:24","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:24"},"nodeType":"YulFunctionCall","src":"28515:83:24"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:24"},"nodeType":"YulFunctionCall","src":"28509:90:24"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5620,"isOffset":false,"isSlot":false,"src":"28504:1:24","valueSize":1},{"declaration":5620,"isOffset":false,"isSlot":false,"src":"28512:1:24","valueSize":1},{"declaration":5620,"isOffset":false,"isSlot":false,"src":"28524:1:24","valueSize":1},{"declaration":5617,"isOffset":false,"isSlot":false,"src":"28527:1:24","valueSize":1}],"flags":["memory-safe"],"id":5703,"nodeType":"InlineAssembly","src":"28465:144:24"}]},"documentation":{"id":5615,"nodeType":"StructuredDocumentation","src":"26098:119:24","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5705,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:24","nodeType":"FunctionDefinition","parameters":{"id":5618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5617,"mutability":"mutable","name":"x","nameLocation":"26244:1:24","nodeType":"VariableDeclaration","scope":5705,"src":"26236:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5616,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:24"},"returnParameters":{"id":5621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5620,"mutability":"mutable","name":"r","nameLocation":"26278:1:24","nodeType":"VariableDeclaration","scope":5705,"src":"26270:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5619,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:24"},"scope":6036,"src":"26222:2393:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5738,"nodeType":"Block","src":"28848:175:24","statements":[{"id":5737,"nodeType":"UncheckedBlock","src":"28858:159:24","statements":[{"assignments":[5717],"declarations":[{"constant":false,"id":5717,"mutability":"mutable","name":"result","nameLocation":"28890:6:24","nodeType":"VariableDeclaration","scope":5737,"src":"28882:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5716,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5721,"initialValue":{"arguments":[{"id":5719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"28904:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5718,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5705,5739],"referencedDeclaration":5705,"src":"28899:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5722,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5717,"src":"28931:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5726,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"28973:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"}],"id":5725,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"28956:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4427_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5729,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5717,"src":"28991:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5708,"src":"29000:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5723,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"28940:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"28940:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5715,"id":5736,"nodeType":"Return","src":"28924:82:24"}]}]},"documentation":{"id":5706,"nodeType":"StructuredDocumentation","src":"28621:142:24","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5739,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:24","nodeType":"FunctionDefinition","parameters":{"id":5712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5708,"mutability":"mutable","name":"value","nameLocation":"28790:5:24","nodeType":"VariableDeclaration","scope":5739,"src":"28782:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5707,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5711,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:24","nodeType":"VariableDeclaration","scope":5739,"src":"28797:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"},"typeName":{"id":5710,"nodeType":"UserDefinedTypeName","pathNode":{"id":5709,"name":"Rounding","nameLocations":["28797:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4427,"src":"28797:8:24"},"referencedDeclaration":4427,"src":"28797:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:24"},"returnParameters":{"id":5715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5739,"src":"28839:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5713,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:24"},"scope":6036,"src":"28768:255:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5867,"nodeType":"Block","src":"29216:854:24","statements":[{"assignments":[5748],"declarations":[{"constant":false,"id":5748,"mutability":"mutable","name":"result","nameLocation":"29234:6:24","nodeType":"VariableDeclaration","scope":5867,"src":"29226:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5747,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5750,"initialValue":{"hexValue":"30","id":5749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:24"},{"id":5864,"nodeType":"UncheckedBlock","src":"29254:787:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"29282:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5767,"nodeType":"IfStatement","src":"29278:103:24","trueBody":{"id":5766,"nodeType":"Block","src":"29301:80:24","statements":[{"expression":{"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"29319:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5761,"nodeType":"ExpressionStatement","src":"29319:17:24"},{"expression":{"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5762,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"29354:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5765,"nodeType":"ExpressionStatement","src":"29354:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"29398:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5784,"nodeType":"IfStatement","src":"29394:103:24","trueBody":{"id":5783,"nodeType":"Block","src":"29417:80:24","statements":[{"expression":{"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"29435:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5778,"nodeType":"ExpressionStatement","src":"29435:17:24"},{"expression":{"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5779,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"29470:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5782,"nodeType":"ExpressionStatement","src":"29470:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"29514:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5801,"nodeType":"IfStatement","src":"29510:103:24","trueBody":{"id":5800,"nodeType":"Block","src":"29533:80:24","statements":[{"expression":{"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"29551:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5795,"nodeType":"ExpressionStatement","src":"29551:17:24"},{"expression":{"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5796,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"29586:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5799,"nodeType":"ExpressionStatement","src":"29586:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"29630:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5818,"nodeType":"IfStatement","src":"29626:100:24","trueBody":{"id":5817,"nodeType":"Block","src":"29648:78:24","statements":[{"expression":{"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"29666:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5812,"nodeType":"ExpressionStatement","src":"29666:16:24"},{"expression":{"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5813,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"29700:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5816,"nodeType":"ExpressionStatement","src":"29700:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"29743:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5835,"nodeType":"IfStatement","src":"29739:100:24","trueBody":{"id":5834,"nodeType":"Block","src":"29761:78:24","statements":[{"expression":{"id":5828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"29779:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5829,"nodeType":"ExpressionStatement","src":"29779:16:24"},{"expression":{"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5830,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"29813:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5833,"nodeType":"ExpressionStatement","src":"29813:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"29856:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5852,"nodeType":"IfStatement","src":"29852:100:24","trueBody":{"id":5851,"nodeType":"Block","src":"29874:78:24","statements":[{"expression":{"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"29892:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5846,"nodeType":"ExpressionStatement","src":"29892:16:24"},{"expression":{"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5847,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"29926:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5850,"nodeType":"ExpressionStatement","src":"29926:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"29969:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5863,"nodeType":"IfStatement","src":"29965:66:24","trueBody":{"id":5862,"nodeType":"Block","src":"29987:44:24","statements":[{"expression":{"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5858,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"30005:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5861,"nodeType":"ExpressionStatement","src":"30005:11:24"}]}}]},{"expression":{"id":5865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"30057:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5746,"id":5866,"nodeType":"Return","src":"30050:13:24"}]},"documentation":{"id":5740,"nodeType":"StructuredDocumentation","src":"29029:120:24","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5868,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:24","nodeType":"FunctionDefinition","parameters":{"id":5743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5742,"mutability":"mutable","name":"value","nameLocation":"29177:5:24","nodeType":"VariableDeclaration","scope":5868,"src":"29169:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5741,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:24"},"returnParameters":{"id":5746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5868,"src":"29207:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5744,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:24"},"scope":6036,"src":"29154:916:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5901,"nodeType":"Block","src":"30305:177:24","statements":[{"id":5900,"nodeType":"UncheckedBlock","src":"30315:161:24","statements":[{"assignments":[5880],"declarations":[{"constant":false,"id":5880,"mutability":"mutable","name":"result","nameLocation":"30347:6:24","nodeType":"VariableDeclaration","scope":5900,"src":"30339:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5879,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5884,"initialValue":{"arguments":[{"id":5882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"30362:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5881,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5868,5902],"referencedDeclaration":5868,"src":"30356:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5885,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5880,"src":"30389:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5889,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"30431:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"}],"id":5888,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"30414:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4427_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5892,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5880,"src":"30450:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"30459:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5886,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"30398:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"30398:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5878,"id":5899,"nodeType":"Return","src":"30382:83:24"}]}]},"documentation":{"id":5869,"nodeType":"StructuredDocumentation","src":"30076:143:24","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5902,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:24","nodeType":"FunctionDefinition","parameters":{"id":5875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5871,"mutability":"mutable","name":"value","nameLocation":"30247:5:24","nodeType":"VariableDeclaration","scope":5902,"src":"30239:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5870,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5874,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:24","nodeType":"VariableDeclaration","scope":5902,"src":"30254:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"},"typeName":{"id":5873,"nodeType":"UserDefinedTypeName","pathNode":{"id":5872,"name":"Rounding","nameLocations":["30254:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4427,"src":"30254:8:24"},"referencedDeclaration":4427,"src":"30254:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:24"},"returnParameters":{"id":5878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5902,"src":"30296:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5876,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:24"},"scope":6036,"src":"30224:258:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5978,"nodeType":"Block","src":"30800:675:24","statements":[{"expression":{"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5910,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5908,"src":"30882:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5913,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"30902:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5911,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"30886:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":5912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"30886:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:24","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5920,"nodeType":"ExpressionStatement","src":"30882:64:24"},{"expression":{"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5921,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5908,"src":"31022:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5924,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"31044:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5925,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5908,"src":"31049:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5927,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5922,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"31027:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"31027:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:24","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5934,"nodeType":"ExpressionStatement","src":"31022:56:24"},{"expression":{"id":5947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5935,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5908,"src":"31153:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5938,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"31175:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5939,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5908,"src":"31180:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5941,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5936,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"31158:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"31158:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:24","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5948,"nodeType":"ExpressionStatement","src":"31153:48:24"},{"expression":{"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5949,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5908,"src":"31276:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5952,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"31298:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5953,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5908,"src":"31303:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5955,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:24","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5950,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"31281:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":5951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"31281:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5962,"nodeType":"ExpressionStatement","src":"31276:44:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5963,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5908,"src":"31426:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5966,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5969,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"31453:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5970,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5908,"src":"31458:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5972,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5967,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"31436:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":5968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"31436:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5909,"id":5977,"nodeType":"Return","src":"31418:50:24"}]},"documentation":{"id":5903,"nodeType":"StructuredDocumentation","src":"30488:246:24","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5979,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:24","nodeType":"FunctionDefinition","parameters":{"id":5906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5905,"mutability":"mutable","name":"x","nameLocation":"30763:1:24","nodeType":"VariableDeclaration","scope":5979,"src":"30755:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5904,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:24"},"returnParameters":{"id":5909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5908,"mutability":"mutable","name":"r","nameLocation":"30797:1:24","nodeType":"VariableDeclaration","scope":5979,"src":"30789:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5907,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:24"},"scope":6036,"src":"30739:736:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6015,"nodeType":"Block","src":"31712:184:24","statements":[{"id":6014,"nodeType":"UncheckedBlock","src":"31722:168:24","statements":[{"assignments":[5991],"declarations":[{"constant":false,"id":5991,"mutability":"mutable","name":"result","nameLocation":"31754:6:24","nodeType":"VariableDeclaration","scope":6014,"src":"31746:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5990,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5995,"initialValue":{"arguments":[{"id":5993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"31770:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5992,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5979,6016],"referencedDeclaration":5979,"src":"31763:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5996,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5991,"src":"31797:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6000,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"31839:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"}],"id":5999,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"31822:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4427_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6003,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5991,"src":"31858:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6006,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"31873:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5997,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"31806:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":5998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"31806:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5989,"id":6013,"nodeType":"Return","src":"31790:89:24"}]}]},"documentation":{"id":5980,"nodeType":"StructuredDocumentation","src":"31481:144:24","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6016,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:24","nodeType":"FunctionDefinition","parameters":{"id":5986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5982,"mutability":"mutable","name":"value","nameLocation":"31654:5:24","nodeType":"VariableDeclaration","scope":6016,"src":"31646:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5981,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5985,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:24","nodeType":"VariableDeclaration","scope":6016,"src":"31661:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"},"typeName":{"id":5984,"nodeType":"UserDefinedTypeName","pathNode":{"id":5983,"name":"Rounding","nameLocations":["31661:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4427,"src":"31661:8:24"},"referencedDeclaration":4427,"src":"31661:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:24"},"returnParameters":{"id":5989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6016,"src":"31703:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5987,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:24"},"scope":6036,"src":"31630:266:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6034,"nodeType":"Block","src":"32094:48:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6027,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"32117:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"}],"id":6026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6025,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:24","typeDescriptions":{}}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":6029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6024,"id":6033,"nodeType":"Return","src":"32104:31:24"}]},"documentation":{"id":6017,"nodeType":"StructuredDocumentation","src":"31902:113:24","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":6035,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:24","nodeType":"FunctionDefinition","parameters":{"id":6021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6020,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:24","nodeType":"VariableDeclaration","scope":6035,"src":"32046:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"},"typeName":{"id":6019,"nodeType":"UserDefinedTypeName","pathNode":{"id":6018,"name":"Rounding","nameLocations":["32046:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4427,"src":"32046:8:24"},"referencedDeclaration":4427,"src":"32046:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4427","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:24"},"returnParameters":{"id":6024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6035,"src":"32088:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6022,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:24"},"scope":6036,"src":"32020:122:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6037,"src":"281:31863:24","usedErrors":[],"usedEvents":[]}],"src":"103:32042:24"},"id":24},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7801]},"id":7802,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6038,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":6039,"nodeType":"StructuredDocumentation","src":"218:550:25","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7801,"linearizedBaseContracts":[7801],"name":"SafeCast","nameLocation":"777:8:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6040,"nodeType":"StructuredDocumentation","src":"792:68:25","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":6046,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:25","nodeType":"ErrorDefinition","parameters":{"id":6045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6042,"mutability":"mutable","name":"bits","nameLocation":"908:4:25","nodeType":"VariableDeclaration","scope":6046,"src":"902:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6041,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6044,"mutability":"mutable","name":"value","nameLocation":"922:5:25","nodeType":"VariableDeclaration","scope":6046,"src":"914:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6043,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:25"},"src":"865:64:25"},{"documentation":{"id":6047,"nodeType":"StructuredDocumentation","src":"935:75:25","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":6051,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:25","nodeType":"ErrorDefinition","parameters":{"id":6050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6049,"mutability":"mutable","name":"value","nameLocation":"1056:5:25","nodeType":"VariableDeclaration","scope":6051,"src":"1049:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6048,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:25"},"src":"1015:48:25"},{"documentation":{"id":6052,"nodeType":"StructuredDocumentation","src":"1069:67:25","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":6058,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:25","nodeType":"ErrorDefinition","parameters":{"id":6057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6054,"mutability":"mutable","name":"bits","nameLocation":"1183:4:25","nodeType":"VariableDeclaration","scope":6058,"src":"1177:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6053,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6056,"mutability":"mutable","name":"value","nameLocation":"1196:5:25","nodeType":"VariableDeclaration","scope":6058,"src":"1189:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6055,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:25"},"src":"1141:62:25"},{"documentation":{"id":6059,"nodeType":"StructuredDocumentation","src":"1209:75:25","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":6063,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:25","nodeType":"ErrorDefinition","parameters":{"id":6062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6061,"mutability":"mutable","name":"value","nameLocation":"1331:5:25","nodeType":"VariableDeclaration","scope":6063,"src":"1323:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6060,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:25"},"src":"1289:49:25"},{"body":{"id":6090,"nodeType":"Block","src":"1695:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6066,"src":"1709:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6073,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":6072,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":6076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:25","memberName":"max","nodeType":"MemberAccess","src":"1717:17:25","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6084,"nodeType":"IfStatement","src":"1705:105:25","trueBody":{"id":6083,"nodeType":"Block","src":"1736:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:25","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6066,"src":"1793:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6078,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"1757:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6082,"nodeType":"RevertStatement","src":"1750:49:25"}]}},{"expression":{"arguments":[{"id":6087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6066,"src":"1834:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6085,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:25","typeDescriptions":{}}},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":6070,"id":6089,"nodeType":"Return","src":"1819:21:25"}]},"documentation":{"id":6064,"nodeType":"StructuredDocumentation","src":"1344:280:25","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6091,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:25","nodeType":"FunctionDefinition","parameters":{"id":6067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6066,"mutability":"mutable","name":"value","nameLocation":"1656:5:25","nodeType":"VariableDeclaration","scope":6091,"src":"1648:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6065,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:25"},"returnParameters":{"id":6070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6091,"src":"1686:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":6068,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:25","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:25"},"scope":7801,"src":"1629:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6118,"nodeType":"Block","src":"2204:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6094,"src":"2218:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6101,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":6100,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":6104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:25","memberName":"max","nodeType":"MemberAccess","src":"2226:17:25","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6112,"nodeType":"IfStatement","src":"2214:105:25","trueBody":{"id":6111,"nodeType":"Block","src":"2245:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:25","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6094,"src":"2302:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6106,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"2266:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6110,"nodeType":"RevertStatement","src":"2259:49:25"}]}},{"expression":{"arguments":[{"id":6115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6094,"src":"2343:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6113,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:25","typeDescriptions":{}}},"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":6098,"id":6117,"nodeType":"Return","src":"2328:21:25"}]},"documentation":{"id":6092,"nodeType":"StructuredDocumentation","src":"1853:280:25","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6119,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:25","nodeType":"FunctionDefinition","parameters":{"id":6095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6094,"mutability":"mutable","name":"value","nameLocation":"2165:5:25","nodeType":"VariableDeclaration","scope":6119,"src":"2157:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6093,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:25"},"returnParameters":{"id":6098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6119,"src":"2195:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":6096,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:25","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:25"},"scope":7801,"src":"2138:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6146,"nodeType":"Block","src":"2713:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6122,"src":"2727:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6129,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":6128,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":6132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:25","memberName":"max","nodeType":"MemberAccess","src":"2735:17:25","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6140,"nodeType":"IfStatement","src":"2723:105:25","trueBody":{"id":6139,"nodeType":"Block","src":"2754:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:25","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6122,"src":"2811:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6134,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"2775:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6138,"nodeType":"RevertStatement","src":"2768:49:25"}]}},{"expression":{"arguments":[{"id":6143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6122,"src":"2852:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6141,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:25","typeDescriptions":{}}},"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":6126,"id":6145,"nodeType":"Return","src":"2837:21:25"}]},"documentation":{"id":6120,"nodeType":"StructuredDocumentation","src":"2362:280:25","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6147,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:25","nodeType":"FunctionDefinition","parameters":{"id":6123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6122,"mutability":"mutable","name":"value","nameLocation":"2674:5:25","nodeType":"VariableDeclaration","scope":6147,"src":"2666:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6121,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:25"},"returnParameters":{"id":6126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6147,"src":"2704:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":6124,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:25","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:25"},"scope":7801,"src":"2647:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6174,"nodeType":"Block","src":"3222:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6150,"src":"3236:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6157,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6156,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:25","memberName":"max","nodeType":"MemberAccess","src":"3244:17:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6168,"nodeType":"IfStatement","src":"3232:105:25","trueBody":{"id":6167,"nodeType":"Block","src":"3263:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:25","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6150,"src":"3320:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6162,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"3284:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6166,"nodeType":"RevertStatement","src":"3277:49:25"}]}},{"expression":{"arguments":[{"id":6171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6150,"src":"3361:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6169,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:25","typeDescriptions":{}}},"id":6172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6154,"id":6173,"nodeType":"Return","src":"3346:21:25"}]},"documentation":{"id":6148,"nodeType":"StructuredDocumentation","src":"2871:280:25","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6175,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:25","nodeType":"FunctionDefinition","parameters":{"id":6151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6150,"mutability":"mutable","name":"value","nameLocation":"3183:5:25","nodeType":"VariableDeclaration","scope":6175,"src":"3175:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6149,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:25"},"returnParameters":{"id":6154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6175,"src":"3213:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6152,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:25"},"scope":7801,"src":"3156:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6202,"nodeType":"Block","src":"3731:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"3745:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6185,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6184,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:25","memberName":"max","nodeType":"MemberAccess","src":"3753:17:25","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6196,"nodeType":"IfStatement","src":"3741:105:25","trueBody":{"id":6195,"nodeType":"Block","src":"3772:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:25","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"3829:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6190,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"3793:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6194,"nodeType":"RevertStatement","src":"3786:49:25"}]}},{"expression":{"arguments":[{"id":6199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"3870:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6197,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:25","typeDescriptions":{}}},"id":6200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6182,"id":6201,"nodeType":"Return","src":"3855:21:25"}]},"documentation":{"id":6176,"nodeType":"StructuredDocumentation","src":"3380:280:25","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6203,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:25","nodeType":"FunctionDefinition","parameters":{"id":6179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6178,"mutability":"mutable","name":"value","nameLocation":"3692:5:25","nodeType":"VariableDeclaration","scope":6203,"src":"3684:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6177,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:25"},"returnParameters":{"id":6182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6203,"src":"3722:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6180,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:25","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:25"},"scope":7801,"src":"3665:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6230,"nodeType":"Block","src":"4240:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6206,"src":"4254:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6213,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6212,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:25","memberName":"max","nodeType":"MemberAccess","src":"4262:17:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6224,"nodeType":"IfStatement","src":"4250:105:25","trueBody":{"id":6223,"nodeType":"Block","src":"4281:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:25","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6206,"src":"4338:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6218,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"4302:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6222,"nodeType":"RevertStatement","src":"4295:49:25"}]}},{"expression":{"arguments":[{"id":6227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6206,"src":"4379:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6225,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:25","typeDescriptions":{}}},"id":6228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6210,"id":6229,"nodeType":"Return","src":"4364:21:25"}]},"documentation":{"id":6204,"nodeType":"StructuredDocumentation","src":"3889:280:25","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6231,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:25","nodeType":"FunctionDefinition","parameters":{"id":6207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6206,"mutability":"mutable","name":"value","nameLocation":"4201:5:25","nodeType":"VariableDeclaration","scope":6231,"src":"4193:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6205,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:25"},"returnParameters":{"id":6210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6231,"src":"4231:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6208,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:25"},"scope":7801,"src":"4174:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6258,"nodeType":"Block","src":"4749:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"4763:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6241,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6240,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:25","memberName":"max","nodeType":"MemberAccess","src":"4771:17:25","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6252,"nodeType":"IfStatement","src":"4759:105:25","trueBody":{"id":6251,"nodeType":"Block","src":"4790:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:25","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"4847:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6246,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"4811:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6250,"nodeType":"RevertStatement","src":"4804:49:25"}]}},{"expression":{"arguments":[{"id":6255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"4888:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6253,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:25","typeDescriptions":{}}},"id":6256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6238,"id":6257,"nodeType":"Return","src":"4873:21:25"}]},"documentation":{"id":6232,"nodeType":"StructuredDocumentation","src":"4398:280:25","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6259,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:25","nodeType":"FunctionDefinition","parameters":{"id":6235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6234,"mutability":"mutable","name":"value","nameLocation":"4710:5:25","nodeType":"VariableDeclaration","scope":6259,"src":"4702:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6233,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:25"},"returnParameters":{"id":6238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6259,"src":"4740:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6236,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:25","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:25"},"scope":7801,"src":"4683:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6286,"nodeType":"Block","src":"5258:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6262,"src":"5272:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6269,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6268,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:25","memberName":"max","nodeType":"MemberAccess","src":"5280:17:25","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6280,"nodeType":"IfStatement","src":"5268:105:25","trueBody":{"id":6279,"nodeType":"Block","src":"5299:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:25","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6262,"src":"5356:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6274,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"5320:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6278,"nodeType":"RevertStatement","src":"5313:49:25"}]}},{"expression":{"arguments":[{"id":6283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6262,"src":"5397:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6281,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:25","typeDescriptions":{}}},"id":6284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6266,"id":6285,"nodeType":"Return","src":"5382:21:25"}]},"documentation":{"id":6260,"nodeType":"StructuredDocumentation","src":"4907:280:25","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6287,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:25","nodeType":"FunctionDefinition","parameters":{"id":6263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6262,"mutability":"mutable","name":"value","nameLocation":"5219:5:25","nodeType":"VariableDeclaration","scope":6287,"src":"5211:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6261,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:25"},"returnParameters":{"id":6266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6287,"src":"5249:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6264,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:25","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:25"},"scope":7801,"src":"5192:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6314,"nodeType":"Block","src":"5767:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6290,"src":"5781:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6297,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6296,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:25","memberName":"max","nodeType":"MemberAccess","src":"5789:17:25","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6308,"nodeType":"IfStatement","src":"5777:105:25","trueBody":{"id":6307,"nodeType":"Block","src":"5808:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:25","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6290,"src":"5865:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6302,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"5829:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6306,"nodeType":"RevertStatement","src":"5822:49:25"}]}},{"expression":{"arguments":[{"id":6311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6290,"src":"5906:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6309,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:25","typeDescriptions":{}}},"id":6312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6294,"id":6313,"nodeType":"Return","src":"5891:21:25"}]},"documentation":{"id":6288,"nodeType":"StructuredDocumentation","src":"5416:280:25","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6315,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:25","nodeType":"FunctionDefinition","parameters":{"id":6291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6290,"mutability":"mutable","name":"value","nameLocation":"5728:5:25","nodeType":"VariableDeclaration","scope":6315,"src":"5720:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6289,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:25"},"returnParameters":{"id":6294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6315,"src":"5758:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6292,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:25","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:25"},"scope":7801,"src":"5701:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6342,"nodeType":"Block","src":"6276:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6318,"src":"6290:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6325,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6324,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:25","memberName":"max","nodeType":"MemberAccess","src":"6298:17:25","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6336,"nodeType":"IfStatement","src":"6286:105:25","trueBody":{"id":6335,"nodeType":"Block","src":"6317:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:25","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6318,"src":"6374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6330,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"6338:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6334,"nodeType":"RevertStatement","src":"6331:49:25"}]}},{"expression":{"arguments":[{"id":6339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6318,"src":"6415:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6337,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:25","typeDescriptions":{}}},"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6322,"id":6341,"nodeType":"Return","src":"6400:21:25"}]},"documentation":{"id":6316,"nodeType":"StructuredDocumentation","src":"5925:280:25","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6343,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:25","nodeType":"FunctionDefinition","parameters":{"id":6319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6318,"mutability":"mutable","name":"value","nameLocation":"6237:5:25","nodeType":"VariableDeclaration","scope":6343,"src":"6229:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6317,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:25"},"returnParameters":{"id":6322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6343,"src":"6267:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6320,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:25","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:25"},"scope":7801,"src":"6210:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6370,"nodeType":"Block","src":"6785:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"6799:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6353,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6352,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:25","memberName":"max","nodeType":"MemberAccess","src":"6807:17:25","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6364,"nodeType":"IfStatement","src":"6795:105:25","trueBody":{"id":6363,"nodeType":"Block","src":"6826:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:25","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"6883:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6358,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"6847:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6362,"nodeType":"RevertStatement","src":"6840:49:25"}]}},{"expression":{"arguments":[{"id":6367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"6924:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6365,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:25","typeDescriptions":{}}},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6350,"id":6369,"nodeType":"Return","src":"6909:21:25"}]},"documentation":{"id":6344,"nodeType":"StructuredDocumentation","src":"6434:280:25","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6371,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:25","nodeType":"FunctionDefinition","parameters":{"id":6347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6346,"mutability":"mutable","name":"value","nameLocation":"6746:5:25","nodeType":"VariableDeclaration","scope":6371,"src":"6738:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6345,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:25"},"returnParameters":{"id":6350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6371,"src":"6776:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6348,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:25","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:25"},"scope":7801,"src":"6719:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6398,"nodeType":"Block","src":"7294:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"7308:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6381,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6380,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:25","memberName":"max","nodeType":"MemberAccess","src":"7316:17:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6392,"nodeType":"IfStatement","src":"7304:105:25","trueBody":{"id":6391,"nodeType":"Block","src":"7335:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:25","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"7392:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6386,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"7356:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6390,"nodeType":"RevertStatement","src":"7349:49:25"}]}},{"expression":{"arguments":[{"id":6395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"7433:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6393,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:25","typeDescriptions":{}}},"id":6396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6378,"id":6397,"nodeType":"Return","src":"7418:21:25"}]},"documentation":{"id":6372,"nodeType":"StructuredDocumentation","src":"6943:280:25","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6399,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:25","nodeType":"FunctionDefinition","parameters":{"id":6375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6374,"mutability":"mutable","name":"value","nameLocation":"7255:5:25","nodeType":"VariableDeclaration","scope":6399,"src":"7247:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6373,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:25"},"returnParameters":{"id":6378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6399,"src":"7285:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6376,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:25"},"scope":7801,"src":"7228:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6426,"nodeType":"Block","src":"7803:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6402,"src":"7817:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6409,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6408,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:25","memberName":"max","nodeType":"MemberAccess","src":"7825:17:25","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6420,"nodeType":"IfStatement","src":"7813:105:25","trueBody":{"id":6419,"nodeType":"Block","src":"7844:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:25","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6402,"src":"7901:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6414,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"7865:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6418,"nodeType":"RevertStatement","src":"7858:49:25"}]}},{"expression":{"arguments":[{"id":6423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6402,"src":"7942:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6421,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:25","typeDescriptions":{}}},"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6406,"id":6425,"nodeType":"Return","src":"7927:21:25"}]},"documentation":{"id":6400,"nodeType":"StructuredDocumentation","src":"7452:280:25","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6427,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:25","nodeType":"FunctionDefinition","parameters":{"id":6403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6402,"mutability":"mutable","name":"value","nameLocation":"7764:5:25","nodeType":"VariableDeclaration","scope":6427,"src":"7756:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6401,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:25"},"returnParameters":{"id":6406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6427,"src":"7794:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6404,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:25","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:25"},"scope":7801,"src":"7737:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6454,"nodeType":"Block","src":"8312:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"8326:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6437,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6436,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:25","memberName":"max","nodeType":"MemberAccess","src":"8334:17:25","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6448,"nodeType":"IfStatement","src":"8322:105:25","trueBody":{"id":6447,"nodeType":"Block","src":"8353:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:25","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"8410:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6442,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"8374:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6446,"nodeType":"RevertStatement","src":"8367:49:25"}]}},{"expression":{"arguments":[{"id":6451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"8451:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6449,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:25","typeDescriptions":{}}},"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6434,"id":6453,"nodeType":"Return","src":"8436:21:25"}]},"documentation":{"id":6428,"nodeType":"StructuredDocumentation","src":"7961:280:25","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6455,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:25","nodeType":"FunctionDefinition","parameters":{"id":6431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6430,"mutability":"mutable","name":"value","nameLocation":"8273:5:25","nodeType":"VariableDeclaration","scope":6455,"src":"8265:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6429,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:25"},"returnParameters":{"id":6434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6455,"src":"8303:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6432,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:25","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:25"},"scope":7801,"src":"8246:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6482,"nodeType":"Block","src":"8821:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6458,"src":"8835:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6465,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6464,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:25","memberName":"max","nodeType":"MemberAccess","src":"8843:17:25","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6476,"nodeType":"IfStatement","src":"8831:105:25","trueBody":{"id":6475,"nodeType":"Block","src":"8862:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:25","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6458,"src":"8919:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6470,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"8883:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6474,"nodeType":"RevertStatement","src":"8876:49:25"}]}},{"expression":{"arguments":[{"id":6479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6458,"src":"8960:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6477,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:25","typeDescriptions":{}}},"id":6480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6462,"id":6481,"nodeType":"Return","src":"8945:21:25"}]},"documentation":{"id":6456,"nodeType":"StructuredDocumentation","src":"8470:280:25","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6483,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:25","nodeType":"FunctionDefinition","parameters":{"id":6459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6458,"mutability":"mutable","name":"value","nameLocation":"8782:5:25","nodeType":"VariableDeclaration","scope":6483,"src":"8774:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6457,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:25"},"returnParameters":{"id":6462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6483,"src":"8812:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6460,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:25","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:25"},"scope":7801,"src":"8755:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6510,"nodeType":"Block","src":"9330:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"9344:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6493,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6492,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:25","memberName":"max","nodeType":"MemberAccess","src":"9352:17:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6504,"nodeType":"IfStatement","src":"9340:105:25","trueBody":{"id":6503,"nodeType":"Block","src":"9371:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"9428:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6498,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"9392:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6502,"nodeType":"RevertStatement","src":"9385:49:25"}]}},{"expression":{"arguments":[{"id":6507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"9469:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6505,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:25","typeDescriptions":{}}},"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6490,"id":6509,"nodeType":"Return","src":"9454:21:25"}]},"documentation":{"id":6484,"nodeType":"StructuredDocumentation","src":"8979:280:25","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6511,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:25","nodeType":"FunctionDefinition","parameters":{"id":6487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6486,"mutability":"mutable","name":"value","nameLocation":"9291:5:25","nodeType":"VariableDeclaration","scope":6511,"src":"9283:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6485,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:25"},"returnParameters":{"id":6490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6511,"src":"9321:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6488,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:25"},"scope":7801,"src":"9264:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6538,"nodeType":"Block","src":"9839:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"9853:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6521,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6520,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:25","memberName":"max","nodeType":"MemberAccess","src":"9861:17:25","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6532,"nodeType":"IfStatement","src":"9849:105:25","trueBody":{"id":6531,"nodeType":"Block","src":"9880:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:25","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"9937:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6526,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"9901:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6530,"nodeType":"RevertStatement","src":"9894:49:25"}]}},{"expression":{"arguments":[{"id":6535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"9978:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6533,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:25","typeDescriptions":{}}},"id":6536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6518,"id":6537,"nodeType":"Return","src":"9963:21:25"}]},"documentation":{"id":6512,"nodeType":"StructuredDocumentation","src":"9488:280:25","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6539,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:25","nodeType":"FunctionDefinition","parameters":{"id":6515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6514,"mutability":"mutable","name":"value","nameLocation":"9800:5:25","nodeType":"VariableDeclaration","scope":6539,"src":"9792:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6513,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:25"},"returnParameters":{"id":6518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6539,"src":"9830:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6516,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:25","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:25"},"scope":7801,"src":"9773:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6566,"nodeType":"Block","src":"10348:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"10362:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6549,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6548,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:25","memberName":"max","nodeType":"MemberAccess","src":"10370:17:25","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6560,"nodeType":"IfStatement","src":"10358:105:25","trueBody":{"id":6559,"nodeType":"Block","src":"10389:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:25","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"10446:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6554,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"10410:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6558,"nodeType":"RevertStatement","src":"10403:49:25"}]}},{"expression":{"arguments":[{"id":6563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"10487:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6561,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:25","typeDescriptions":{}}},"id":6564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6546,"id":6565,"nodeType":"Return","src":"10472:21:25"}]},"documentation":{"id":6540,"nodeType":"StructuredDocumentation","src":"9997:280:25","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6567,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:25","nodeType":"FunctionDefinition","parameters":{"id":6543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6542,"mutability":"mutable","name":"value","nameLocation":"10309:5:25","nodeType":"VariableDeclaration","scope":6567,"src":"10301:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6541,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:25"},"returnParameters":{"id":6546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6567,"src":"10339:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6544,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:25","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:25"},"scope":7801,"src":"10282:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6594,"nodeType":"Block","src":"10857:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"10871:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6577,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6576,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:25","memberName":"max","nodeType":"MemberAccess","src":"10879:17:25","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6588,"nodeType":"IfStatement","src":"10867:105:25","trueBody":{"id":6587,"nodeType":"Block","src":"10898:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:25","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"10955:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6582,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"10919:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6586,"nodeType":"RevertStatement","src":"10912:49:25"}]}},{"expression":{"arguments":[{"id":6591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"10996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6589,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:25","typeDescriptions":{}}},"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6574,"id":6593,"nodeType":"Return","src":"10981:21:25"}]},"documentation":{"id":6568,"nodeType":"StructuredDocumentation","src":"10506:280:25","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6595,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:25","nodeType":"FunctionDefinition","parameters":{"id":6571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6570,"mutability":"mutable","name":"value","nameLocation":"10818:5:25","nodeType":"VariableDeclaration","scope":6595,"src":"10810:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6569,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:25"},"returnParameters":{"id":6574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6595,"src":"10848:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6572,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:25","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:25"},"scope":7801,"src":"10791:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6622,"nodeType":"Block","src":"11360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6598,"src":"11374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6605,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6604,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:25","memberName":"max","nodeType":"MemberAccess","src":"11382:16:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6616,"nodeType":"IfStatement","src":"11370:103:25","trueBody":{"id":6615,"nodeType":"Block","src":"11400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6598,"src":"11456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6610,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"11421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6614,"nodeType":"RevertStatement","src":"11414:48:25"}]}},{"expression":{"arguments":[{"id":6619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6598,"src":"11496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6617,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:25","typeDescriptions":{}}},"id":6620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6602,"id":6621,"nodeType":"Return","src":"11482:20:25"}]},"documentation":{"id":6596,"nodeType":"StructuredDocumentation","src":"11015:276:25","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6623,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:25","nodeType":"FunctionDefinition","parameters":{"id":6599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6598,"mutability":"mutable","name":"value","nameLocation":"11322:5:25","nodeType":"VariableDeclaration","scope":6623,"src":"11314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6597,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:25"},"returnParameters":{"id":6602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6623,"src":"11352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6600,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:25"},"scope":7801,"src":"11296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6650,"nodeType":"Block","src":"11860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"11874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6633,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6632,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:25","memberName":"max","nodeType":"MemberAccess","src":"11882:16:25","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6644,"nodeType":"IfStatement","src":"11870:103:25","trueBody":{"id":6643,"nodeType":"Block","src":"11900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"11956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6638,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"11921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6642,"nodeType":"RevertStatement","src":"11914:48:25"}]}},{"expression":{"arguments":[{"id":6647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"11996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6645,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:25","typeDescriptions":{}}},"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6630,"id":6649,"nodeType":"Return","src":"11982:20:25"}]},"documentation":{"id":6624,"nodeType":"StructuredDocumentation","src":"11515:276:25","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6651,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:25","nodeType":"FunctionDefinition","parameters":{"id":6627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6626,"mutability":"mutable","name":"value","nameLocation":"11822:5:25","nodeType":"VariableDeclaration","scope":6651,"src":"11814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6625,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:25"},"returnParameters":{"id":6630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6651,"src":"11852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6628,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:25","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:25"},"scope":7801,"src":"11796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6678,"nodeType":"Block","src":"12360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"12374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6661,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6660,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:25","memberName":"max","nodeType":"MemberAccess","src":"12382:16:25","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6672,"nodeType":"IfStatement","src":"12370:103:25","trueBody":{"id":6671,"nodeType":"Block","src":"12400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"12456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6666,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"12421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6670,"nodeType":"RevertStatement","src":"12414:48:25"}]}},{"expression":{"arguments":[{"id":6675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"12496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6673,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:25","typeDescriptions":{}}},"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6658,"id":6677,"nodeType":"Return","src":"12482:20:25"}]},"documentation":{"id":6652,"nodeType":"StructuredDocumentation","src":"12015:276:25","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6679,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:25","nodeType":"FunctionDefinition","parameters":{"id":6655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6654,"mutability":"mutable","name":"value","nameLocation":"12322:5:25","nodeType":"VariableDeclaration","scope":6679,"src":"12314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6653,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:25"},"returnParameters":{"id":6658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6679,"src":"12352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6656,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:25","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:25"},"scope":7801,"src":"12296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6706,"nodeType":"Block","src":"12860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"12874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6689,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6688,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:25","memberName":"max","nodeType":"MemberAccess","src":"12882:16:25","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6700,"nodeType":"IfStatement","src":"12870:103:25","trueBody":{"id":6699,"nodeType":"Block","src":"12900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"12956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6694,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"12921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6698,"nodeType":"RevertStatement","src":"12914:48:25"}]}},{"expression":{"arguments":[{"id":6703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"12996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6701,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:25","typeDescriptions":{}}},"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6686,"id":6705,"nodeType":"Return","src":"12982:20:25"}]},"documentation":{"id":6680,"nodeType":"StructuredDocumentation","src":"12515:276:25","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6707,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:25","nodeType":"FunctionDefinition","parameters":{"id":6683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6682,"mutability":"mutable","name":"value","nameLocation":"12822:5:25","nodeType":"VariableDeclaration","scope":6707,"src":"12814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6681,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:25"},"returnParameters":{"id":6686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6707,"src":"12852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6684,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:25","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:25"},"scope":7801,"src":"12796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6734,"nodeType":"Block","src":"13360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6710,"src":"13374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6717,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6716,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:25","memberName":"max","nodeType":"MemberAccess","src":"13382:16:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6728,"nodeType":"IfStatement","src":"13370:103:25","trueBody":{"id":6727,"nodeType":"Block","src":"13400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6710,"src":"13456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6722,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"13421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6726,"nodeType":"RevertStatement","src":"13414:48:25"}]}},{"expression":{"arguments":[{"id":6731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6710,"src":"13496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6729,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:25","typeDescriptions":{}}},"id":6732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6714,"id":6733,"nodeType":"Return","src":"13482:20:25"}]},"documentation":{"id":6708,"nodeType":"StructuredDocumentation","src":"13015:276:25","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6735,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:25","nodeType":"FunctionDefinition","parameters":{"id":6711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6710,"mutability":"mutable","name":"value","nameLocation":"13322:5:25","nodeType":"VariableDeclaration","scope":6735,"src":"13314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6709,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:25"},"returnParameters":{"id":6714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6735,"src":"13352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6712,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:25"},"scope":7801,"src":"13296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6762,"nodeType":"Block","src":"13860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"13874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6745,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6744,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:25","memberName":"max","nodeType":"MemberAccess","src":"13882:16:25","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6756,"nodeType":"IfStatement","src":"13870:103:25","trueBody":{"id":6755,"nodeType":"Block","src":"13900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"13956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6750,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"13921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6754,"nodeType":"RevertStatement","src":"13914:48:25"}]}},{"expression":{"arguments":[{"id":6759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"13996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6757,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:25","typeDescriptions":{}}},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6742,"id":6761,"nodeType":"Return","src":"13982:20:25"}]},"documentation":{"id":6736,"nodeType":"StructuredDocumentation","src":"13515:276:25","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6763,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:25","nodeType":"FunctionDefinition","parameters":{"id":6739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6738,"mutability":"mutable","name":"value","nameLocation":"13822:5:25","nodeType":"VariableDeclaration","scope":6763,"src":"13814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6737,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:25"},"returnParameters":{"id":6742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6763,"src":"13852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6740,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:25","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:25"},"scope":7801,"src":"13796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6790,"nodeType":"Block","src":"14360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"14374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6773,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6772,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:25","memberName":"max","nodeType":"MemberAccess","src":"14382:16:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6784,"nodeType":"IfStatement","src":"14370:103:25","trueBody":{"id":6783,"nodeType":"Block","src":"14400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"14456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6778,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"14421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6782,"nodeType":"RevertStatement","src":"14414:48:25"}]}},{"expression":{"arguments":[{"id":6787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6766,"src":"14496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6785,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:25","typeDescriptions":{}}},"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6770,"id":6789,"nodeType":"Return","src":"14482:20:25"}]},"documentation":{"id":6764,"nodeType":"StructuredDocumentation","src":"14015:276:25","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6791,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:25","nodeType":"FunctionDefinition","parameters":{"id":6767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6766,"mutability":"mutable","name":"value","nameLocation":"14322:5:25","nodeType":"VariableDeclaration","scope":6791,"src":"14314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6765,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:25"},"returnParameters":{"id":6770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6791,"src":"14352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6768,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:25"},"scope":7801,"src":"14296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6818,"nodeType":"Block","src":"14860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"14874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6801,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6800,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:25","memberName":"max","nodeType":"MemberAccess","src":"14882:16:25","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6812,"nodeType":"IfStatement","src":"14870:103:25","trueBody":{"id":6811,"nodeType":"Block","src":"14900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"14956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6806,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"14921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6810,"nodeType":"RevertStatement","src":"14914:48:25"}]}},{"expression":{"arguments":[{"id":6815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"14996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6813,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:25","typeDescriptions":{}}},"id":6816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6798,"id":6817,"nodeType":"Return","src":"14982:20:25"}]},"documentation":{"id":6792,"nodeType":"StructuredDocumentation","src":"14515:276:25","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6819,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:25","nodeType":"FunctionDefinition","parameters":{"id":6795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6794,"mutability":"mutable","name":"value","nameLocation":"14822:5:25","nodeType":"VariableDeclaration","scope":6819,"src":"14814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6793,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:25"},"returnParameters":{"id":6798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6819,"src":"14852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6796,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:25","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:25"},"scope":7801,"src":"14796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6846,"nodeType":"Block","src":"15360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"15374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6829,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6828,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:25","memberName":"max","nodeType":"MemberAccess","src":"15382:16:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6840,"nodeType":"IfStatement","src":"15370:103:25","trueBody":{"id":6839,"nodeType":"Block","src":"15400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"15456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6834,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"15421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6838,"nodeType":"RevertStatement","src":"15414:48:25"}]}},{"expression":{"arguments":[{"id":6843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"15496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6841,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:25","typeDescriptions":{}}},"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6826,"id":6845,"nodeType":"Return","src":"15482:20:25"}]},"documentation":{"id":6820,"nodeType":"StructuredDocumentation","src":"15015:276:25","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6847,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:25","nodeType":"FunctionDefinition","parameters":{"id":6823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6822,"mutability":"mutable","name":"value","nameLocation":"15322:5:25","nodeType":"VariableDeclaration","scope":6847,"src":"15314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6821,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:25"},"returnParameters":{"id":6826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6847,"src":"15352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6824,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:25"},"scope":7801,"src":"15296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6874,"nodeType":"Block","src":"15860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"15874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6857,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6856,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:25","memberName":"max","nodeType":"MemberAccess","src":"15882:16:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6868,"nodeType":"IfStatement","src":"15870:103:25","trueBody":{"id":6867,"nodeType":"Block","src":"15900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"15956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6862,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"15921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6866,"nodeType":"RevertStatement","src":"15914:48:25"}]}},{"expression":{"arguments":[{"id":6871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"15996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6869,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:25","typeDescriptions":{}}},"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6854,"id":6873,"nodeType":"Return","src":"15982:20:25"}]},"documentation":{"id":6848,"nodeType":"StructuredDocumentation","src":"15515:276:25","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6875,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:25","nodeType":"FunctionDefinition","parameters":{"id":6851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6850,"mutability":"mutable","name":"value","nameLocation":"15822:5:25","nodeType":"VariableDeclaration","scope":6875,"src":"15814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6849,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:25"},"returnParameters":{"id":6854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6875,"src":"15852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6852,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:25"},"scope":7801,"src":"15796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6902,"nodeType":"Block","src":"16360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"16374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6885,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6884,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:25","memberName":"max","nodeType":"MemberAccess","src":"16382:16:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6896,"nodeType":"IfStatement","src":"16370:103:25","trueBody":{"id":6895,"nodeType":"Block","src":"16400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"16456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6890,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"16421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6894,"nodeType":"RevertStatement","src":"16414:48:25"}]}},{"expression":{"arguments":[{"id":6899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"16496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6897,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:25","typeDescriptions":{}}},"id":6900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6882,"id":6901,"nodeType":"Return","src":"16482:20:25"}]},"documentation":{"id":6876,"nodeType":"StructuredDocumentation","src":"16015:276:25","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6903,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:25","nodeType":"FunctionDefinition","parameters":{"id":6879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6878,"mutability":"mutable","name":"value","nameLocation":"16322:5:25","nodeType":"VariableDeclaration","scope":6903,"src":"16314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6877,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:25"},"returnParameters":{"id":6882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6903,"src":"16352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6880,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:25"},"scope":7801,"src":"16296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6930,"nodeType":"Block","src":"16854:146:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"16868:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6913,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6912,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:25","memberName":"max","nodeType":"MemberAccess","src":"16876:15:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6924,"nodeType":"IfStatement","src":"16864:101:25","trueBody":{"id":6923,"nodeType":"Block","src":"16893:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"16948:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6918,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"16914:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6922,"nodeType":"RevertStatement","src":"16907:47:25"}]}},{"expression":{"arguments":[{"id":6927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"16987:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6925,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:25","typeDescriptions":{}}},"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6910,"id":6929,"nodeType":"Return","src":"16974:19:25"}]},"documentation":{"id":6904,"nodeType":"StructuredDocumentation","src":"16515:272:25","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6931,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:25","nodeType":"FunctionDefinition","parameters":{"id":6907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6906,"mutability":"mutable","name":"value","nameLocation":"16817:5:25","nodeType":"VariableDeclaration","scope":6931,"src":"16809:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6905,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:25"},"returnParameters":{"id":6910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6931,"src":"16847:5:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6908,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:25"},"scope":7801,"src":"16792:208:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6953,"nodeType":"Block","src":"17236:128:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"17250:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6947,"nodeType":"IfStatement","src":"17246:81:25","trueBody":{"id":6946,"nodeType":"Block","src":"17261:66:25","statements":[{"errorCall":{"arguments":[{"id":6943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"17310:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6942,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6051,"src":"17282:27:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6945,"nodeType":"RevertStatement","src":"17275:41:25"}]}},{"expression":{"arguments":[{"id":6950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"17351:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6948,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:25","typeDescriptions":{}}},"id":6951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6938,"id":6952,"nodeType":"Return","src":"17336:21:25"}]},"documentation":{"id":6932,"nodeType":"StructuredDocumentation","src":"17006:160:25","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6954,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:25","nodeType":"FunctionDefinition","parameters":{"id":6935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6934,"mutability":"mutable","name":"value","nameLocation":"17197:5:25","nodeType":"VariableDeclaration","scope":6954,"src":"17190:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6933,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:25"},"returnParameters":{"id":6938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6954,"src":"17227:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6936,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:25"},"scope":7801,"src":"17171:193:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6979,"nodeType":"Block","src":"17761:150:25","statements":[{"expression":{"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6962,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"17771:10:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6957,"src":"17791:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6963,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:25","typeDescriptions":{}}},"id":6966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6968,"nodeType":"ExpressionStatement","src":"17771:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6969,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"17811:10:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6957,"src":"17825:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6978,"nodeType":"IfStatement","src":"17807:98:25","trueBody":{"id":6977,"nodeType":"Block","src":"17832:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:25","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6957,"src":"17888:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6972,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"17853:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6976,"nodeType":"RevertStatement","src":"17846:48:25"}]}}]},"documentation":{"id":6955,"nodeType":"StructuredDocumentation","src":"17370:312:25","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6980,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:25","nodeType":"FunctionDefinition","parameters":{"id":6958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6957,"mutability":"mutable","name":"value","nameLocation":"17712:5:25","nodeType":"VariableDeclaration","scope":6980,"src":"17705:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6956,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:25"},"returnParameters":{"id":6961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6960,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:25","nodeType":"VariableDeclaration","scope":6980,"src":"17742:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6959,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:25"},"scope":7801,"src":"17687:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7005,"nodeType":"Block","src":"18308:150:25","statements":[{"expression":{"id":6993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6988,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6986,"src":"18318:10:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"18338:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6989,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:25","typeDescriptions":{}}},"id":6992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6994,"nodeType":"ExpressionStatement","src":"18318:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6995,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6986,"src":"18358:10:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"18372:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7004,"nodeType":"IfStatement","src":"18354:98:25","trueBody":{"id":7003,"nodeType":"Block","src":"18379:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:25","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"18435:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6998,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"18400:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7002,"nodeType":"RevertStatement","src":"18393:48:25"}]}}]},"documentation":{"id":6981,"nodeType":"StructuredDocumentation","src":"17917:312:25","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7006,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:25","nodeType":"FunctionDefinition","parameters":{"id":6984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6983,"mutability":"mutable","name":"value","nameLocation":"18259:5:25","nodeType":"VariableDeclaration","scope":7006,"src":"18252:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6982,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:25"},"returnParameters":{"id":6987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6986,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:25","nodeType":"VariableDeclaration","scope":7006,"src":"18289:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6985,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:25"},"scope":7801,"src":"18234:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7031,"nodeType":"Block","src":"18855:150:25","statements":[{"expression":{"id":7019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7014,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"18865:10:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7009,"src":"18885:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":7015,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:25","typeDescriptions":{}}},"id":7018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":7020,"nodeType":"ExpressionStatement","src":"18865:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7021,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"18905:10:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7009,"src":"18919:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7030,"nodeType":"IfStatement","src":"18901:98:25","trueBody":{"id":7029,"nodeType":"Block","src":"18926:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:25","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7009,"src":"18982:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7024,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"18947:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7028,"nodeType":"RevertStatement","src":"18940:48:25"}]}}]},"documentation":{"id":7007,"nodeType":"StructuredDocumentation","src":"18464:312:25","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7032,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:25","nodeType":"FunctionDefinition","parameters":{"id":7010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7009,"mutability":"mutable","name":"value","nameLocation":"18806:5:25","nodeType":"VariableDeclaration","scope":7032,"src":"18799:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7008,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:25"},"returnParameters":{"id":7013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7012,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:25","nodeType":"VariableDeclaration","scope":7032,"src":"18836:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":7011,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:25"},"scope":7801,"src":"18781:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7057,"nodeType":"Block","src":"19402:150:25","statements":[{"expression":{"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7040,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"19412:10:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"19432:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":7041,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:25","typeDescriptions":{}}},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":7046,"nodeType":"ExpressionStatement","src":"19412:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7047,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"19452:10:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"19466:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7056,"nodeType":"IfStatement","src":"19448:98:25","trueBody":{"id":7055,"nodeType":"Block","src":"19473:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:25","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"19529:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7050,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"19494:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7054,"nodeType":"RevertStatement","src":"19487:48:25"}]}}]},"documentation":{"id":7033,"nodeType":"StructuredDocumentation","src":"19011:312:25","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7058,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:25","nodeType":"FunctionDefinition","parameters":{"id":7036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7035,"mutability":"mutable","name":"value","nameLocation":"19353:5:25","nodeType":"VariableDeclaration","scope":7058,"src":"19346:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7034,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:25"},"returnParameters":{"id":7039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7038,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:25","nodeType":"VariableDeclaration","scope":7058,"src":"19383:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":7037,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:25"},"scope":7801,"src":"19328:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7083,"nodeType":"Block","src":"19949:150:25","statements":[{"expression":{"id":7071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7066,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"19959:10:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"19979:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":7067,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:25","typeDescriptions":{}}},"id":7070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":7072,"nodeType":"ExpressionStatement","src":"19959:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7073,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"19999:10:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"20013:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7082,"nodeType":"IfStatement","src":"19995:98:25","trueBody":{"id":7081,"nodeType":"Block","src":"20020:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:25","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"20076:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7076,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"20041:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7080,"nodeType":"RevertStatement","src":"20034:48:25"}]}}]},"documentation":{"id":7059,"nodeType":"StructuredDocumentation","src":"19558:312:25","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7084,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:25","nodeType":"FunctionDefinition","parameters":{"id":7062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7061,"mutability":"mutable","name":"value","nameLocation":"19900:5:25","nodeType":"VariableDeclaration","scope":7084,"src":"19893:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7060,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:25"},"returnParameters":{"id":7065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7064,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:25","nodeType":"VariableDeclaration","scope":7084,"src":"19930:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":7063,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:25"},"scope":7801,"src":"19875:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7109,"nodeType":"Block","src":"20496:150:25","statements":[{"expression":{"id":7097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7092,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"20506:10:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"20526:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":7093,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:25","typeDescriptions":{}}},"id":7096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":7098,"nodeType":"ExpressionStatement","src":"20506:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7099,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"20546:10:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"20560:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7108,"nodeType":"IfStatement","src":"20542:98:25","trueBody":{"id":7107,"nodeType":"Block","src":"20567:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:25","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"20623:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7102,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"20588:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7106,"nodeType":"RevertStatement","src":"20581:48:25"}]}}]},"documentation":{"id":7085,"nodeType":"StructuredDocumentation","src":"20105:312:25","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7110,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:25","nodeType":"FunctionDefinition","parameters":{"id":7088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7087,"mutability":"mutable","name":"value","nameLocation":"20447:5:25","nodeType":"VariableDeclaration","scope":7110,"src":"20440:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7086,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:25"},"returnParameters":{"id":7091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7090,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:25","nodeType":"VariableDeclaration","scope":7110,"src":"20477:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":7089,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:25"},"scope":7801,"src":"20422:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7135,"nodeType":"Block","src":"21043:150:25","statements":[{"expression":{"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7118,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"21053:10:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"21073:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":7119,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:25","typeDescriptions":{}}},"id":7122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":7124,"nodeType":"ExpressionStatement","src":"21053:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7125,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"21093:10:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"21107:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7134,"nodeType":"IfStatement","src":"21089:98:25","trueBody":{"id":7133,"nodeType":"Block","src":"21114:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:25","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"21170:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7128,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"21135:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7132,"nodeType":"RevertStatement","src":"21128:48:25"}]}}]},"documentation":{"id":7111,"nodeType":"StructuredDocumentation","src":"20652:312:25","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7136,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:25","nodeType":"FunctionDefinition","parameters":{"id":7114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7113,"mutability":"mutable","name":"value","nameLocation":"20994:5:25","nodeType":"VariableDeclaration","scope":7136,"src":"20987:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7112,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:25"},"returnParameters":{"id":7117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7116,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:25","nodeType":"VariableDeclaration","scope":7136,"src":"21024:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":7115,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:25"},"scope":7801,"src":"20969:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7161,"nodeType":"Block","src":"21590:150:25","statements":[{"expression":{"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7144,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"21600:10:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7139,"src":"21620:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":7145,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:25","typeDescriptions":{}}},"id":7148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7150,"nodeType":"ExpressionStatement","src":"21600:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7151,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"21640:10:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7139,"src":"21654:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7160,"nodeType":"IfStatement","src":"21636:98:25","trueBody":{"id":7159,"nodeType":"Block","src":"21661:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:25","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7139,"src":"21717:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7154,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"21682:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7158,"nodeType":"RevertStatement","src":"21675:48:25"}]}}]},"documentation":{"id":7137,"nodeType":"StructuredDocumentation","src":"21199:312:25","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7162,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:25","nodeType":"FunctionDefinition","parameters":{"id":7140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7139,"mutability":"mutable","name":"value","nameLocation":"21541:5:25","nodeType":"VariableDeclaration","scope":7162,"src":"21534:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7138,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:25"},"returnParameters":{"id":7143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7142,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:25","nodeType":"VariableDeclaration","scope":7162,"src":"21571:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":7141,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:25"},"scope":7801,"src":"21516:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7187,"nodeType":"Block","src":"22137:150:25","statements":[{"expression":{"id":7175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7170,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7168,"src":"22147:10:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7165,"src":"22167:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7171,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:25","typeDescriptions":{}}},"id":7174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7176,"nodeType":"ExpressionStatement","src":"22147:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7177,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7168,"src":"22187:10:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7165,"src":"22201:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7186,"nodeType":"IfStatement","src":"22183:98:25","trueBody":{"id":7185,"nodeType":"Block","src":"22208:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:25","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7165,"src":"22264:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7180,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"22229:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7184,"nodeType":"RevertStatement","src":"22222:48:25"}]}}]},"documentation":{"id":7163,"nodeType":"StructuredDocumentation","src":"21746:312:25","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7188,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:25","nodeType":"FunctionDefinition","parameters":{"id":7166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7165,"mutability":"mutable","name":"value","nameLocation":"22088:5:25","nodeType":"VariableDeclaration","scope":7188,"src":"22081:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7164,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:25"},"returnParameters":{"id":7169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7168,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:25","nodeType":"VariableDeclaration","scope":7188,"src":"22118:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7167,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:25"},"scope":7801,"src":"22063:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7213,"nodeType":"Block","src":"22684:150:25","statements":[{"expression":{"id":7201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7196,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7194,"src":"22694:10:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"22714:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7197,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:25","typeDescriptions":{}}},"id":7200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7202,"nodeType":"ExpressionStatement","src":"22694:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7203,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7194,"src":"22734:10:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"22748:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7212,"nodeType":"IfStatement","src":"22730:98:25","trueBody":{"id":7211,"nodeType":"Block","src":"22755:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:25","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"22811:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7206,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"22776:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7210,"nodeType":"RevertStatement","src":"22769:48:25"}]}}]},"documentation":{"id":7189,"nodeType":"StructuredDocumentation","src":"22293:312:25","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7214,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:25","nodeType":"FunctionDefinition","parameters":{"id":7192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7191,"mutability":"mutable","name":"value","nameLocation":"22635:5:25","nodeType":"VariableDeclaration","scope":7214,"src":"22628:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7190,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:25"},"returnParameters":{"id":7195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7194,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:25","nodeType":"VariableDeclaration","scope":7214,"src":"22665:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7193,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:25"},"scope":7801,"src":"22610:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7239,"nodeType":"Block","src":"23231:150:25","statements":[{"expression":{"id":7227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7222,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"23241:10:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7217,"src":"23261:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7223,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:25","typeDescriptions":{}}},"id":7226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7228,"nodeType":"ExpressionStatement","src":"23241:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7229,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"23281:10:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7217,"src":"23295:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7238,"nodeType":"IfStatement","src":"23277:98:25","trueBody":{"id":7237,"nodeType":"Block","src":"23302:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:25","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7217,"src":"23358:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7232,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"23323:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7236,"nodeType":"RevertStatement","src":"23316:48:25"}]}}]},"documentation":{"id":7215,"nodeType":"StructuredDocumentation","src":"22840:312:25","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7240,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:25","nodeType":"FunctionDefinition","parameters":{"id":7218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7217,"mutability":"mutable","name":"value","nameLocation":"23182:5:25","nodeType":"VariableDeclaration","scope":7240,"src":"23175:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7216,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:25"},"returnParameters":{"id":7221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7220,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:25","nodeType":"VariableDeclaration","scope":7240,"src":"23212:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7219,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:25"},"scope":7801,"src":"23157:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7265,"nodeType":"Block","src":"23778:150:25","statements":[{"expression":{"id":7253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7248,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"23788:10:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"23808:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7249,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:25","typeDescriptions":{}}},"id":7252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7254,"nodeType":"ExpressionStatement","src":"23788:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7255,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"23828:10:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"23842:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7264,"nodeType":"IfStatement","src":"23824:98:25","trueBody":{"id":7263,"nodeType":"Block","src":"23849:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:25","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"23905:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7258,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"23870:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7262,"nodeType":"RevertStatement","src":"23863:48:25"}]}}]},"documentation":{"id":7241,"nodeType":"StructuredDocumentation","src":"23387:312:25","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7266,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:25","nodeType":"FunctionDefinition","parameters":{"id":7244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7243,"mutability":"mutable","name":"value","nameLocation":"23729:5:25","nodeType":"VariableDeclaration","scope":7266,"src":"23722:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7242,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:25"},"returnParameters":{"id":7247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7246,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:25","nodeType":"VariableDeclaration","scope":7266,"src":"23759:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7245,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:25"},"scope":7801,"src":"23704:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7291,"nodeType":"Block","src":"24325:150:25","statements":[{"expression":{"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7274,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7272,"src":"24335:10:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7269,"src":"24355:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7275,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:25","typeDescriptions":{}}},"id":7278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7280,"nodeType":"ExpressionStatement","src":"24335:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7281,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7272,"src":"24375:10:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7269,"src":"24389:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7290,"nodeType":"IfStatement","src":"24371:98:25","trueBody":{"id":7289,"nodeType":"Block","src":"24396:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:25","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7269,"src":"24452:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7284,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"24417:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7288,"nodeType":"RevertStatement","src":"24410:48:25"}]}}]},"documentation":{"id":7267,"nodeType":"StructuredDocumentation","src":"23934:312:25","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7292,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:25","nodeType":"FunctionDefinition","parameters":{"id":7270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7269,"mutability":"mutable","name":"value","nameLocation":"24276:5:25","nodeType":"VariableDeclaration","scope":7292,"src":"24269:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7268,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:25"},"returnParameters":{"id":7273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7272,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:25","nodeType":"VariableDeclaration","scope":7292,"src":"24306:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7271,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:25"},"scope":7801,"src":"24251:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7317,"nodeType":"Block","src":"24872:150:25","statements":[{"expression":{"id":7305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7300,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"24882:10:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"24902:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7301,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:25","typeDescriptions":{}}},"id":7304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7306,"nodeType":"ExpressionStatement","src":"24882:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7307,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"24922:10:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"24936:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7316,"nodeType":"IfStatement","src":"24918:98:25","trueBody":{"id":7315,"nodeType":"Block","src":"24943:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:25","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"24999:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7310,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"24964:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7314,"nodeType":"RevertStatement","src":"24957:48:25"}]}}]},"documentation":{"id":7293,"nodeType":"StructuredDocumentation","src":"24481:312:25","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7318,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:25","nodeType":"FunctionDefinition","parameters":{"id":7296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7295,"mutability":"mutable","name":"value","nameLocation":"24823:5:25","nodeType":"VariableDeclaration","scope":7318,"src":"24816:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7294,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:25"},"returnParameters":{"id":7299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7298,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:25","nodeType":"VariableDeclaration","scope":7318,"src":"24853:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7297,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:25"},"scope":7801,"src":"24798:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7343,"nodeType":"Block","src":"25419:150:25","statements":[{"expression":{"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7326,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7324,"src":"25429:10:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"25449:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7327,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:25","typeDescriptions":{}}},"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7332,"nodeType":"ExpressionStatement","src":"25429:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7333,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7324,"src":"25469:10:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"25483:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7342,"nodeType":"IfStatement","src":"25465:98:25","trueBody":{"id":7341,"nodeType":"Block","src":"25490:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:25","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7321,"src":"25546:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7336,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"25511:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7340,"nodeType":"RevertStatement","src":"25504:48:25"}]}}]},"documentation":{"id":7319,"nodeType":"StructuredDocumentation","src":"25028:312:25","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7344,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:25","nodeType":"FunctionDefinition","parameters":{"id":7322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7321,"mutability":"mutable","name":"value","nameLocation":"25370:5:25","nodeType":"VariableDeclaration","scope":7344,"src":"25363:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7320,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:25"},"returnParameters":{"id":7325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7324,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:25","nodeType":"VariableDeclaration","scope":7344,"src":"25400:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7323,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:25"},"scope":7801,"src":"25345:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7369,"nodeType":"Block","src":"25966:150:25","statements":[{"expression":{"id":7357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7352,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7350,"src":"25976:10:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"25996:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7353,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:25","typeDescriptions":{}}},"id":7356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7358,"nodeType":"ExpressionStatement","src":"25976:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7359,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7350,"src":"26016:10:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"26030:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7368,"nodeType":"IfStatement","src":"26012:98:25","trueBody":{"id":7367,"nodeType":"Block","src":"26037:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"26093:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7362,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"26058:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7366,"nodeType":"RevertStatement","src":"26051:48:25"}]}}]},"documentation":{"id":7345,"nodeType":"StructuredDocumentation","src":"25575:312:25","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7370,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:25","nodeType":"FunctionDefinition","parameters":{"id":7348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7347,"mutability":"mutable","name":"value","nameLocation":"25917:5:25","nodeType":"VariableDeclaration","scope":7370,"src":"25910:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7346,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:25"},"returnParameters":{"id":7351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7350,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:25","nodeType":"VariableDeclaration","scope":7370,"src":"25947:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7349,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:25"},"scope":7801,"src":"25892:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7395,"nodeType":"Block","src":"26513:150:25","statements":[{"expression":{"id":7383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7378,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7376,"src":"26523:10:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7373,"src":"26543:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7379,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:25","typeDescriptions":{}}},"id":7382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7384,"nodeType":"ExpressionStatement","src":"26523:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7385,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7376,"src":"26563:10:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7373,"src":"26577:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7394,"nodeType":"IfStatement","src":"26559:98:25","trueBody":{"id":7393,"nodeType":"Block","src":"26584:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:25","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7373,"src":"26640:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7388,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"26605:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7392,"nodeType":"RevertStatement","src":"26598:48:25"}]}}]},"documentation":{"id":7371,"nodeType":"StructuredDocumentation","src":"26122:312:25","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7396,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:25","nodeType":"FunctionDefinition","parameters":{"id":7374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7373,"mutability":"mutable","name":"value","nameLocation":"26464:5:25","nodeType":"VariableDeclaration","scope":7396,"src":"26457:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7372,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:25"},"returnParameters":{"id":7377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7376,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:25","nodeType":"VariableDeclaration","scope":7396,"src":"26494:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7375,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:25"},"scope":7801,"src":"26439:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7421,"nodeType":"Block","src":"27060:150:25","statements":[{"expression":{"id":7409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7404,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7402,"src":"27070:10:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7399,"src":"27090:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7405,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:25","typeDescriptions":{}}},"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7410,"nodeType":"ExpressionStatement","src":"27070:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7411,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7402,"src":"27110:10:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7399,"src":"27124:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7420,"nodeType":"IfStatement","src":"27106:98:25","trueBody":{"id":7419,"nodeType":"Block","src":"27131:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:25","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7399,"src":"27187:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7414,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"27152:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7418,"nodeType":"RevertStatement","src":"27145:48:25"}]}}]},"documentation":{"id":7397,"nodeType":"StructuredDocumentation","src":"26669:312:25","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7422,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:25","nodeType":"FunctionDefinition","parameters":{"id":7400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7399,"mutability":"mutable","name":"value","nameLocation":"27011:5:25","nodeType":"VariableDeclaration","scope":7422,"src":"27004:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7398,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:25"},"returnParameters":{"id":7403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7402,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:25","nodeType":"VariableDeclaration","scope":7422,"src":"27041:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7401,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:25"},"scope":7801,"src":"26986:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7447,"nodeType":"Block","src":"27607:150:25","statements":[{"expression":{"id":7435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7430,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7428,"src":"27617:10:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"27637:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7431,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:25","typeDescriptions":{}}},"id":7434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7436,"nodeType":"ExpressionStatement","src":"27617:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7437,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7428,"src":"27657:10:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"27671:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7446,"nodeType":"IfStatement","src":"27653:98:25","trueBody":{"id":7445,"nodeType":"Block","src":"27678:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:25","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"27734:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7440,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"27699:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7444,"nodeType":"RevertStatement","src":"27692:48:25"}]}}]},"documentation":{"id":7423,"nodeType":"StructuredDocumentation","src":"27216:312:25","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7448,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:25","nodeType":"FunctionDefinition","parameters":{"id":7426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7425,"mutability":"mutable","name":"value","nameLocation":"27558:5:25","nodeType":"VariableDeclaration","scope":7448,"src":"27551:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7424,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:25"},"returnParameters":{"id":7429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7428,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:25","nodeType":"VariableDeclaration","scope":7448,"src":"27588:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7427,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:25"},"scope":7801,"src":"27533:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7473,"nodeType":"Block","src":"28147:148:25","statements":[{"expression":{"id":7461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7456,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7454,"src":"28157:10:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7451,"src":"28176:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7457,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:25","typeDescriptions":{}}},"id":7460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7462,"nodeType":"ExpressionStatement","src":"28157:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7463,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7454,"src":"28196:10:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7451,"src":"28210:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7472,"nodeType":"IfStatement","src":"28192:97:25","trueBody":{"id":7471,"nodeType":"Block","src":"28217:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7451,"src":"28272:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7466,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"28238:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7470,"nodeType":"RevertStatement","src":"28231:47:25"}]}}]},"documentation":{"id":7449,"nodeType":"StructuredDocumentation","src":"27763:307:25","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7474,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:25","nodeType":"FunctionDefinition","parameters":{"id":7452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7451,"mutability":"mutable","name":"value","nameLocation":"28099:5:25","nodeType":"VariableDeclaration","scope":7474,"src":"28092:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7450,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:25"},"returnParameters":{"id":7455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7454,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:25","nodeType":"VariableDeclaration","scope":7474,"src":"28129:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7453,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:25"},"scope":7801,"src":"28075:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7499,"nodeType":"Block","src":"28685:148:25","statements":[{"expression":{"id":7487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7482,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7480,"src":"28695:10:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"28714:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7483,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:25","typeDescriptions":{}}},"id":7486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7488,"nodeType":"ExpressionStatement","src":"28695:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7489,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7480,"src":"28734:10:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"28748:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7498,"nodeType":"IfStatement","src":"28730:97:25","trueBody":{"id":7497,"nodeType":"Block","src":"28755:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:25","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"28810:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7492,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"28776:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7496,"nodeType":"RevertStatement","src":"28769:47:25"}]}}]},"documentation":{"id":7475,"nodeType":"StructuredDocumentation","src":"28301:307:25","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7500,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:25","nodeType":"FunctionDefinition","parameters":{"id":7478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7477,"mutability":"mutable","name":"value","nameLocation":"28637:5:25","nodeType":"VariableDeclaration","scope":7500,"src":"28630:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7476,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:25"},"returnParameters":{"id":7481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7480,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:25","nodeType":"VariableDeclaration","scope":7500,"src":"28667:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7479,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:25"},"scope":7801,"src":"28613:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7525,"nodeType":"Block","src":"29223:148:25","statements":[{"expression":{"id":7513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7508,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7506,"src":"29233:10:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"29252:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7509,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:25","typeDescriptions":{}}},"id":7512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7514,"nodeType":"ExpressionStatement","src":"29233:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7515,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7506,"src":"29272:10:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"29286:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7524,"nodeType":"IfStatement","src":"29268:97:25","trueBody":{"id":7523,"nodeType":"Block","src":"29293:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:25","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"29348:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7518,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"29314:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7522,"nodeType":"RevertStatement","src":"29307:47:25"}]}}]},"documentation":{"id":7501,"nodeType":"StructuredDocumentation","src":"28839:307:25","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7526,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:25","nodeType":"FunctionDefinition","parameters":{"id":7504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7503,"mutability":"mutable","name":"value","nameLocation":"29175:5:25","nodeType":"VariableDeclaration","scope":7526,"src":"29168:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7502,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:25"},"returnParameters":{"id":7507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7506,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:25","nodeType":"VariableDeclaration","scope":7526,"src":"29205:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7505,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:25"},"scope":7801,"src":"29151:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7551,"nodeType":"Block","src":"29761:148:25","statements":[{"expression":{"id":7539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7534,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"29771:10:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7529,"src":"29790:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7535,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:25","typeDescriptions":{}}},"id":7538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7540,"nodeType":"ExpressionStatement","src":"29771:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7541,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"29810:10:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7529,"src":"29824:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7550,"nodeType":"IfStatement","src":"29806:97:25","trueBody":{"id":7549,"nodeType":"Block","src":"29831:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:25","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7529,"src":"29886:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7544,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"29852:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7548,"nodeType":"RevertStatement","src":"29845:47:25"}]}}]},"documentation":{"id":7527,"nodeType":"StructuredDocumentation","src":"29377:307:25","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7552,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:25","nodeType":"FunctionDefinition","parameters":{"id":7530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7529,"mutability":"mutable","name":"value","nameLocation":"29713:5:25","nodeType":"VariableDeclaration","scope":7552,"src":"29706:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7528,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:25"},"returnParameters":{"id":7533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7532,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:25","nodeType":"VariableDeclaration","scope":7552,"src":"29743:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7531,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:25"},"scope":7801,"src":"29689:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7577,"nodeType":"Block","src":"30299:148:25","statements":[{"expression":{"id":7565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7560,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7558,"src":"30309:10:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7555,"src":"30328:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7561,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:25","typeDescriptions":{}}},"id":7564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7566,"nodeType":"ExpressionStatement","src":"30309:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7567,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7558,"src":"30348:10:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7555,"src":"30362:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7576,"nodeType":"IfStatement","src":"30344:97:25","trueBody":{"id":7575,"nodeType":"Block","src":"30369:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7555,"src":"30424:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7570,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"30390:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7574,"nodeType":"RevertStatement","src":"30383:47:25"}]}}]},"documentation":{"id":7553,"nodeType":"StructuredDocumentation","src":"29915:307:25","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7578,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:25","nodeType":"FunctionDefinition","parameters":{"id":7556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7555,"mutability":"mutable","name":"value","nameLocation":"30251:5:25","nodeType":"VariableDeclaration","scope":7578,"src":"30244:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7554,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:25"},"returnParameters":{"id":7559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7558,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:25","nodeType":"VariableDeclaration","scope":7578,"src":"30281:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7557,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:25"},"scope":7801,"src":"30227:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7603,"nodeType":"Block","src":"30837:148:25","statements":[{"expression":{"id":7591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7586,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7584,"src":"30847:10:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"30866:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7587,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:25","typeDescriptions":{}}},"id":7590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7592,"nodeType":"ExpressionStatement","src":"30847:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7593,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7584,"src":"30886:10:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"30900:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7602,"nodeType":"IfStatement","src":"30882:97:25","trueBody":{"id":7601,"nodeType":"Block","src":"30907:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:25","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"30962:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7596,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"30928:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7600,"nodeType":"RevertStatement","src":"30921:47:25"}]}}]},"documentation":{"id":7579,"nodeType":"StructuredDocumentation","src":"30453:307:25","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7604,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:25","nodeType":"FunctionDefinition","parameters":{"id":7582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7581,"mutability":"mutable","name":"value","nameLocation":"30789:5:25","nodeType":"VariableDeclaration","scope":7604,"src":"30782:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7580,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:25"},"returnParameters":{"id":7585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7584,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:25","nodeType":"VariableDeclaration","scope":7604,"src":"30819:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7583,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:25"},"scope":7801,"src":"30765:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7629,"nodeType":"Block","src":"31375:148:25","statements":[{"expression":{"id":7617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7612,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7610,"src":"31385:10:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7607,"src":"31404:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7613,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:25","typeDescriptions":{}}},"id":7616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7618,"nodeType":"ExpressionStatement","src":"31385:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7619,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7610,"src":"31424:10:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7607,"src":"31438:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7628,"nodeType":"IfStatement","src":"31420:97:25","trueBody":{"id":7627,"nodeType":"Block","src":"31445:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:25","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7607,"src":"31500:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7622,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"31466:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7626,"nodeType":"RevertStatement","src":"31459:47:25"}]}}]},"documentation":{"id":7605,"nodeType":"StructuredDocumentation","src":"30991:307:25","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7630,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:25","nodeType":"FunctionDefinition","parameters":{"id":7608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7607,"mutability":"mutable","name":"value","nameLocation":"31327:5:25","nodeType":"VariableDeclaration","scope":7630,"src":"31320:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7606,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:25"},"returnParameters":{"id":7611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7610,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:25","nodeType":"VariableDeclaration","scope":7630,"src":"31357:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7609,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:25"},"scope":7801,"src":"31303:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7655,"nodeType":"Block","src":"31913:148:25","statements":[{"expression":{"id":7643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7638,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7636,"src":"31923:10:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7633,"src":"31942:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7639,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:25","typeDescriptions":{}}},"id":7642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7644,"nodeType":"ExpressionStatement","src":"31923:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7645,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7636,"src":"31962:10:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7633,"src":"31976:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7654,"nodeType":"IfStatement","src":"31958:97:25","trueBody":{"id":7653,"nodeType":"Block","src":"31983:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:25","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7633,"src":"32038:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7648,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"32004:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7652,"nodeType":"RevertStatement","src":"31997:47:25"}]}}]},"documentation":{"id":7631,"nodeType":"StructuredDocumentation","src":"31529:307:25","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7656,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:25","nodeType":"FunctionDefinition","parameters":{"id":7634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7633,"mutability":"mutable","name":"value","nameLocation":"31865:5:25","nodeType":"VariableDeclaration","scope":7656,"src":"31858:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7632,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:25"},"returnParameters":{"id":7637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7636,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:25","nodeType":"VariableDeclaration","scope":7656,"src":"31895:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7635,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:25"},"scope":7801,"src":"31841:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7681,"nodeType":"Block","src":"32451:148:25","statements":[{"expression":{"id":7669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7664,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7662,"src":"32461:10:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7659,"src":"32480:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7665,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:25","typeDescriptions":{}}},"id":7668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7670,"nodeType":"ExpressionStatement","src":"32461:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7671,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7662,"src":"32500:10:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7659,"src":"32514:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7680,"nodeType":"IfStatement","src":"32496:97:25","trueBody":{"id":7679,"nodeType":"Block","src":"32521:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7659,"src":"32576:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7674,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"32542:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7678,"nodeType":"RevertStatement","src":"32535:47:25"}]}}]},"documentation":{"id":7657,"nodeType":"StructuredDocumentation","src":"32067:307:25","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7682,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:25","nodeType":"FunctionDefinition","parameters":{"id":7660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7659,"mutability":"mutable","name":"value","nameLocation":"32403:5:25","nodeType":"VariableDeclaration","scope":7682,"src":"32396:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7658,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:25"},"returnParameters":{"id":7663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7662,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:25","nodeType":"VariableDeclaration","scope":7682,"src":"32433:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7661,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:25"},"scope":7801,"src":"32379:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7707,"nodeType":"Block","src":"32989:148:25","statements":[{"expression":{"id":7695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7690,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7688,"src":"32999:10:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"33018:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7691,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:25","typeDescriptions":{}}},"id":7694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7696,"nodeType":"ExpressionStatement","src":"32999:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7697,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7688,"src":"33038:10:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"33052:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7706,"nodeType":"IfStatement","src":"33034:97:25","trueBody":{"id":7705,"nodeType":"Block","src":"33059:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:25","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"33114:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7700,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"33080:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7704,"nodeType":"RevertStatement","src":"33073:47:25"}]}}]},"documentation":{"id":7683,"nodeType":"StructuredDocumentation","src":"32605:307:25","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7708,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:25","nodeType":"FunctionDefinition","parameters":{"id":7686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7685,"mutability":"mutable","name":"value","nameLocation":"32941:5:25","nodeType":"VariableDeclaration","scope":7708,"src":"32934:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7684,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:25"},"returnParameters":{"id":7689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7688,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:25","nodeType":"VariableDeclaration","scope":7708,"src":"32971:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7687,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:25"},"scope":7801,"src":"32917:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7733,"nodeType":"Block","src":"33527:148:25","statements":[{"expression":{"id":7721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7716,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7714,"src":"33537:10:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7711,"src":"33556:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7717,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:25","typeDescriptions":{}}},"id":7720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7722,"nodeType":"ExpressionStatement","src":"33537:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7723,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7714,"src":"33576:10:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7711,"src":"33590:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7732,"nodeType":"IfStatement","src":"33572:97:25","trueBody":{"id":7731,"nodeType":"Block","src":"33597:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7711,"src":"33652:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7726,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"33618:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7730,"nodeType":"RevertStatement","src":"33611:47:25"}]}}]},"documentation":{"id":7709,"nodeType":"StructuredDocumentation","src":"33143:307:25","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7734,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:25","nodeType":"FunctionDefinition","parameters":{"id":7712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7711,"mutability":"mutable","name":"value","nameLocation":"33479:5:25","nodeType":"VariableDeclaration","scope":7734,"src":"33472:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7710,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:25"},"returnParameters":{"id":7715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7714,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:25","nodeType":"VariableDeclaration","scope":7734,"src":"33509:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7713,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:25"},"scope":7801,"src":"33455:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7759,"nodeType":"Block","src":"34058:146:25","statements":[{"expression":{"id":7747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7742,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7740,"src":"34068:10:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7737,"src":"34086:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7743,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:25","typeDescriptions":{}}},"id":7746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7748,"nodeType":"ExpressionStatement","src":"34068:24:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7749,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7740,"src":"34106:10:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7737,"src":"34120:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7758,"nodeType":"IfStatement","src":"34102:96:25","trueBody":{"id":7757,"nodeType":"Block","src":"34127:71:25","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7737,"src":"34181:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7752,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"34148:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7756,"nodeType":"RevertStatement","src":"34141:46:25"}]}}]},"documentation":{"id":7735,"nodeType":"StructuredDocumentation","src":"33681:302:25","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7760,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:25","nodeType":"FunctionDefinition","parameters":{"id":7738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7737,"mutability":"mutable","name":"value","nameLocation":"34011:5:25","nodeType":"VariableDeclaration","scope":7760,"src":"34004:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7736,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:25"},"returnParameters":{"id":7741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7740,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:25","nodeType":"VariableDeclaration","scope":7760,"src":"34041:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7739,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:25"},"scope":7801,"src":"33988:216:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7789,"nodeType":"Block","src":"34444:250:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7763,"src":"34557:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7772,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7771,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:25","memberName":"max","nodeType":"MemberAccess","src":"34573:16:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7769,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:25","typeDescriptions":{}}},"id":7776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7783,"nodeType":"IfStatement","src":"34553:105:25","trueBody":{"id":7782,"nodeType":"Block","src":"34592:66:25","statements":[{"errorCall":{"arguments":[{"id":7779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7763,"src":"34641:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7778,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6063,"src":"34613:27:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7781,"nodeType":"RevertStatement","src":"34606:41:25"}]}},{"expression":{"arguments":[{"id":7786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7763,"src":"34681:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7784,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:25","typeDescriptions":{}}},"id":7787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7767,"id":7788,"nodeType":"Return","src":"34667:20:25"}]},"documentation":{"id":7761,"nodeType":"StructuredDocumentation","src":"34210:165:25","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7790,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:25","nodeType":"FunctionDefinition","parameters":{"id":7764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7763,"mutability":"mutable","name":"value","nameLocation":"34406:5:25","nodeType":"VariableDeclaration","scope":7790,"src":"34398:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7762,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:25"},"returnParameters":{"id":7767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7790,"src":"34436:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7765,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:25"},"scope":7801,"src":"34380:314:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7799,"nodeType":"Block","src":"34853:87:25","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:25","statements":[{"nodeType":"YulAssignment","src":"34902:22:25","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:25"},"nodeType":"YulFunctionCall","src":"34914:9:25"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:25"},"nodeType":"YulFunctionCall","src":"34907:17:25"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7793,"isOffset":false,"isSlot":false,"src":"34921:1:25","valueSize":1},{"declaration":7796,"isOffset":false,"isSlot":false,"src":"34902:1:25","valueSize":1}],"flags":["memory-safe"],"id":7798,"nodeType":"InlineAssembly","src":"34863:71:25"}]},"documentation":{"id":7791,"nodeType":"StructuredDocumentation","src":"34700:90:25","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7800,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:25","nodeType":"FunctionDefinition","parameters":{"id":7794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7793,"mutability":"mutable","name":"b","nameLocation":"34816:1:25","nodeType":"VariableDeclaration","scope":7800,"src":"34811:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7792,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:25"},"returnParameters":{"id":7797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7796,"mutability":"mutable","name":"u","nameLocation":"34850:1:25","nodeType":"VariableDeclaration","scope":7800,"src":"34842:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7795,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:25"},"scope":7801,"src":"34795:145:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7802,"src":"769:34173:25","usedErrors":[6046,6051,6058,6063],"usedEvents":[]}],"src":"192:34751:25"},"id":25},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7801],"SignedMath":[7945]},"id":7946,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7803,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7805,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7946,"sourceUnit":7802,"src":"135:40:26","symbolAliases":[{"foreign":{"id":7804,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"143:8:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7806,"nodeType":"StructuredDocumentation","src":"177:80:26","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7945,"linearizedBaseContracts":[7945],"name":"SignedMath","nameLocation":"266:10:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":7835,"nodeType":"Block","src":"746:215:26","statements":[{"id":7834,"nodeType":"UncheckedBlock","src":"756:199:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7818,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"894:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7819,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7811,"src":"900:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7820,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"904:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7822,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7827,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7809,"src":"932:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7825,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"916:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7801_$","typeString":"type(library SafeCast)"}},"id":7826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7800,"src":"916:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7823,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:26","typeDescriptions":{}}},"id":7829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7831,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7817,"id":7833,"nodeType":"Return","src":"887:57:26"}]}]},"documentation":{"id":7807,"nodeType":"StructuredDocumentation","src":"283:374:26","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7836,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:26","nodeType":"FunctionDefinition","parameters":{"id":7814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7809,"mutability":"mutable","name":"condition","nameLocation":"684:9:26","nodeType":"VariableDeclaration","scope":7836,"src":"679:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7808,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7811,"mutability":"mutable","name":"a","nameLocation":"702:1:26","nodeType":"VariableDeclaration","scope":7836,"src":"695:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7810,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7813,"mutability":"mutable","name":"b","nameLocation":"712:1:26","nodeType":"VariableDeclaration","scope":7836,"src":"705:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7812,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:26"},"returnParameters":{"id":7817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7836,"src":"738:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7815,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:26"},"scope":7945,"src":"662:299:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7854,"nodeType":"Block","src":"1102:44:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7847,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7839,"src":"1127:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7848,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"1131:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7850,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7839,"src":"1134:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7851,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"1137:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7846,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7836,"src":"1119:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7845,"id":7853,"nodeType":"Return","src":"1112:27:26"}]},"documentation":{"id":7837,"nodeType":"StructuredDocumentation","src":"967:66:26","text":" @dev Returns the largest of two signed numbers."},"id":7855,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:26","nodeType":"FunctionDefinition","parameters":{"id":7842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7839,"mutability":"mutable","name":"a","nameLocation":"1058:1:26","nodeType":"VariableDeclaration","scope":7855,"src":"1051:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7838,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7841,"mutability":"mutable","name":"b","nameLocation":"1068:1:26","nodeType":"VariableDeclaration","scope":7855,"src":"1061:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7840,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:26"},"returnParameters":{"id":7845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7855,"src":"1094:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7843,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:26"},"scope":7945,"src":"1038:108:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7873,"nodeType":"Block","src":"1288:44:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7866,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7858,"src":"1313:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7867,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7860,"src":"1317:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7869,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7858,"src":"1320:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7870,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7860,"src":"1323:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7865,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7836,"src":"1305:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7864,"id":7872,"nodeType":"Return","src":"1298:27:26"}]},"documentation":{"id":7856,"nodeType":"StructuredDocumentation","src":"1152:67:26","text":" @dev Returns the smallest of two signed numbers."},"id":7874,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:26","nodeType":"FunctionDefinition","parameters":{"id":7861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7858,"mutability":"mutable","name":"a","nameLocation":"1244:1:26","nodeType":"VariableDeclaration","scope":7874,"src":"1237:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7857,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7860,"mutability":"mutable","name":"b","nameLocation":"1254:1:26","nodeType":"VariableDeclaration","scope":7874,"src":"1247:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7859,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:26"},"returnParameters":{"id":7864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7874,"src":"1280:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7862,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:26"},"scope":7945,"src":"1224:108:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7917,"nodeType":"Block","src":"1537:162:26","statements":[{"assignments":[7885],"declarations":[{"constant":false,"id":7885,"mutability":"mutable","name":"x","nameLocation":"1606:1:26","nodeType":"VariableDeclaration","scope":7917,"src":"1599:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7884,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7898,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7886,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7877,"src":"1611:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7887,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"1615:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7889,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7890,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7877,"src":"1622:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7891,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"1626:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7893,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7896,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:26"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7899,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"1651:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7904,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"1671:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7902,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:26","typeDescriptions":{}}},"id":7905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7900,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:26","typeDescriptions":{}}},"id":7908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7909,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7877,"src":"1685:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7910,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"1689:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7912,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7914,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7883,"id":7916,"nodeType":"Return","src":"1644:48:26"}]},"documentation":{"id":7875,"nodeType":"StructuredDocumentation","src":"1338:126:26","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7918,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:26","nodeType":"FunctionDefinition","parameters":{"id":7880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7877,"mutability":"mutable","name":"a","nameLocation":"1493:1:26","nodeType":"VariableDeclaration","scope":7918,"src":"1486:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7876,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7879,"mutability":"mutable","name":"b","nameLocation":"1503:1:26","nodeType":"VariableDeclaration","scope":7918,"src":"1496:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7878,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:26"},"returnParameters":{"id":7883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7918,"src":"1529:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7881,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:26"},"scope":7945,"src":"1469:230:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7943,"nodeType":"Block","src":"1843:767:26","statements":[{"id":7942,"nodeType":"UncheckedBlock","src":"1853:751:26","statements":[{"assignments":[7927],"declarations":[{"constant":false,"id":7927,"mutability":"mutable","name":"mask","nameLocation":"2424:4:26","nodeType":"VariableDeclaration","scope":7942,"src":"2417:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7926,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7931,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7928,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7921,"src":"2431:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7934,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7921,"src":"2576:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7935,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7927,"src":"2580:4:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7937,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7938,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7927,"src":"2588:4:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7932,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:26","typeDescriptions":{}}},"id":7940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7925,"id":7941,"nodeType":"Return","src":"2560:33:26"}]}]},"documentation":{"id":7919,"nodeType":"StructuredDocumentation","src":"1705:78:26","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7944,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:26","nodeType":"FunctionDefinition","parameters":{"id":7922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7921,"mutability":"mutable","name":"n","nameLocation":"1808:1:26","nodeType":"VariableDeclaration","scope":7944,"src":"1801:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7920,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:26"},"returnParameters":{"id":7925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7944,"src":"1834:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7923,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:26"},"scope":7945,"src":"1788:822:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7946,"src":"258:2354:26","usedErrors":[],"usedEvents":[]}],"src":"109:2504:26"},"id":26},"contracts/RewardVault.sol":{"ast":{"absolutePath":"contracts/RewardVault.sol","exportedSymbols":{"Context":[1702],"IRewardVault":[9329],"Ownable":[147],"RewardVault":[8117]},"id":8118,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7947,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:27"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7948,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8118,"sourceUnit":148,"src":"58:52:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IRewardVault.sol","file":"./interfaces/IRewardVault.sol","id":7949,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8118,"sourceUnit":9330,"src":"111:39:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7951,"name":"IRewardVault","nameLocations":["355:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":9329,"src":"355:12:27"},"id":7952,"nodeType":"InheritanceSpecifier","src":"355:12:27"},{"baseName":{"id":7953,"name":"Ownable","nameLocations":["369:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"369:7:27"},"id":7954,"nodeType":"InheritanceSpecifier","src":"369:7:27"}],"canonicalName":"RewardVault","contractDependencies":[],"contractKind":"contract","documentation":{"id":7950,"nodeType":"StructuredDocumentation","src":"152:178:27","text":" @title RewardVault\n @notice Manages reward points for consistent MicroSave users\n @dev Awards 5 points per deposit day + 20 bonus points per 7-day streak milestone"},"fullyImplemented":true,"id":8117,"linearizedBaseContracts":[8117,147,1702,9329],"name":"RewardVault","nameLocation":"340:11:27","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":7955,"nodeType":"StructuredDocumentation","src":"383:42:27","text":"@notice Points awarded per deposit day"},"functionSelector":"41d7b1d3","id":7958,"mutability":"constant","name":"POINTS_PER_DEPOSIT","nameLocation":"454:18:27","nodeType":"VariableDeclaration","scope":8117,"src":"430:46:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7956,"name":"uint256","nodeType":"ElementaryTypeName","src":"430:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35","id":7957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"475:1:27","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"visibility":"public"},{"constant":true,"documentation":{"id":7959,"nodeType":"StructuredDocumentation","src":"487:53:27","text":"@notice Bonus points awarded per streak milestone"},"functionSelector":"5e9cb48e","id":7962,"mutability":"constant","name":"STREAK_BONUS_POINTS","nameLocation":"569:19:27","nodeType":"VariableDeclaration","scope":8117,"src":"545:48:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7960,"name":"uint256","nodeType":"ElementaryTypeName","src":"545:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":7961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"591:2:27","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"public"},{"constant":true,"documentation":{"id":7963,"nodeType":"StructuredDocumentation","src":"604:52:27","text":"@notice Streak milestone interval (every 7 days)"},"functionSelector":"7fc842fe","id":7966,"mutability":"constant","name":"STREAK_MILESTONE","nameLocation":"685:16:27","nodeType":"VariableDeclaration","scope":8117,"src":"661:44:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7964,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"37","id":7965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"704:1:27","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"visibility":"public"},{"baseFunctions":[9328],"constant":false,"documentation":{"id":7967,"nodeType":"StructuredDocumentation","src":"712:50:27","text":"@notice Address of the authorized savings pool"},"functionSelector":"6fa0e653","id":7969,"mutability":"immutable","name":"savingsPool","nameLocation":"792:11:27","nodeType":"VariableDeclaration","scope":8117,"src":"767:36:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7968,"name":"address","nodeType":"ElementaryTypeName","src":"767:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[9323],"constant":false,"documentation":{"id":7970,"nodeType":"StructuredDocumentation","src":"810:31:27","text":"@notice User point balances"},"functionSelector":"358b8166","id":7974,"mutability":"mutable","name":"points","nameLocation":"881:6:27","nodeType":"VariableDeclaration","scope":8117,"src":"846:41:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7973,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7971,"name":"address","nodeType":"ElementaryTypeName","src":"854:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"846:27:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7972,"name":"uint256","nodeType":"ElementaryTypeName","src":"865:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"body":{"id":7986,"nodeType":"Block","src":"994:76:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7977,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1008:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1012:6:27","memberName":"sender","nodeType":"MemberAccess","src":"1008:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7979,"name":"savingsPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"1022:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1008:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7984,"nodeType":"IfStatement","src":"1004:48:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7981,"name":"OnlyPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9290,"src":"1042:8:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1042:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7983,"nodeType":"RevertStatement","src":"1035:17:27"}},{"id":7985,"nodeType":"PlaceholderStatement","src":"1062:1:27"}]},"documentation":{"id":7975,"nodeType":"StructuredDocumentation","src":"894:75:27","text":" @notice Modifier to restrict access to savings pool only"},"id":7987,"name":"onlyPool","nameLocation":"983:8:27","nodeType":"ModifierDefinition","parameters":{"id":7976,"nodeType":"ParameterList","parameters":[],"src":"991:2:27"},"src":"974:96:27","virtual":false,"visibility":"internal"},{"body":{"id":8012,"nodeType":"Block","src":"1300:102:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7998,"name":"_savingsPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7990,"src":"1314:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1338:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7999,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:27","typeDescriptions":{}}},"id":8002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1314:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8007,"nodeType":"IfStatement","src":"1310:49:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8004,"name":"OnlyPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9290,"src":"1349:8:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1349:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8006,"nodeType":"RevertStatement","src":"1342:17:27"}},{"expression":{"id":8010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8008,"name":"savingsPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7969,"src":"1369:11:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8009,"name":"_savingsPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7990,"src":"1383:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1369:26:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8011,"nodeType":"ExpressionStatement","src":"1369:26:27"}]},"documentation":{"id":7988,"nodeType":"StructuredDocumentation","src":"1076:153:27","text":" @notice Constructor\n @param _savingsPool Address of the savings pool contract\n @param _owner Address of the contract owner"},"id":8013,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":7995,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7992,"src":"1292:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7996,"kind":"baseConstructorSpecifier","modifierName":{"id":7994,"name":"Ownable","nameLocations":["1284:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1284:7:27"},"nodeType":"ModifierInvocation","src":"1284:15:27"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7990,"mutability":"mutable","name":"_savingsPool","nameLocation":"1254:12:27","nodeType":"VariableDeclaration","scope":8013,"src":"1246:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7989,"name":"address","nodeType":"ElementaryTypeName","src":"1246:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7992,"mutability":"mutable","name":"_owner","nameLocation":"1276:6:27","nodeType":"VariableDeclaration","scope":8013,"src":"1268:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7991,"name":"address","nodeType":"ElementaryTypeName","src":"1268:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1245:38:27"},"returnParameters":{"id":7997,"nodeType":"ParameterList","parameters":[],"src":"1300:0:27"},"scope":8117,"src":"1234:168:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9302],"body":{"id":8064,"nodeType":"Block","src":"1636:493:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8023,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8016,"src":"1650:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1666:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1658:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8024,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:27","typeDescriptions":{}}},"id":8027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1658:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1650:18:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8032,"nodeType":"IfStatement","src":"1646:46:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8029,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9294,"src":"1677:13:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1677:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8031,"nodeType":"RevertStatement","src":"1670:22:27"}},{"assignments":[8034],"declarations":[{"constant":false,"id":8034,"mutability":"mutable","name":"pointsToAward","nameLocation":"1764:13:27","nodeType":"VariableDeclaration","scope":8064,"src":"1756:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8033,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8036,"initialValue":{"id":8035,"name":"POINTS_PER_DEPOSIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"1780:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1756:42:27"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":8039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8037,"name":"streak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8018,"src":"1872:6:27","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1881:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1872:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8040,"name":"streak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8018,"src":"1886:6:27","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":8041,"name":"STREAK_MILESTONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7966,"src":"1895:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1886:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1886:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1872:44:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8051,"nodeType":"IfStatement","src":"1868:111:27","trueBody":{"id":8050,"nodeType":"Block","src":"1918:61:27","statements":[{"expression":{"id":8048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8046,"name":"pointsToAward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8034,"src":"1932:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8047,"name":"STREAK_BONUS_POINTS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7962,"src":"1949:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1932:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8049,"nodeType":"ExpressionStatement","src":"1932:36:27"}]}},{"expression":{"id":8056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8052,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7974,"src":"2027:6:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8054,"indexExpression":{"id":8053,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8016,"src":"2034:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2027:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8055,"name":"pointsToAward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8034,"src":"2043:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2027:29:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8057,"nodeType":"ExpressionStatement","src":"2027:29:27"},{"eventCall":{"arguments":[{"id":8059,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8016,"src":"2094:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8060,"name":"pointsToAward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8034,"src":"2100:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8061,"name":"streak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8018,"src":"2115:6:27","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":8058,"name":"PointsAwarded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9282,"src":"2080:13:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint16_$returns$__$","typeString":"function (address,uint256,uint16)"}},"id":8062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2080:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8063,"nodeType":"EmitStatement","src":"2075:47:27"}]},"documentation":{"id":8014,"nodeType":"StructuredDocumentation","src":"1408:154:27","text":" @notice Called by SavingsPool on each deposit day\n @param user User who made the deposit\n @param streak Current streak days"},"functionSelector":"b0fb5664","id":8065,"implemented":true,"kind":"function","modifiers":[{"id":8021,"kind":"modifierInvocation","modifierName":{"id":8020,"name":"onlyPool","nameLocations":["1627:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":7987,"src":"1627:8:27"},"nodeType":"ModifierInvocation","src":"1627:8:27"}],"name":"onDepositDay","nameLocation":"1576:12:27","nodeType":"FunctionDefinition","parameters":{"id":8019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8016,"mutability":"mutable","name":"user","nameLocation":"1597:4:27","nodeType":"VariableDeclaration","scope":8065,"src":"1589:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8015,"name":"address","nodeType":"ElementaryTypeName","src":"1589:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8018,"mutability":"mutable","name":"streak","nameLocation":"1610:6:27","nodeType":"VariableDeclaration","scope":8065,"src":"1603:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8017,"name":"uint16","nodeType":"ElementaryTypeName","src":"1603:6:27","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1588:29:27"},"returnParameters":{"id":8022,"nodeType":"ParameterList","parameters":[],"src":"1636:0:27"},"scope":8117,"src":"1567:562:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[9308],"body":{"id":8102,"nodeType":"Block","src":"2297:314:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8071,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8068,"src":"2311:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2321:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2311:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8077,"nodeType":"IfStatement","src":"2307:39:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8074,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9294,"src":"2331:13:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2331:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8076,"nodeType":"RevertStatement","src":"2324:22:27"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8078,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7974,"src":"2360:6:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8081,"indexExpression":{"expression":{"id":8079,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2367:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2371:6:27","memberName":"sender","nodeType":"MemberAccess","src":"2367:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2360:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8082,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8068,"src":"2381:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2360:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8087,"nodeType":"IfStatement","src":"2356:60:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8084,"name":"InsufficientPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9292,"src":"2396:18:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2396:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8086,"nodeType":"RevertStatement","src":"2389:27:27"}},{"id":8095,"nodeType":"UncheckedBlock","src":"2485:63:27","statements":[{"expression":{"id":8093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8088,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7974,"src":"2509:6:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8091,"indexExpression":{"expression":{"id":8089,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2516:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2520:6:27","memberName":"sender","nodeType":"MemberAccess","src":"2516:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2509:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":8092,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8068,"src":"2531:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2509:28:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8094,"nodeType":"ExpressionStatement","src":"2509:28:27"}]},{"eventCall":{"arguments":[{"expression":{"id":8097,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2585:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2589:6:27","memberName":"sender","nodeType":"MemberAccess","src":"2585:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8099,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8068,"src":"2597:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8096,"name":"PointsClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9288,"src":"2571:13:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2571:33:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8101,"nodeType":"EmitStatement","src":"2566:38:27"}]},"documentation":{"id":8066,"nodeType":"StructuredDocumentation","src":"2135:111:27","text":" @notice Claim accumulated points (burns them)\n @param amount Amount of points to claim"},"functionSelector":"3ac795de","id":8103,"implemented":true,"kind":"function","modifiers":[],"name":"claimPoints","nameLocation":"2260:11:27","nodeType":"FunctionDefinition","parameters":{"id":8069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8068,"mutability":"mutable","name":"amount","nameLocation":"2280:6:27","nodeType":"VariableDeclaration","scope":8103,"src":"2272:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8067,"name":"uint256","nodeType":"ElementaryTypeName","src":"2272:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2271:16:27"},"returnParameters":{"id":8070,"nodeType":"ParameterList","parameters":[],"src":"2297:0:27"},"scope":8117,"src":"2251:360:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[9316],"body":{"id":8115,"nodeType":"Block","src":"2815:36:27","statements":[{"expression":{"baseExpression":{"id":8111,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7974,"src":"2832:6:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8113,"indexExpression":{"id":8112,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8106,"src":"2839:4:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2832:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8110,"id":8114,"nodeType":"Return","src":"2825:19:27"}]},"documentation":{"id":8104,"nodeType":"StructuredDocumentation","src":"2617:128:27","text":" @notice Get user's current point balance\n @param user User address\n @return Current point balance"},"functionSelector":"ee204abb","id":8116,"implemented":true,"kind":"function","modifiers":[],"name":"getPoints","nameLocation":"2759:9:27","nodeType":"FunctionDefinition","parameters":{"id":8107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8106,"mutability":"mutable","name":"user","nameLocation":"2777:4:27","nodeType":"VariableDeclaration","scope":8116,"src":"2769:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8105,"name":"address","nodeType":"ElementaryTypeName","src":"2769:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2768:14:27"},"returnParameters":{"id":8110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8116,"src":"2806:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8108,"name":"uint256","nodeType":"ElementaryTypeName","src":"2806:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2805:9:27"},"scope":8117,"src":"2750:101:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8118,"src":"331:2522:27","usedErrors":[13,18,9290,9292,9294],"usedEvents":[24,9282,9288]}],"src":"32:2822:27"},"id":27},"contracts/SavingsPool.sol":{"ast":{"absolutePath":"contracts/SavingsPool.sol","exportedSymbols":{"Context":[1702],"IERC1363":[229],"IERC20":[992],"IERC20Permit":[1208],"IRewardVault":[9329],"ISavingsPool":[9460],"IScoreRegistry":[9548],"Ownable":[147],"Pausable":[1930],"ReentrancyGuard":[1999],"SafeERC20":[1672],"SavingsPool":[8848]},"id":8849,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8119,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:28"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":8120,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8849,"sourceUnit":993,"src":"58:56:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","id":8121,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8849,"sourceUnit":1209,"src":"115:73:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":8122,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8849,"sourceUnit":1673,"src":"189:65:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8123,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8849,"sourceUnit":148,"src":"255:52:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":8124,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8849,"sourceUnit":2000,"src":"308:59:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"@openzeppelin/contracts/utils/Pausable.sol","id":8125,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8849,"sourceUnit":1931,"src":"368:52:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/ISavingsPool.sol","file":"./interfaces/ISavingsPool.sol","id":8126,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8849,"sourceUnit":9461,"src":"421:39:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IScoreRegistry.sol","file":"./interfaces/IScoreRegistry.sol","id":8127,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8849,"sourceUnit":9549,"src":"461:41:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IRewardVault.sol","file":"./interfaces/IRewardVault.sol","id":8128,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8849,"sourceUnit":9330,"src":"503:39:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8130,"name":"ISavingsPool","nameLocations":["759:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":9460,"src":"759:12:28"},"id":8131,"nodeType":"InheritanceSpecifier","src":"759:12:28"},{"baseName":{"id":8132,"name":"Ownable","nameLocations":["773:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"773:7:28"},"id":8133,"nodeType":"InheritanceSpecifier","src":"773:7:28"},{"baseName":{"id":8134,"name":"ReentrancyGuard","nameLocations":["782:15:28"],"nodeType":"IdentifierPath","referencedDeclaration":1999,"src":"782:15:28"},"id":8135,"nodeType":"InheritanceSpecifier","src":"782:15:28"},{"baseName":{"id":8136,"name":"Pausable","nameLocations":["799:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":1930,"src":"799:8:28"},"id":8137,"nodeType":"InheritanceSpecifier","src":"799:8:28"}],"canonicalName":"SavingsPool","contractDependencies":[],"contractKind":"contract","documentation":{"id":8129,"nodeType":"StructuredDocumentation","src":"544:190:28","text":" @title SavingsPool\n @notice Core MicroSave savings pool for stablecoin deposits and withdrawals\n @dev Integrates with ScoreRegistry for SCS tracking and RewardVault for points"},"fullyImplemented":true,"id":8848,"linearizedBaseContracts":[8848,1930,1999,147,1702,9460],"name":"SavingsPool","nameLocation":"744:11:28","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8141,"libraryName":{"id":8138,"name":"SafeERC20","nameLocations":["820:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":1672,"src":"820:9:28"},"nodeType":"UsingForDirective","src":"814:27:28","typeName":{"id":8140,"nodeType":"UserDefinedTypeName","pathNode":{"id":8139,"name":"IERC20","nameLocations":["834:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"834:6:28"},"referencedDeclaration":992,"src":"834:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}}},{"constant":true,"documentation":{"id":8142,"nodeType":"StructuredDocumentation","src":"847:54:28","text":"@notice Maximum fee in basis points (1% = 100 bps)"},"functionSelector":"d55be8c6","id":8145,"mutability":"constant","name":"MAX_FEE_BPS","nameLocation":"929:11:28","nodeType":"VariableDeclaration","scope":8848,"src":"906:40:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8143,"name":"uint16","nodeType":"ElementaryTypeName","src":"906:6:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"313030","id":8144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"943:3:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"public"},{"baseFunctions":[9437],"constant":false,"documentation":{"id":8146,"nodeType":"StructuredDocumentation","src":"953:62:28","text":"@notice The stablecoin token used for deposits/withdrawals"},"functionSelector":"54d9f653","id":8149,"mutability":"immutable","name":"STABLE","nameLocation":"1044:6:28","nodeType":"VariableDeclaration","scope":8848,"src":"1020:30:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":8148,"nodeType":"UserDefinedTypeName","pathNode":{"id":8147,"name":"IERC20","nameLocations":["1020:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"1020:6:28"},"referencedDeclaration":992,"src":"1020:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"public"},{"baseFunctions":[9443],"constant":false,"documentation":{"id":8150,"nodeType":"StructuredDocumentation","src":"1057:56:28","text":"@notice Score registry contract for SCS calculations"},"functionSelector":"3eb8104a","id":8153,"mutability":"immutable","name":"scoreRegistry","nameLocation":"1150:13:28","nodeType":"VariableDeclaration","scope":8848,"src":"1118:45:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IScoreRegistry_$9548","typeString":"contract IScoreRegistry"},"typeName":{"id":8152,"nodeType":"UserDefinedTypeName","pathNode":{"id":8151,"name":"IScoreRegistry","nameLocations":["1118:14:28"],"nodeType":"IdentifierPath","referencedDeclaration":9548,"src":"1118:14:28"},"referencedDeclaration":9548,"src":"1118:14:28","typeDescriptions":{"typeIdentifier":"t_contract$_IScoreRegistry_$9548","typeString":"contract IScoreRegistry"}},"visibility":"public"},{"baseFunctions":[9449],"constant":false,"documentation":{"id":8154,"nodeType":"StructuredDocumentation","src":"1170:66:28","text":"@notice Reward vault contract for points (can be zero address)"},"functionSelector":"3a2c6777","id":8157,"mutability":"immutable","name":"rewardVault","nameLocation":"1271:11:28","nodeType":"VariableDeclaration","scope":8848,"src":"1241:41:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardVault_$9329","typeString":"contract IRewardVault"},"typeName":{"id":8156,"nodeType":"UserDefinedTypeName","pathNode":{"id":8155,"name":"IRewardVault","nameLocations":["1241:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":9329,"src":"1241:12:28"},"referencedDeclaration":9329,"src":"1241:12:28","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardVault_$9329","typeString":"contract IRewardVault"}},"visibility":"public"},{"baseFunctions":[9454],"constant":false,"documentation":{"id":8158,"nodeType":"StructuredDocumentation","src":"1289:59:28","text":"@notice Treasury address for fees (can be zero address)"},"functionSelector":"61d027b3","id":8160,"mutability":"mutable","name":"treasury","nameLocation":"1368:8:28","nodeType":"VariableDeclaration","scope":8848,"src":"1353:23:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8159,"name":"address","nodeType":"ElementaryTypeName","src":"1353:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[9459],"constant":false,"documentation":{"id":8161,"nodeType":"StructuredDocumentation","src":"1383:47:28","text":"@notice Deposit fee in basis points (0-100)"},"functionSelector":"ab879827","id":8163,"mutability":"mutable","name":"depositFeeBps","nameLocation":"1449:13:28","nodeType":"VariableDeclaration","scope":8848,"src":"1435:27:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8162,"name":"uint16","nodeType":"ElementaryTypeName","src":"1435:6:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"public"},{"baseFunctions":[9426],"constant":false,"documentation":{"id":8164,"nodeType":"StructuredDocumentation","src":"1469:37:28","text":"@notice User balances in the pool"},"functionSelector":"27e235e3","id":8168,"mutability":"mutable","name":"balances","nameLocation":"1546:8:28","nodeType":"VariableDeclaration","scope":8848,"src":"1511:43:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8167,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8165,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1511:27:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1530:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"baseFunctions":[9431],"constant":false,"documentation":{"id":8169,"nodeType":"StructuredDocumentation","src":"1561:38:28","text":"@notice Total deposits in the pool"},"functionSelector":"7d882097","id":8171,"mutability":"mutable","name":"totalDeposits","nameLocation":"1619:13:28","nodeType":"VariableDeclaration","scope":8848,"src":"1604:28:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8170,"name":"uint256","nodeType":"ElementaryTypeName","src":"1604:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":8172,"nodeType":"StructuredDocumentation","src":"1639:69:28","text":"@notice User deposit days (day indices: block.timestamp / 1 days)"},"id":8177,"mutability":"mutable","name":"_depositDays","nameLocation":"1750:12:28","nodeType":"VariableDeclaration","scope":8848,"src":"1713:49:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint40_$dyn_storage_$","typeString":"mapping(address => uint40[])"},"typeName":{"id":8176,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8173,"name":"address","nodeType":"ElementaryTypeName","src":"1721:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1713:28:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint40_$dyn_storage_$","typeString":"mapping(address => uint40[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":8174,"name":"uint40","nodeType":"ElementaryTypeName","src":"1732:6:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":8175,"nodeType":"ArrayTypeName","src":"1732:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_storage_ptr","typeString":"uint40[]"}}},"visibility":"private"},{"constant":false,"documentation":{"id":8178,"nodeType":"StructuredDocumentation","src":"1769:66:28","text":"@notice Last scored day for each user (for edge case handling)"},"functionSelector":"d68b29fe","id":8182,"mutability":"mutable","name":"lastScoredDay","nameLocation":"1874:13:28","nodeType":"VariableDeclaration","scope":8848,"src":"1840:47:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint40_$","typeString":"mapping(address => uint40)"},"typeName":{"id":8181,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8179,"name":"address","nodeType":"ElementaryTypeName","src":"1848:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1840:26:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint40_$","typeString":"mapping(address => uint40)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8180,"name":"uint40","nodeType":"ElementaryTypeName","src":"1859:6:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}},"visibility":"public"},{"body":{"id":8254,"nodeType":"Block","src":"2508:413:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8201,"name":"_stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8185,"src":"2522:11:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2545:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2537:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8202,"name":"address","nodeType":"ElementaryTypeName","src":"2537:7:28","typeDescriptions":{}}},"id":8205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2537:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2522:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8210,"nodeType":"IfStatement","src":"2518:52:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8207,"name":"InvalidToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"2556:12:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2556:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8209,"nodeType":"RevertStatement","src":"2549:21:28"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8211,"name":"_scoreRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8187,"src":"2584:14:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2610:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2602:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8212,"name":"address","nodeType":"ElementaryTypeName","src":"2602:7:28","typeDescriptions":{}}},"id":8215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2602:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2584:28:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8220,"nodeType":"IfStatement","src":"2580:54:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8217,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9379,"src":"2621:11:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2621:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8219,"nodeType":"RevertStatement","src":"2614:20:28"}},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":8223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8221,"name":"_depositFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"2648:14:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8222,"name":"MAX_FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8145,"src":"2665:11:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"2648:28:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8227,"nodeType":"IfStatement","src":"2644:55:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8224,"name":"ExcessiveFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9381,"src":"2685:12:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2685:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8226,"nodeType":"RevertStatement","src":"2678:21:28"}},{"expression":{"id":8232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8228,"name":"STABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8149,"src":"2710:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8230,"name":"_stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8185,"src":"2726:11:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8229,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"2719:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$992_$","typeString":"type(contract IERC20)"}},"id":8231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2719:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"src":"2710:28:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":8233,"nodeType":"ExpressionStatement","src":"2710:28:28"},{"expression":{"id":8238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8234,"name":"scoreRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"2748:13:28","typeDescriptions":{"typeIdentifier":"t_contract$_IScoreRegistry_$9548","typeString":"contract IScoreRegistry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8236,"name":"_scoreRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8187,"src":"2779:14:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8235,"name":"IScoreRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9548,"src":"2764:14:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IScoreRegistry_$9548_$","typeString":"type(contract IScoreRegistry)"}},"id":8237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2764:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IScoreRegistry_$9548","typeString":"contract IScoreRegistry"}},"src":"2748:46:28","typeDescriptions":{"typeIdentifier":"t_contract$_IScoreRegistry_$9548","typeString":"contract IScoreRegistry"}},"id":8239,"nodeType":"ExpressionStatement","src":"2748:46:28"},{"expression":{"id":8244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8240,"name":"rewardVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8157,"src":"2804:11:28","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardVault_$9329","typeString":"contract IRewardVault"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8242,"name":"_rewardVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8189,"src":"2831:12:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8241,"name":"IRewardVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9329,"src":"2818:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewardVault_$9329_$","typeString":"type(contract IRewardVault)"}},"id":8243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2818:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRewardVault_$9329","typeString":"contract IRewardVault"}},"src":"2804:40:28","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardVault_$9329","typeString":"contract IRewardVault"}},"id":8245,"nodeType":"ExpressionStatement","src":"2804:40:28"},{"expression":{"id":8248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8246,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8160,"src":"2854:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8247,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8191,"src":"2865:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2854:20:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8249,"nodeType":"ExpressionStatement","src":"2854:20:28"},{"expression":{"id":8252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8250,"name":"depositFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8163,"src":"2884:13:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8251,"name":"_depositFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"2900:14:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"2884:30:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":8253,"nodeType":"ExpressionStatement","src":"2884:30:28"}]},"documentation":{"id":8183,"nodeType":"StructuredDocumentation","src":"1894:402:28","text":" @notice Constructor\n @param _stablecoin Address of the stablecoin token\n @param _scoreRegistry Address of the score registry\n @param _rewardVault Address of the reward vault (can be zero)\n @param _treasury Address of the treasury (can be zero)\n @param _depositFeeBps Initial deposit fee in basis points\n @param _owner Address of the contract owner"},"id":8255,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8198,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8195,"src":"2500:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8199,"kind":"baseConstructorSpecifier","modifierName":{"id":8197,"name":"Ownable","nameLocations":["2492:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2492:7:28"},"nodeType":"ModifierInvocation","src":"2492:15:28"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8185,"mutability":"mutable","name":"_stablecoin","nameLocation":"2330:11:28","nodeType":"VariableDeclaration","scope":8255,"src":"2322:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8184,"name":"address","nodeType":"ElementaryTypeName","src":"2322:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8187,"mutability":"mutable","name":"_scoreRegistry","nameLocation":"2359:14:28","nodeType":"VariableDeclaration","scope":8255,"src":"2351:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8186,"name":"address","nodeType":"ElementaryTypeName","src":"2351:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8189,"mutability":"mutable","name":"_rewardVault","nameLocation":"2391:12:28","nodeType":"VariableDeclaration","scope":8255,"src":"2383:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8188,"name":"address","nodeType":"ElementaryTypeName","src":"2383:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8191,"mutability":"mutable","name":"_treasury","nameLocation":"2421:9:28","nodeType":"VariableDeclaration","scope":8255,"src":"2413:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8190,"name":"address","nodeType":"ElementaryTypeName","src":"2413:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8193,"mutability":"mutable","name":"_depositFeeBps","nameLocation":"2447:14:28","nodeType":"VariableDeclaration","scope":8255,"src":"2440:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8192,"name":"uint16","nodeType":"ElementaryTypeName","src":"2440:6:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":8195,"mutability":"mutable","name":"_owner","nameLocation":"2479:6:28","nodeType":"VariableDeclaration","scope":8255,"src":"2471:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8194,"name":"address","nodeType":"ElementaryTypeName","src":"2471:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2312:179:28"},"returnParameters":{"id":8200,"nodeType":"ParameterList","parameters":[],"src":"2508:0:28"},"scope":8848,"src":"2301:620:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9387],"body":{"id":8427,"nodeType":"Block","src":"3107:1563:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8265,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8258,"src":"3121:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3131:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3121:11:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8271,"nodeType":"IfStatement","src":"3117:44:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8268,"name":"InsufficientAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9371,"src":"3141:18:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3141:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8270,"nodeType":"RevertStatement","src":"3134:27:28"}},{"assignments":[8273],"declarations":[{"constant":false,"id":8273,"mutability":"mutable","name":"user","nameLocation":"3180:4:28","nodeType":"VariableDeclaration","scope":8427,"src":"3172:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8272,"name":"address","nodeType":"ElementaryTypeName","src":"3172:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8276,"initialValue":{"expression":{"id":8274,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3187:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3191:6:28","memberName":"sender","nodeType":"MemberAccess","src":"3187:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3172:25:28"},{"assignments":[8278],"declarations":[{"constant":false,"id":8278,"mutability":"mutable","name":"today","nameLocation":"3214:5:28","nodeType":"VariableDeclaration","scope":8427,"src":"3207:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":8277,"name":"uint40","nodeType":"ElementaryTypeName","src":"3207:6:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"id":8286,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8281,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3229:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3235:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"3229:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31","id":8283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3247:6:28","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"3229:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3222:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":8279,"name":"uint40","nodeType":"ElementaryTypeName","src":"3222:6:28","typeDescriptions":{}}},"id":8285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3222:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"VariableDeclarationStatement","src":"3207:47:28"},{"expression":{"arguments":[{"id":8290,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8273,"src":"3326:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8293,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3340:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_SavingsPool_$8848","typeString":"contract SavingsPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SavingsPool_$8848","typeString":"contract SavingsPool"}],"id":8292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3332:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8291,"name":"address","nodeType":"ElementaryTypeName","src":"3332:7:28","typeDescriptions":{}}},"id":8294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3332:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8295,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8258,"src":"3347:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8287,"name":"STABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8149,"src":"3302:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":8289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3309:16:28","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1280,"src":"3302:23:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$992_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":8296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3302:52:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8297,"nodeType":"ExpressionStatement","src":"3302:52:28"},{"assignments":[8299],"declarations":[{"constant":false,"id":8299,"mutability":"mutable","name":"fee","nameLocation":"3413:3:28","nodeType":"VariableDeclaration","scope":8427,"src":"3405:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8298,"name":"uint256","nodeType":"ElementaryTypeName","src":"3405:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8301,"initialValue":{"hexValue":"30","id":8300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3419:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3405:15:28"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":8304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8302,"name":"depositFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8163,"src":"3434:13:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3450:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3434:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8305,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8160,"src":"3455:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3475:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3467:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8306,"name":"address","nodeType":"ElementaryTypeName","src":"3467:7:28","typeDescriptions":{}}},"id":8309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3455:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3434:43:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8334,"nodeType":"IfStatement","src":"3430:205:28","trueBody":{"id":8333,"nodeType":"Block","src":"3479:156:28","statements":[{"expression":{"id":8319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8312,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"3493:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8313,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8258,"src":"3500:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8314,"name":"depositFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8163,"src":"3509:13:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"3500:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3499:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":8317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3526:5:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3499:32:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3493:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8320,"nodeType":"ExpressionStatement","src":"3493:38:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8321,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"3549:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3555:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3549:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8332,"nodeType":"IfStatement","src":"3545:80:28","trueBody":{"id":8331,"nodeType":"Block","src":"3558:67:28","statements":[{"expression":{"arguments":[{"id":8327,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8160,"src":"3596:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8328,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"3606:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8324,"name":"STABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8149,"src":"3576:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":8326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3583:12:28","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1253,"src":"3576:19:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$992_$","typeString":"function (contract IERC20,address,uint256)"}},"id":8329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3576:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8330,"nodeType":"ExpressionStatement","src":"3576:34:28"}]}}]}},{"assignments":[8336],"declarations":[{"constant":false,"id":8336,"mutability":"mutable","name":"netAmount","nameLocation":"3653:9:28","nodeType":"VariableDeclaration","scope":8427,"src":"3645:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8335,"name":"uint256","nodeType":"ElementaryTypeName","src":"3645:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8340,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8337,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8258,"src":"3665:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8338,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"3674:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3665:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3645:32:28"},{"expression":{"id":8345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8341,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8168,"src":"3715:8:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8343,"indexExpression":{"id":8342,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8273,"src":"3724:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3715:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8344,"name":"netAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8336,"src":"3733:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3715:27:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8346,"nodeType":"ExpressionStatement","src":"3715:27:28"},{"expression":{"id":8349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8347,"name":"totalDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"3752:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8348,"name":"netAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8336,"src":"3769:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3752:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8350,"nodeType":"ExpressionStatement","src":"3752:26:28"},{"assignments":[8352],"declarations":[{"constant":false,"id":8352,"mutability":"mutable","name":"isNewDay","nameLocation":"3853:8:28","nodeType":"VariableDeclaration","scope":8427,"src":"3848:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8351,"name":"bool","nodeType":"ElementaryTypeName","src":"3848:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":8357,"initialValue":{"arguments":[{"id":8354,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8273,"src":"3882:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8355,"name":"today","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8278,"src":"3888:5:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":8353,"name":"_recordDepositDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8736,"src":"3864:17:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint40_$returns$_t_bool_$","typeString":"function (address,uint40) returns (bool)"}},"id":8356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3864:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3848:46:28"},{"assignments":[8359],"declarations":[{"constant":false,"id":8359,"mutability":"mutable","name":"newScore","nameLocation":"3962:8:28","nodeType":"VariableDeclaration","scope":8427,"src":"3955:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8358,"name":"uint16","nodeType":"ElementaryTypeName","src":"3955:6:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":8361,"initialValue":{"hexValue":"30","id":8360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3973:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3955:19:28"},{"assignments":[8363],"declarations":[{"constant":false,"id":8363,"mutability":"mutable","name":"streakDays","nameLocation":"3991:10:28","nodeType":"VariableDeclaration","scope":8427,"src":"3984:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8362,"name":"uint16","nodeType":"ElementaryTypeName","src":"3984:6:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":8365,"initialValue":{"hexValue":"30","id":8364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4004:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3984:21:28"},{"assignments":[8367],"declarations":[{"constant":false,"id":8367,"mutability":"mutable","name":"freq30","nameLocation":"4021:6:28","nodeType":"VariableDeclaration","scope":8427,"src":"4015:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8366,"name":"uint8","nodeType":"ElementaryTypeName","src":"4015:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":8369,"initialValue":{"hexValue":"30","id":8368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4030:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4015:16:28"},{"condition":{"id":8370,"name":"isNewDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8352,"src":"4046:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8419,"nodeType":"IfStatement","src":"4042:565:28","trueBody":{"id":8418,"nodeType":"Block","src":"4056:551:28","statements":[{"expression":{"id":8382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":8371,"name":"newScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8359,"src":"4071:8:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":8372,"name":"streakDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8363,"src":"4081:10:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":8373,"name":"freq30","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8367,"src":"4093:6:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":8374,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4070:30:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_uint16_$_t_uint8_$","typeString":"tuple(uint16,uint16,uint8)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8377,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8273,"src":"4129:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":8378,"name":"_depositDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8177,"src":"4135:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint40_$dyn_storage_$","typeString":"mapping(address => uint40[] storage ref)"}},"id":8380,"indexExpression":{"id":8379,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8273,"src":"4148:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4135:18:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_storage","typeString":"uint40[] storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint40_$dyn_storage","typeString":"uint40[] storage ref"}],"expression":{"id":8375,"name":"scoreRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"4103:13:28","typeDescriptions":{"typeIdentifier":"t_contract$_IScoreRegistry_$9548","typeString":"contract IScoreRegistry"}},"id":8376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4117:11:28","memberName":"updateScore","nodeType":"MemberAccess","referencedDeclaration":9492,"src":"4103:25:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_array$_t_uint40_$dyn_memory_ptr_$returns$_t_uint16_$_t_uint16_$_t_uint8_$","typeString":"function (address,uint40[] memory) external returns (uint16,uint16,uint8)"}},"id":8381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:51:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_uint16_$_t_uint8_$","typeString":"tuple(uint16,uint16,uint8)"}},"src":"4070:84:28","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8383,"nodeType":"ExpressionStatement","src":"4070:84:28"},{"expression":{"id":8388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8384,"name":"lastScoredDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8182,"src":"4168:13:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint40_$","typeString":"mapping(address => uint40)"}},"id":8386,"indexExpression":{"id":8385,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8273,"src":"4182:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4168:19:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8387,"name":"today","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8278,"src":"4190:5:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"4168:27:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":8389,"nodeType":"ExpressionStatement","src":"4168:27:28"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8392,"name":"rewardVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8157,"src":"4273:11:28","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardVault_$9329","typeString":"contract IRewardVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IRewardVault_$9329","typeString":"contract IRewardVault"}],"id":8391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4265:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8390,"name":"address","nodeType":"ElementaryTypeName","src":"4265:7:28","typeDescriptions":{}}},"id":8393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4265:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4297:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4289:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8394,"name":"address","nodeType":"ElementaryTypeName","src":"4289:7:28","typeDescriptions":{}}},"id":8397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4289:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4265:34:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8410,"nodeType":"IfStatement","src":"4261:268:28","trueBody":{"id":8409,"nodeType":"Block","src":"4301:228:28","statements":[{"clauses":[{"block":{"id":8404,"nodeType":"Block","src":"4366:70:28","statements":[]},"errorName":"","id":8405,"nodeType":"TryCatchClause","src":"4366:70:28"},{"block":{"id":8406,"nodeType":"Block","src":"4443:72:28","statements":[]},"errorName":"","id":8407,"nodeType":"TryCatchClause","src":"4437:78:28"}],"externalCall":{"arguments":[{"id":8401,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8273,"src":"4348:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8402,"name":"streakDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8363,"src":"4354:10:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":8399,"name":"rewardVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8157,"src":"4323:11:28","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardVault_$9329","typeString":"contract IRewardVault"}},"id":8400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4335:12:28","memberName":"onDepositDay","nodeType":"MemberAccess","referencedDeclaration":9302,"src":"4323:24:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint16_$returns$__$","typeString":"function (address,uint16) external"}},"id":8403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4323:42:28","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8408,"nodeType":"TryStatement","src":"4319:196:28"}]}},{"eventCall":{"arguments":[{"id":8412,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8273,"src":"4561:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8413,"name":"newScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8359,"src":"4567:8:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":8414,"name":"streakDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8363,"src":"4577:10:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":8415,"name":"freq30","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8367,"src":"4589:6:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":8411,"name":"ScoreUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9361,"src":"4548:12:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint16_$_t_uint16_$_t_uint8_$returns$__$","typeString":"function (address,uint16,uint16,uint8)"}},"id":8416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4548:48:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8417,"nodeType":"EmitStatement","src":"4543:53:28"}]}},{"eventCall":{"arguments":[{"id":8421,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8273,"src":"4632:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8422,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8258,"src":"4638:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8423,"name":"netAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8336,"src":"4646:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8424,"name":"today","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8278,"src":"4657:5:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":8420,"name":"Deposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9345,"src":"4622:9:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint40_$returns$__$","typeString":"function (address,uint256,uint256,uint40)"}},"id":8425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4622:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8426,"nodeType":"EmitStatement","src":"4617:46:28"}]},"documentation":{"id":8256,"nodeType":"StructuredDocumentation","src":"2927:106:28","text":" @notice Deposit stablecoin into the savings pool\n @param amount Amount to deposit"},"functionSelector":"b6b55f25","id":8428,"implemented":true,"kind":"function","modifiers":[{"id":8261,"kind":"modifierInvocation","modifierName":{"id":8260,"name":"nonReentrant","nameLocations":["3080:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":1963,"src":"3080:12:28"},"nodeType":"ModifierInvocation","src":"3080:12:28"},{"id":8263,"kind":"modifierInvocation","modifierName":{"id":8262,"name":"whenNotPaused","nameLocations":["3093:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":1855,"src":"3093:13:28"},"nodeType":"ModifierInvocation","src":"3093:13:28"}],"name":"deposit","nameLocation":"3047:7:28","nodeType":"FunctionDefinition","parameters":{"id":8259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8258,"mutability":"mutable","name":"amount","nameLocation":"3063:6:28","nodeType":"VariableDeclaration","scope":8428,"src":"3055:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8257,"name":"uint256","nodeType":"ElementaryTypeName","src":"3055:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3054:16:28"},"returnParameters":{"id":8264,"nodeType":"ParameterList","parameters":[],"src":"3107:0:28"},"scope":8848,"src":"3038:1632:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[9401],"body":{"id":8486,"nodeType":"Block","src":"5111:492:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8446,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8431,"src":"5125:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5135:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5125:11:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8452,"nodeType":"IfStatement","src":"5121:44:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8449,"name":"InsufficientAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9371,"src":"5145:18:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5145:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8451,"nodeType":"RevertStatement","src":"5138:27:28"}},{"clauses":[{"block":{"id":8478,"nodeType":"Block","src":"5426:115:28","statements":[{"expression":{"arguments":[{"expression":{"id":8473,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5511:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5515:6:28","memberName":"sender","nodeType":"MemberAccess","src":"5511:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8475,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8431,"src":"5523:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8472,"name":"_executeDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8635,"src":"5495:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5495:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8477,"nodeType":"ExpressionStatement","src":"5495:35:28"}]},"errorName":"","id":8479,"nodeType":"TryCatchClause","src":"5426:115:28"},{"block":{"id":8483,"nodeType":"Block","src":"5548:49:28","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8480,"name":"NoPermitSupport","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9377,"src":"5569:15:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5569:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8482,"nodeType":"RevertStatement","src":"5562:24:28"}]},"errorName":"","id":8484,"nodeType":"TryCatchClause","src":"5542:55:28"}],"externalCall":{"arguments":[{"expression":{"id":8460,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5291:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5295:6:28","memberName":"sender","nodeType":"MemberAccess","src":"5291:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8464,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5323:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_SavingsPool_$8848","typeString":"contract SavingsPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SavingsPool_$8848","typeString":"contract SavingsPool"}],"id":8463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5315:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8462,"name":"address","nodeType":"ElementaryTypeName","src":"5315:7:28","typeDescriptions":{}}},"id":8465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5315:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8466,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8431,"src":"5342:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8467,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8433,"src":"5362:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8468,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8435,"src":"5384:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":8469,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8437,"src":"5399:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8470,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"5414:1:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"arguments":[{"id":8456,"name":"STABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8149,"src":"5262:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}],"id":8455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5254:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8454,"name":"address","nodeType":"ElementaryTypeName","src":"5254:7:28","typeDescriptions":{}}},"id":8457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5254:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8453,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"5241:12:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Permit_$1208_$","typeString":"type(contract IERC20Permit)"}},"id":8458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5241:29:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$1208","typeString":"contract IERC20Permit"}},"id":8459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5271:6:28","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":1193,"src":"5241:36:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":8471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5241:184:28","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8485,"nodeType":"TryStatement","src":"5237:360:28"}]},"documentation":{"id":8429,"nodeType":"StructuredDocumentation","src":"4676:260:28","text":" @notice Deposit with EIP-2612 permit (gasless approval)\n @param amount Amount to deposit\n @param deadline Permit deadline\n @param v Signature parameter\n @param r Signature parameter\n @param s Signature parameter"},"functionSelector":"ce84daad","id":8487,"implemented":true,"kind":"function","modifiers":[{"id":8442,"kind":"modifierInvocation","modifierName":{"id":8441,"name":"nonReentrant","nameLocations":["5084:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":1963,"src":"5084:12:28"},"nodeType":"ModifierInvocation","src":"5084:12:28"},{"id":8444,"kind":"modifierInvocation","modifierName":{"id":8443,"name":"whenNotPaused","nameLocations":["5097:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":1855,"src":"5097:13:28"},"nodeType":"ModifierInvocation","src":"5097:13:28"}],"name":"permitDeposit","nameLocation":"4950:13:28","nodeType":"FunctionDefinition","parameters":{"id":8440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8431,"mutability":"mutable","name":"amount","nameLocation":"4981:6:28","nodeType":"VariableDeclaration","scope":8487,"src":"4973:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8430,"name":"uint256","nodeType":"ElementaryTypeName","src":"4973:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8433,"mutability":"mutable","name":"deadline","nameLocation":"5005:8:28","nodeType":"VariableDeclaration","scope":8487,"src":"4997:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8432,"name":"uint256","nodeType":"ElementaryTypeName","src":"4997:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8435,"mutability":"mutable","name":"v","nameLocation":"5029:1:28","nodeType":"VariableDeclaration","scope":8487,"src":"5023:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8434,"name":"uint8","nodeType":"ElementaryTypeName","src":"5023:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8437,"mutability":"mutable","name":"r","nameLocation":"5048:1:28","nodeType":"VariableDeclaration","scope":8487,"src":"5040:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5040:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8439,"mutability":"mutable","name":"s","nameLocation":"5067:1:28","nodeType":"VariableDeclaration","scope":8487,"src":"5059:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5059:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4963:111:28"},"returnParameters":{"id":8445,"nodeType":"ParameterList","parameters":[],"src":"5111:0:28"},"scope":8848,"src":"4941:662:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8634,"nodeType":"Block","src":"5817:1423:28","statements":[{"assignments":[8496],"declarations":[{"constant":false,"id":8496,"mutability":"mutable","name":"today","nameLocation":"5834:5:28","nodeType":"VariableDeclaration","scope":8634,"src":"5827:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":8495,"name":"uint40","nodeType":"ElementaryTypeName","src":"5827:6:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"id":8504,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8499,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5849:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5855:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"5849:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31","id":8501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5867:6:28","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"5849:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5842:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":8497,"name":"uint40","nodeType":"ElementaryTypeName","src":"5842:6:28","typeDescriptions":{}}},"id":8503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5842:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"VariableDeclarationStatement","src":"5827:47:28"},{"expression":{"arguments":[{"id":8508,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"5946:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8511,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5960:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_SavingsPool_$8848","typeString":"contract SavingsPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SavingsPool_$8848","typeString":"contract SavingsPool"}],"id":8510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5952:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8509,"name":"address","nodeType":"ElementaryTypeName","src":"5952:7:28","typeDescriptions":{}}},"id":8512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5952:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8513,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8492,"src":"5967:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8505,"name":"STABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8149,"src":"5922:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":8507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5929:16:28","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1280,"src":"5922:23:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$992_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":8514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5922:52:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8515,"nodeType":"ExpressionStatement","src":"5922:52:28"},{"assignments":[8517],"declarations":[{"constant":false,"id":8517,"mutability":"mutable","name":"fee","nameLocation":"6033:3:28","nodeType":"VariableDeclaration","scope":8634,"src":"6025:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8516,"name":"uint256","nodeType":"ElementaryTypeName","src":"6025:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8519,"initialValue":{"hexValue":"30","id":8518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6039:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6025:15:28"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":8522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8520,"name":"depositFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8163,"src":"6054:13:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6070:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6054:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8523,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8160,"src":"6075:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6095:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6087:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8524,"name":"address","nodeType":"ElementaryTypeName","src":"6087:7:28","typeDescriptions":{}}},"id":8527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6075:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6054:43:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8552,"nodeType":"IfStatement","src":"6050:205:28","trueBody":{"id":8551,"nodeType":"Block","src":"6099:156:28","statements":[{"expression":{"id":8537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8530,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8517,"src":"6113:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8531,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8492,"src":"6120:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8532,"name":"depositFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8163,"src":"6129:13:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"6120:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8534,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6119:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":8535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6146:5:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"6119:32:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6113:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8538,"nodeType":"ExpressionStatement","src":"6113:38:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8539,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8517,"src":"6169:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6175:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6169:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8550,"nodeType":"IfStatement","src":"6165:80:28","trueBody":{"id":8549,"nodeType":"Block","src":"6178:67:28","statements":[{"expression":{"arguments":[{"id":8545,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8160,"src":"6216:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8546,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8517,"src":"6226:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8542,"name":"STABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8149,"src":"6196:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":8544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6203:12:28","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1253,"src":"6196:19:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$992_$","typeString":"function (contract IERC20,address,uint256)"}},"id":8547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8548,"nodeType":"ExpressionStatement","src":"6196:34:28"}]}}]}},{"assignments":[8554],"declarations":[{"constant":false,"id":8554,"mutability":"mutable","name":"netAmount","nameLocation":"6273:9:28","nodeType":"VariableDeclaration","scope":8634,"src":"6265:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8553,"name":"uint256","nodeType":"ElementaryTypeName","src":"6265:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8558,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8555,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8492,"src":"6285:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8556,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8517,"src":"6294:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6285:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6265:32:28"},{"expression":{"id":8563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8559,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8168,"src":"6335:8:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8561,"indexExpression":{"id":8560,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"6344:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6335:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8562,"name":"netAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8554,"src":"6353:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6335:27:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8564,"nodeType":"ExpressionStatement","src":"6335:27:28"},{"expression":{"id":8567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8565,"name":"totalDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"6372:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8566,"name":"netAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8554,"src":"6389:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6372:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8568,"nodeType":"ExpressionStatement","src":"6372:26:28"},{"assignments":[8570],"declarations":[{"constant":false,"id":8570,"mutability":"mutable","name":"isNewDay","nameLocation":"6473:8:28","nodeType":"VariableDeclaration","scope":8634,"src":"6468:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8569,"name":"bool","nodeType":"ElementaryTypeName","src":"6468:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":8575,"initialValue":{"arguments":[{"id":8572,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"6502:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8573,"name":"today","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8496,"src":"6508:5:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":8571,"name":"_recordDepositDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8736,"src":"6484:17:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint40_$returns$_t_bool_$","typeString":"function (address,uint40) returns (bool)"}},"id":8574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6484:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"6468:46:28"},{"condition":{"id":8576,"name":"isNewDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8570,"src":"6579:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8626,"nodeType":"IfStatement","src":"6575:602:28","trueBody":{"id":8625,"nodeType":"Block","src":"6589:588:28","statements":[{"assignments":[8578,8580,8582],"declarations":[{"constant":false,"id":8578,"mutability":"mutable","name":"newScore","nameLocation":"6611:8:28","nodeType":"VariableDeclaration","scope":8625,"src":"6604:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8577,"name":"uint16","nodeType":"ElementaryTypeName","src":"6604:6:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":8580,"mutability":"mutable","name":"streakDays","nameLocation":"6628:10:28","nodeType":"VariableDeclaration","scope":8625,"src":"6621:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8579,"name":"uint16","nodeType":"ElementaryTypeName","src":"6621:6:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":8582,"mutability":"mutable","name":"freq30","nameLocation":"6646:6:28","nodeType":"VariableDeclaration","scope":8625,"src":"6640:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8581,"name":"uint8","nodeType":"ElementaryTypeName","src":"6640:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":8590,"initialValue":{"arguments":[{"id":8585,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"6699:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":8586,"name":"_depositDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8177,"src":"6705:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint40_$dyn_storage_$","typeString":"mapping(address => uint40[] storage ref)"}},"id":8588,"indexExpression":{"id":8587,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"6718:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6705:18:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_storage","typeString":"uint40[] storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint40_$dyn_storage","typeString":"uint40[] storage ref"}],"expression":{"id":8583,"name":"scoreRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"6673:13:28","typeDescriptions":{"typeIdentifier":"t_contract$_IScoreRegistry_$9548","typeString":"contract IScoreRegistry"}},"id":8584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6687:11:28","memberName":"updateScore","nodeType":"MemberAccess","referencedDeclaration":9492,"src":"6673:25:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_array$_t_uint40_$dyn_memory_ptr_$returns$_t_uint16_$_t_uint16_$_t_uint8_$","typeString":"function (address,uint40[] memory) external returns (uint16,uint16,uint8)"}},"id":8589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6673:51:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_uint16_$_t_uint8_$","typeString":"tuple(uint16,uint16,uint8)"}},"nodeType":"VariableDeclarationStatement","src":"6603:121:28"},{"expression":{"id":8595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8591,"name":"lastScoredDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8182,"src":"6738:13:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint40_$","typeString":"mapping(address => uint40)"}},"id":8593,"indexExpression":{"id":8592,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"6752:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6738:19:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8594,"name":"today","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8496,"src":"6760:5:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"6738:27:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":8596,"nodeType":"ExpressionStatement","src":"6738:27:28"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8599,"name":"rewardVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8157,"src":"6843:11:28","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardVault_$9329","typeString":"contract IRewardVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IRewardVault_$9329","typeString":"contract IRewardVault"}],"id":8598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6835:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8597,"name":"address","nodeType":"ElementaryTypeName","src":"6835:7:28","typeDescriptions":{}}},"id":8600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6835:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6867:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6859:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8601,"name":"address","nodeType":"ElementaryTypeName","src":"6859:7:28","typeDescriptions":{}}},"id":8604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6859:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6835:34:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8617,"nodeType":"IfStatement","src":"6831:268:28","trueBody":{"id":8616,"nodeType":"Block","src":"6871:228:28","statements":[{"clauses":[{"block":{"id":8611,"nodeType":"Block","src":"6936:70:28","statements":[]},"errorName":"","id":8612,"nodeType":"TryCatchClause","src":"6936:70:28"},{"block":{"id":8613,"nodeType":"Block","src":"7013:72:28","statements":[]},"errorName":"","id":8614,"nodeType":"TryCatchClause","src":"7007:78:28"}],"externalCall":{"arguments":[{"id":8608,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"6918:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8609,"name":"streakDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8580,"src":"6924:10:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":8606,"name":"rewardVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8157,"src":"6893:11:28","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardVault_$9329","typeString":"contract IRewardVault"}},"id":8607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6905:12:28","memberName":"onDepositDay","nodeType":"MemberAccess","referencedDeclaration":9302,"src":"6893:24:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint16_$returns$__$","typeString":"function (address,uint16) external"}},"id":8610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6893:42:28","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8615,"nodeType":"TryStatement","src":"6889:196:28"}]}},{"eventCall":{"arguments":[{"id":8619,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"7131:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8620,"name":"newScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8578,"src":"7137:8:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":8621,"name":"streakDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8580,"src":"7147:10:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":8622,"name":"freq30","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8582,"src":"7159:6:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":8618,"name":"ScoreUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9361,"src":"7118:12:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint16_$_t_uint16_$_t_uint8_$returns$__$","typeString":"function (address,uint16,uint16,uint8)"}},"id":8623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7118:48:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8624,"nodeType":"EmitStatement","src":"7113:53:28"}]}},{"eventCall":{"arguments":[{"id":8628,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"7202:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8629,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8492,"src":"7208:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8630,"name":"netAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8554,"src":"7216:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8631,"name":"today","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8496,"src":"7227:5:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":8627,"name":"Deposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9345,"src":"7192:9:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint40_$returns$__$","typeString":"function (address,uint256,uint256,uint40)"}},"id":8632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7192:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8633,"nodeType":"EmitStatement","src":"7187:46:28"}]},"documentation":{"id":8488,"nodeType":"StructuredDocumentation","src":"5609:140:28","text":" @notice Internal function to execute deposit logic\n @param user User address\n @param amount Amount to deposit"},"id":8635,"implemented":true,"kind":"function","modifiers":[],"name":"_executeDeposit","nameLocation":"5763:15:28","nodeType":"FunctionDefinition","parameters":{"id":8493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8490,"mutability":"mutable","name":"user","nameLocation":"5787:4:28","nodeType":"VariableDeclaration","scope":8635,"src":"5779:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8489,"name":"address","nodeType":"ElementaryTypeName","src":"5779:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8492,"mutability":"mutable","name":"amount","nameLocation":"5801:6:28","nodeType":"VariableDeclaration","scope":8635,"src":"5793:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8491,"name":"uint256","nodeType":"ElementaryTypeName","src":"5793:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5778:30:28"},"returnParameters":{"id":8494,"nodeType":"ParameterList","parameters":[],"src":"5817:0:28"},"scope":8848,"src":"5754:1486:28","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[9407],"body":{"id":8690,"nodeType":"Block","src":"7429:421:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8645,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8638,"src":"7443:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7453:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7443:11:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8651,"nodeType":"IfStatement","src":"7439:44:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8648,"name":"InsufficientAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9371,"src":"7463:18:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7463:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8650,"nodeType":"RevertStatement","src":"7456:27:28"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8652,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8168,"src":"7497:8:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8655,"indexExpression":{"expression":{"id":8653,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7506:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7510:6:28","memberName":"sender","nodeType":"MemberAccess","src":"7506:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7497:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8656,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8638,"src":"7520:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7497:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8661,"nodeType":"IfStatement","src":"7493:63:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8658,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9373,"src":"7535:19:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:21:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8660,"nodeType":"RevertStatement","src":"7528:28:28"}},{"assignments":[8663],"declarations":[{"constant":false,"id":8663,"mutability":"mutable","name":"user","nameLocation":"7575:4:28","nodeType":"VariableDeclaration","scope":8690,"src":"7567:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8662,"name":"address","nodeType":"ElementaryTypeName","src":"7567:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8666,"initialValue":{"expression":{"id":8664,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7582:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7586:6:28","memberName":"sender","nodeType":"MemberAccess","src":"7582:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7567:25:28"},{"id":8677,"nodeType":"UncheckedBlock","src":"7630:96:28","statements":[{"expression":{"id":8671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8667,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8168,"src":"7654:8:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8669,"indexExpression":{"id":8668,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8663,"src":"7663:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7654:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":8670,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8638,"src":"7672:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7654:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8672,"nodeType":"ExpressionStatement","src":"7654:24:28"},{"expression":{"id":8675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8673,"name":"totalDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"7692:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":8674,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8638,"src":"7709:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7692:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8676,"nodeType":"ExpressionStatement","src":"7692:23:28"}]},{"expression":{"arguments":[{"id":8681,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8663,"src":"7791:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8682,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8638,"src":"7797:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8678,"name":"STABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8149,"src":"7771:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":8680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7778:12:28","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1253,"src":"7771:19:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$992_$","typeString":"function (contract IERC20,address,uint256)"}},"id":8683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7771:33:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8684,"nodeType":"ExpressionStatement","src":"7771:33:28"},{"eventCall":{"arguments":[{"id":8686,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8663,"src":"7830:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8687,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8638,"src":"7836:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8685,"name":"Withdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9351,"src":"7820:9:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7820:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8689,"nodeType":"EmitStatement","src":"7815:28:28"}]},"documentation":{"id":8636,"nodeType":"StructuredDocumentation","src":"7246:108:28","text":" @notice Withdraw stablecoin from the savings pool\n @param amount Amount to withdraw"},"functionSelector":"2e1a7d4d","id":8691,"implemented":true,"kind":"function","modifiers":[{"id":8641,"kind":"modifierInvocation","modifierName":{"id":8640,"name":"nonReentrant","nameLocations":["7402:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":1963,"src":"7402:12:28"},"nodeType":"ModifierInvocation","src":"7402:12:28"},{"id":8643,"kind":"modifierInvocation","modifierName":{"id":8642,"name":"whenNotPaused","nameLocations":["7415:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":1855,"src":"7415:13:28"},"nodeType":"ModifierInvocation","src":"7415:13:28"}],"name":"withdraw","nameLocation":"7368:8:28","nodeType":"FunctionDefinition","parameters":{"id":8639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8638,"mutability":"mutable","name":"amount","nameLocation":"7385:6:28","nodeType":"VariableDeclaration","scope":8691,"src":"7377:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8637,"name":"uint256","nodeType":"ElementaryTypeName","src":"7377:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7376:16:28"},"returnParameters":{"id":8644,"nodeType":"ParameterList","parameters":[],"src":"7429:0:28"},"scope":8848,"src":"7359:491:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8735,"nodeType":"Block","src":"8160:350:28","statements":[{"assignments":[8705],"declarations":[{"constant":false,"id":8705,"mutability":"mutable","name":"userDays","nameLocation":"8187:8:28","nodeType":"VariableDeclaration","scope":8735,"src":"8170:25:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_storage_ptr","typeString":"uint40[]"},"typeName":{"baseType":{"id":8703,"name":"uint40","nodeType":"ElementaryTypeName","src":"8170:6:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":8704,"nodeType":"ArrayTypeName","src":"8170:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_storage_ptr","typeString":"uint40[]"}},"visibility":"internal"}],"id":8709,"initialValue":{"baseExpression":{"id":8706,"name":"_depositDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8177,"src":"8198:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint40_$dyn_storage_$","typeString":"mapping(address => uint40[] storage ref)"}},"id":8708,"indexExpression":{"id":8707,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8694,"src":"8211:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8198:18:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_storage","typeString":"uint40[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8170:46:28"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8710,"name":"userDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8705,"src":"8302:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_storage_ptr","typeString":"uint40[] storage pointer"}},"id":8711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8311:6:28","memberName":"length","nodeType":"MemberAccess","src":"8302:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8320:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8302:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":8721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8714,"name":"userDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8705,"src":"8325:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_storage_ptr","typeString":"uint40[] storage pointer"}},"id":8719,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8715,"name":"userDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8705,"src":"8334:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_storage_ptr","typeString":"uint40[] storage pointer"}},"id":8716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8343:6:28","memberName":"length","nodeType":"MemberAccess","src":"8334:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8352:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8334:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8325:29:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8720,"name":"dayIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8696,"src":"8358:8:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"8325:41:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8302:64:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8726,"nodeType":"IfStatement","src":"8298:128:28","trueBody":{"id":8725,"nodeType":"Block","src":"8368:58:28","statements":[{"expression":{"hexValue":"66616c7365","id":8723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8389:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":8700,"id":8724,"nodeType":"Return","src":"8382:12:28"}]}},{"expression":{"arguments":[{"id":8730,"name":"dayIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8696,"src":"8473:8:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"}],"expression":{"id":8727,"name":"userDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8705,"src":"8459:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_storage_ptr","typeString":"uint40[] storage pointer"}},"id":8729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8468:4:28","memberName":"push","nodeType":"MemberAccess","src":"8459:13:28","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint40_$dyn_storage_ptr_$_t_uint40_$returns$__$attached_to$_t_array$_t_uint40_$dyn_storage_ptr_$","typeString":"function (uint40[] storage pointer,uint40)"}},"id":8731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8459:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8732,"nodeType":"ExpressionStatement","src":"8459:23:28"},{"expression":{"hexValue":"74727565","id":8733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8499:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":8700,"id":8734,"nodeType":"Return","src":"8492:11:28"}]},"documentation":{"id":8692,"nodeType":"StructuredDocumentation","src":"7856:209:28","text":" @notice Record deposit day for user (prevents duplicates)\n @param user User address\n @param dayIndex Day index to record\n @return isNewDay True if this is a new deposit day"},"id":8736,"implemented":true,"kind":"function","modifiers":[],"name":"_recordDepositDay","nameLocation":"8079:17:28","nodeType":"FunctionDefinition","parameters":{"id":8697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8694,"mutability":"mutable","name":"user","nameLocation":"8105:4:28","nodeType":"VariableDeclaration","scope":8736,"src":"8097:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8693,"name":"address","nodeType":"ElementaryTypeName","src":"8097:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8696,"mutability":"mutable","name":"dayIndex","nameLocation":"8118:8:28","nodeType":"VariableDeclaration","scope":8736,"src":"8111:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":8695,"name":"uint40","nodeType":"ElementaryTypeName","src":"8111:6:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"8096:31:28"},"returnParameters":{"id":8700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8699,"mutability":"mutable","name":"isNewDay","nameLocation":"8150:8:28","nodeType":"VariableDeclaration","scope":8736,"src":"8145:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8698,"name":"bool","nodeType":"ElementaryTypeName","src":"8145:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8144:15:28"},"scope":8848,"src":"8070:440:28","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":8749,"nodeType":"Block","src":"8745:42:28","statements":[{"expression":{"baseExpression":{"id":8745,"name":"_depositDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8177,"src":"8762:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint40_$dyn_storage_$","typeString":"mapping(address => uint40[] storage ref)"}},"id":8747,"indexExpression":{"id":8746,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8739,"src":"8775:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8762:18:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_storage","typeString":"uint40[] storage ref"}},"functionReturnParameters":8744,"id":8748,"nodeType":"Return","src":"8755:25:28"}]},"documentation":{"id":8737,"nodeType":"StructuredDocumentation","src":"8516:142:28","text":" @notice Get user's deposit days (view function)\n @param user User address\n @return Array of deposit day indices"},"functionSelector":"9ab1af67","id":8750,"implemented":true,"kind":"function","modifiers":[],"name":"getUserDepositDays","nameLocation":"8672:18:28","nodeType":"FunctionDefinition","parameters":{"id":8740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8739,"mutability":"mutable","name":"user","nameLocation":"8699:4:28","nodeType":"VariableDeclaration","scope":8750,"src":"8691:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8738,"name":"address","nodeType":"ElementaryTypeName","src":"8691:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8690:14:28"},"returnParameters":{"id":8744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8750,"src":"8728:15:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_memory_ptr","typeString":"uint40[]"},"typeName":{"baseType":{"id":8741,"name":"uint40","nodeType":"ElementaryTypeName","src":"8728:6:28","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":8742,"nodeType":"ArrayTypeName","src":"8728:8:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_storage_ptr","typeString":"uint40[]"}},"visibility":"internal"}],"src":"8727:17:28"},"scope":8848,"src":"8663:124:28","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8763,"nodeType":"Block","src":"9001:49:28","statements":[{"expression":{"expression":{"baseExpression":{"id":8758,"name":"_depositDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8177,"src":"9018:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint40_$dyn_storage_$","typeString":"mapping(address => uint40[] storage ref)"}},"id":8760,"indexExpression":{"id":8759,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8753,"src":"9031:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9018:18:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_storage","typeString":"uint40[] storage ref"}},"id":8761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9037:6:28","memberName":"length","nodeType":"MemberAccess","src":"9018:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8757,"id":8762,"nodeType":"Return","src":"9011:32:28"}]},"documentation":{"id":8751,"nodeType":"StructuredDocumentation","src":"8793:128:28","text":" @notice Get user's deposit count\n @param user User address\n @return Number of unique deposit days"},"functionSelector":"1bae91a4","id":8764,"implemented":true,"kind":"function","modifiers":[],"name":"getUserDepositCount","nameLocation":"8935:19:28","nodeType":"FunctionDefinition","parameters":{"id":8754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8753,"mutability":"mutable","name":"user","nameLocation":"8963:4:28","nodeType":"VariableDeclaration","scope":8764,"src":"8955:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8752,"name":"address","nodeType":"ElementaryTypeName","src":"8955:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8954:14:28"},"returnParameters":{"id":8757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8764,"src":"8992:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8755,"name":"uint256","nodeType":"ElementaryTypeName","src":"8992:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8991:9:28"},"scope":8848,"src":"8926:124:28","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[9413],"body":{"id":8787,"nodeType":"Block","src":"9234:153:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":8774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8772,"name":"_depositFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8767,"src":"9248:14:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8773,"name":"MAX_FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8145,"src":"9265:11:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"9248:28:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8778,"nodeType":"IfStatement","src":"9244:55:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8775,"name":"ExcessiveFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9381,"src":"9285:12:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9285:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8777,"nodeType":"RevertStatement","src":"9278:21:28"}},{"expression":{"id":8781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8779,"name":"depositFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8163,"src":"9309:13:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8780,"name":"_depositFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8767,"src":"9325:14:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"9309:30:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":8782,"nodeType":"ExpressionStatement","src":"9309:30:28"},{"eventCall":{"arguments":[{"id":8784,"name":"_depositFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8767,"src":"9365:14:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":8783,"name":"FeeUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9365,"src":"9354:10:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$returns$__$","typeString":"function (uint16)"}},"id":8785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9354:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8786,"nodeType":"EmitStatement","src":"9349:31:28"}]},"documentation":{"id":8765,"nodeType":"StructuredDocumentation","src":"9056:112:28","text":" @notice Set deposit fee (only owner)\n @param _depositFeeBps Fee in basis points (0-100)"},"functionSelector":"023b1fc9","id":8788,"implemented":true,"kind":"function","modifiers":[{"id":8770,"kind":"modifierInvocation","modifierName":{"id":8769,"name":"onlyOwner","nameLocations":["9224:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"9224:9:28"},"nodeType":"ModifierInvocation","src":"9224:9:28"}],"name":"setFeeBps","nameLocation":"9182:9:28","nodeType":"FunctionDefinition","parameters":{"id":8768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8767,"mutability":"mutable","name":"_depositFeeBps","nameLocation":"9199:14:28","nodeType":"VariableDeclaration","scope":8788,"src":"9192:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8766,"name":"uint16","nodeType":"ElementaryTypeName","src":"9192:6:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"9191:23:28"},"returnParameters":{"id":8771,"nodeType":"ParameterList","parameters":[],"src":"9234:0:28"},"scope":8848,"src":"9173:214:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[9419],"body":{"id":8804,"nodeType":"Block","src":"9562:78:28","statements":[{"expression":{"id":8798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8796,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8160,"src":"9572:8:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8797,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8791,"src":"9583:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9572:20:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8799,"nodeType":"ExpressionStatement","src":"9572:20:28"},{"eventCall":{"arguments":[{"id":8801,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8791,"src":"9623:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8800,"name":"TreasuryUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9369,"src":"9607:15:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9607:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8803,"nodeType":"EmitStatement","src":"9602:31:28"}]},"documentation":{"id":8789,"nodeType":"StructuredDocumentation","src":"9393:105:28","text":" @notice Set treasury address (only owner)\n @param _treasury New treasury address"},"functionSelector":"f0f44260","id":8805,"implemented":true,"kind":"function","modifiers":[{"id":8794,"kind":"modifierInvocation","modifierName":{"id":8793,"name":"onlyOwner","nameLocations":["9552:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"9552:9:28"},"nodeType":"ModifierInvocation","src":"9552:9:28"}],"name":"setTreasury","nameLocation":"9512:11:28","nodeType":"FunctionDefinition","parameters":{"id":8792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8791,"mutability":"mutable","name":"_treasury","nameLocation":"9532:9:28","nodeType":"VariableDeclaration","scope":8805,"src":"9524:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8790,"name":"address","nodeType":"ElementaryTypeName","src":"9524:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9523:19:28"},"returnParameters":{"id":8795,"nodeType":"ParameterList","parameters":[],"src":"9562:0:28"},"scope":8848,"src":"9503:137:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8814,"nodeType":"Block","src":"9745:25:28","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8811,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"9755:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9755:8:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8813,"nodeType":"ExpressionStatement","src":"9755:8:28"}]},"documentation":{"id":8806,"nodeType":"StructuredDocumentation","src":"9646:58:28","text":" @notice Pause the contract (only owner)"},"functionSelector":"8456cb59","id":8815,"implemented":true,"kind":"function","modifiers":[{"id":8809,"kind":"modifierInvocation","modifierName":{"id":8808,"name":"onlyOwner","nameLocations":["9735:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"9735:9:28"},"nodeType":"ModifierInvocation","src":"9735:9:28"}],"name":"pause","nameLocation":"9718:5:28","nodeType":"FunctionDefinition","parameters":{"id":8807,"nodeType":"ParameterList","parameters":[],"src":"9723:2:28"},"returnParameters":{"id":8810,"nodeType":"ParameterList","parameters":[],"src":"9745:0:28"},"scope":8848,"src":"9709:61:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8824,"nodeType":"Block","src":"9879:27:28","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8821,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"9889:8:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9889:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8823,"nodeType":"ExpressionStatement","src":"9889:10:28"}]},"documentation":{"id":8816,"nodeType":"StructuredDocumentation","src":"9776:60:28","text":" @notice Unpause the contract (only owner)"},"functionSelector":"3f4ba83a","id":8825,"implemented":true,"kind":"function","modifiers":[{"id":8819,"kind":"modifierInvocation","modifierName":{"id":8818,"name":"onlyOwner","nameLocations":["9869:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"9869:9:28"},"nodeType":"ModifierInvocation","src":"9869:9:28"}],"name":"unpause","nameLocation":"9850:7:28","nodeType":"FunctionDefinition","parameters":{"id":8817,"nodeType":"ParameterList","parameters":[],"src":"9857:2:28"},"returnParameters":{"id":8820,"nodeType":"ParameterList","parameters":[],"src":"9879:0:28"},"scope":8848,"src":"9841:65:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8846,"nodeType":"Block","src":"10157:60:28","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":8841,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"10194:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10194:7:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8843,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8830,"src":"10203:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":8838,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8828,"src":"10174:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8837,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"10167:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$992_$","typeString":"type(contract IERC20)"}},"id":8839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10167:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"id":8840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10181:12:28","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1253,"src":"10167:26:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$992_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$992_$","typeString":"function (contract IERC20,address,uint256)"}},"id":8844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10167:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8845,"nodeType":"ExpressionStatement","src":"10167:43:28"}]},"documentation":{"id":8826,"nodeType":"StructuredDocumentation","src":"9912:152:28","text":" @notice Emergency withdraw for owner (only when paused)\n @param token Token to withdraw\n @param amount Amount to withdraw"},"functionSelector":"95ccea67","id":8847,"implemented":true,"kind":"function","modifiers":[{"id":8833,"kind":"modifierInvocation","modifierName":{"id":8832,"name":"onlyOwner","nameLocations":["10136:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"10136:9:28"},"nodeType":"ModifierInvocation","src":"10136:9:28"},{"id":8835,"kind":"modifierInvocation","modifierName":{"id":8834,"name":"whenPaused","nameLocations":["10146:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":1863,"src":"10146:10:28"},"nodeType":"ModifierInvocation","src":"10146:10:28"}],"name":"emergencyWithdraw","nameLocation":"10078:17:28","nodeType":"FunctionDefinition","parameters":{"id":8831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8828,"mutability":"mutable","name":"token","nameLocation":"10104:5:28","nodeType":"VariableDeclaration","scope":8847,"src":"10096:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8827,"name":"address","nodeType":"ElementaryTypeName","src":"10096:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8830,"mutability":"mutable","name":"amount","nameLocation":"10119:6:28","nodeType":"VariableDeclaration","scope":8847,"src":"10111:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8829,"name":"uint256","nodeType":"ElementaryTypeName","src":"10111:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10095:31:28"},"returnParameters":{"id":8836,"nodeType":"ParameterList","parameters":[],"src":"10157:0:28"},"scope":8848,"src":"10069:148:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8849,"src":"735:9484:28","usedErrors":[13,18,1220,1844,1847,1944,9371,9373,9375,9377,9379,9381],"usedEvents":[24,1836,1841,9345,9351,9361,9365,9369]}],"src":"32:10188:28"},"id":28},"contracts/ScoreRegistry.sol":{"ast":{"absolutePath":"contracts/ScoreRegistry.sol","exportedSymbols":{"Context":[1702],"IScoreRegistry":[9548],"Ownable":[147],"ScoreRegistry":[9271]},"id":9272,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8850,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:29"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8851,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9272,"sourceUnit":148,"src":"58:52:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IScoreRegistry.sol","file":"./interfaces/IScoreRegistry.sol","id":8852,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9272,"sourceUnit":9549,"src":"111:41:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8854,"name":"IScoreRegistry","nameLocations":["483:14:29"],"nodeType":"IdentifierPath","referencedDeclaration":9548,"src":"483:14:29"},"id":8855,"nodeType":"InheritanceSpecifier","src":"483:14:29"},{"baseName":{"id":8856,"name":"Ownable","nameLocations":["499:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"499:7:29"},"id":8857,"nodeType":"InheritanceSpecifier","src":"499:7:29"}],"canonicalName":"ScoreRegistry","contractDependencies":[],"contractKind":"contract","documentation":{"id":8853,"nodeType":"StructuredDocumentation","src":"154:302:29","text":" @title ScoreRegistry\n @notice Calculates and stores Savings Consistency Score (SCS) for MicroSave users\n @dev Score formula: SCS = min(100, (streakDays * 2) + freq30)\n @dev Streak: consecutive days with deposits (36h grace period)\n @dev Frequency: unique deposit days in last 30 days"},"fullyImplemented":true,"id":9271,"linearizedBaseContracts":[9271,147,1702,9548],"name":"ScoreRegistry","nameLocation":"466:13:29","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":8858,"nodeType":"StructuredDocumentation","src":"513:34:29","text":"@notice Maximum possible score"},"functionSelector":"27ff6223","id":8861,"mutability":"constant","name":"MAX_SCORE","nameLocation":"575:9:29","nodeType":"VariableDeclaration","scope":9271,"src":"552:38:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8859,"name":"uint16","nodeType":"ElementaryTypeName","src":"552:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"313030","id":8860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"587:3:29","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"public"},{"constant":true,"documentation":{"id":8862,"nodeType":"StructuredDocumentation","src":"601:70:29","text":"@notice Grace period for streak continuation (36 hours in seconds)"},"functionSelector":"c1a287e2","id":8865,"mutability":"constant","name":"GRACE_PERIOD","nameLocation":"700:12:29","nodeType":"VariableDeclaration","scope":9271,"src":"676:47:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8863,"name":"uint256","nodeType":"ElementaryTypeName","src":"676:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3336","id":8864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"715:8:29","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_129600_by_1","typeString":"int_const 129600"},"value":"36"},"visibility":"public"},{"constant":true,"documentation":{"id":8866,"nodeType":"StructuredDocumentation","src":"734:50:29","text":"@notice Frequency calculation window (30 days)"},"functionSelector":"48fecad2","id":8869,"mutability":"constant","name":"FREQ_WINDOW","nameLocation":"813:11:29","nodeType":"VariableDeclaration","scope":9271,"src":"789:45:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8867,"name":"uint256","nodeType":"ElementaryTypeName","src":"789:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3330","id":8868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"827:7:29","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"},"visibility":"public"},{"baseFunctions":[9547],"constant":false,"documentation":{"id":8870,"nodeType":"StructuredDocumentation","src":"841:50:29","text":"@notice Address of the authorized savings pool"},"functionSelector":"6fa0e653","id":8872,"mutability":"immutable","name":"savingsPool","nameLocation":"921:11:29","nodeType":"VariableDeclaration","scope":9271,"src":"896:36:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8871,"name":"address","nodeType":"ElementaryTypeName","src":"896:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[9535],"constant":false,"documentation":{"id":8873,"nodeType":"StructuredDocumentation","src":"939:31:29","text":"@notice User scores (0-100)"},"functionSelector":"776f3843","id":8877,"mutability":"mutable","name":"score","nameLocation":"1009:5:29","nodeType":"VariableDeclaration","scope":9271,"src":"975:39:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint16_$","typeString":"mapping(address => uint16)"},"typeName":{"id":8876,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8874,"name":"address","nodeType":"ElementaryTypeName","src":"983:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"975:26:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint16_$","typeString":"mapping(address => uint16)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8875,"name":"uint16","nodeType":"ElementaryTypeName","src":"994:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}},"visibility":"public"},{"baseFunctions":[9542],"constant":false,"documentation":{"id":8878,"nodeType":"StructuredDocumentation","src":"1025:28:29","text":"@notice User streak days"},"functionSelector":"78df39a7","id":8882,"mutability":"mutable","name":"streakDays","nameLocation":"1092:10:29","nodeType":"VariableDeclaration","scope":9271,"src":"1058:44:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint16_$","typeString":"mapping(address => uint16)"},"typeName":{"id":8881,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8879,"name":"address","nodeType":"ElementaryTypeName","src":"1066:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1058:26:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint16_$","typeString":"mapping(address => uint16)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8880,"name":"uint16","nodeType":"ElementaryTypeName","src":"1077:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}},"visibility":"public"},{"constant":false,"documentation":{"id":8883,"nodeType":"StructuredDocumentation","src":"1109:64:29","text":"@notice Last scored day for each user (to handle edge cases)"},"functionSelector":"d68b29fe","id":8887,"mutability":"mutable","name":"lastScoredDay","nameLocation":"1212:13:29","nodeType":"VariableDeclaration","scope":9271,"src":"1178:47:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint40_$","typeString":"mapping(address => uint40)"},"typeName":{"id":8886,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8884,"name":"address","nodeType":"ElementaryTypeName","src":"1186:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1178:26:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint40_$","typeString":"mapping(address => uint40)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8885,"name":"uint40","nodeType":"ElementaryTypeName","src":"1197:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}},"visibility":"public"},{"body":{"id":8899,"nodeType":"Block","src":"1332:76:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8890,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1346:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1350:6:29","memberName":"sender","nodeType":"MemberAccess","src":"1346:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8892,"name":"savingsPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8872,"src":"1360:11:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1346:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8897,"nodeType":"IfStatement","src":"1342:48:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8894,"name":"OnlyPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9475,"src":"1380:8:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1380:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8896,"nodeType":"RevertStatement","src":"1373:17:29"}},{"id":8898,"nodeType":"PlaceholderStatement","src":"1400:1:29"}]},"documentation":{"id":8888,"nodeType":"StructuredDocumentation","src":"1232:75:29","text":" @notice Modifier to restrict access to savings pool only"},"id":8900,"name":"onlyPool","nameLocation":"1321:8:29","nodeType":"ModifierDefinition","parameters":{"id":8889,"nodeType":"ParameterList","parameters":[],"src":"1329:2:29"},"src":"1312:96:29","virtual":false,"visibility":"internal"},{"body":{"id":8925,"nodeType":"Block","src":"1638:105:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8911,"name":"_savingsPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8903,"src":"1652:12:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1668:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8912,"name":"address","nodeType":"ElementaryTypeName","src":"1668:7:29","typeDescriptions":{}}},"id":8915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1668:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1652:26:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8920,"nodeType":"IfStatement","src":"1648:52:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8917,"name":"InvalidUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9477,"src":"1687:11:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1687:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8919,"nodeType":"RevertStatement","src":"1680:20:29"}},{"expression":{"id":8923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8921,"name":"savingsPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8872,"src":"1710:11:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8922,"name":"_savingsPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8903,"src":"1724:12:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1710:26:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8924,"nodeType":"ExpressionStatement","src":"1710:26:29"}]},"documentation":{"id":8901,"nodeType":"StructuredDocumentation","src":"1414:153:29","text":" @notice Constructor\n @param _savingsPool Address of the savings pool contract\n @param _owner Address of the contract owner"},"id":8926,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8908,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8905,"src":"1630:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8909,"kind":"baseConstructorSpecifier","modifierName":{"id":8907,"name":"Ownable","nameLocations":["1622:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1622:7:29"},"nodeType":"ModifierInvocation","src":"1622:15:29"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8903,"mutability":"mutable","name":"_savingsPool","nameLocation":"1592:12:29","nodeType":"VariableDeclaration","scope":8926,"src":"1584:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8902,"name":"address","nodeType":"ElementaryTypeName","src":"1584:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8905,"mutability":"mutable","name":"_owner","nameLocation":"1614:6:29","nodeType":"VariableDeclaration","scope":8926,"src":"1606:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8904,"name":"address","nodeType":"ElementaryTypeName","src":"1606:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1583:38:29"},"returnParameters":{"id":8910,"nodeType":"ParameterList","parameters":[],"src":"1638:0:29"},"scope":9271,"src":"1572:171:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[9492],"body":{"id":9030,"nodeType":"Block","src":"2243:808:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8943,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8929,"src":"2257:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2273:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2265:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8944,"name":"address","nodeType":"ElementaryTypeName","src":"2265:7:29","typeDescriptions":{}}},"id":8947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2265:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2257:18:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8952,"nodeType":"IfStatement","src":"2253:44:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8949,"name":"InvalidUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9477,"src":"2284:11:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2284:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8951,"nodeType":"RevertStatement","src":"2277:20:29"}},{"assignments":[8954],"declarations":[{"constant":false,"id":8954,"mutability":"mutable","name":"today","nameLocation":"2323:5:29","nodeType":"VariableDeclaration","scope":9030,"src":"2316:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":8953,"name":"uint40","nodeType":"ElementaryTypeName","src":"2316:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"id":8962,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8957,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2338:5:29","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2344:9:29","memberName":"timestamp","nodeType":"MemberAccess","src":"2338:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31","id":8959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2356:6:29","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"2338:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2331:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":8955,"name":"uint40","nodeType":"ElementaryTypeName","src":"2331:6:29","typeDescriptions":{}}},"id":8961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2331:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"VariableDeclarationStatement","src":"2316:47:29"},{"expression":{"id":8968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8963,"name":"freq30","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8941,"src":"2443:6:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8965,"name":"userDaysFromPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"2472:16:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_calldata_ptr","typeString":"uint40[] calldata"}},{"id":8966,"name":"today","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8954,"src":"2490:5:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint40_$dyn_calldata_ptr","typeString":"uint40[] calldata"},{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":8964,"name":"_calculateFrequency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9106,"src":"2452:19:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint40_$dyn_calldata_ptr_$_t_uint40_$returns$_t_uint8_$","typeString":"function (uint40[] calldata,uint40) pure returns (uint8)"}},"id":8967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2452:44:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2443:53:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":8969,"nodeType":"ExpressionStatement","src":"2443:53:29"},{"expression":{"id":8976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8970,"name":"newStreak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8939,"src":"2543:9:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8972,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8929,"src":"2572:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8973,"name":"userDaysFromPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"2578:16:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_calldata_ptr","typeString":"uint40[] calldata"}},{"id":8974,"name":"today","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8954,"src":"2596:5:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint40_$dyn_calldata_ptr","typeString":"uint40[] calldata"},{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":8971,"name":"_calculateStreak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9204,"src":"2555:16:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_array$_t_uint40_$dyn_calldata_ptr_$_t_uint40_$returns$_t_uint16_$","typeString":"function (address,uint40[] calldata,uint40) pure returns (uint16)"}},"id":8975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2555:47:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"2543:59:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":8977,"nodeType":"ExpressionStatement","src":"2543:59:29"},{"assignments":[8979],"declarations":[{"constant":false,"id":8979,"mutability":"mutable","name":"calculatedScore","nameLocation":"2689:15:29","nodeType":"VariableDeclaration","scope":9030,"src":"2681:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8978,"name":"uint256","nodeType":"ElementaryTypeName","src":"2681:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8992,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8982,"name":"newStreak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8939,"src":"2716:9:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":8981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2708:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8980,"name":"uint256","nodeType":"ElementaryTypeName","src":"2708:7:29","typeDescriptions":{}}},"id":8983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2708:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":8984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2729:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2708:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8986,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2707:24:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":8989,"name":"freq30","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8941,"src":"2742:6:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":8988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2734:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8987,"name":"uint256","nodeType":"ElementaryTypeName","src":"2734:7:29","typeDescriptions":{}}},"id":8990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2734:15:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2707:42:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2681:68:29"},{"expression":{"id":9003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8993,"name":"newScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8937,"src":"2759:8:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8994,"name":"calculatedScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8979,"src":"2770:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8995,"name":"MAX_SCORE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8861,"src":"2788:9:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"2770:27:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":9000,"name":"calculatedScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8979,"src":"2819:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2812:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":8998,"name":"uint16","nodeType":"ElementaryTypeName","src":"2812:6:29","typeDescriptions":{}}},"id":9001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2812:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":9002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2770:65:29","trueExpression":{"id":8997,"name":"MAX_SCORE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8861,"src":"2800:9:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"2759:76:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":9004,"nodeType":"ExpressionStatement","src":"2759:76:29"},{"expression":{"id":9009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9005,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8877,"src":"2880:5:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint16_$","typeString":"mapping(address => uint16)"}},"id":9007,"indexExpression":{"id":9006,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8929,"src":"2886:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2880:11:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9008,"name":"newScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8937,"src":"2894:8:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"2880:22:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":9010,"nodeType":"ExpressionStatement","src":"2880:22:29"},{"expression":{"id":9015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9011,"name":"streakDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8882,"src":"2912:10:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint16_$","typeString":"mapping(address => uint16)"}},"id":9013,"indexExpression":{"id":9012,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8929,"src":"2923:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:16:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9014,"name":"newStreak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8939,"src":"2931:9:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"2912:28:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":9016,"nodeType":"ExpressionStatement","src":"2912:28:29"},{"expression":{"id":9021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9017,"name":"lastScoredDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8887,"src":"2950:13:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint40_$","typeString":"mapping(address => uint40)"}},"id":9019,"indexExpression":{"id":9018,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8929,"src":"2964:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2950:19:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9020,"name":"today","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8954,"src":"2972:5:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"2950:27:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":9022,"nodeType":"ExpressionStatement","src":"2950:27:29"},{"eventCall":{"arguments":[{"id":9024,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8929,"src":"3010:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9025,"name":"newScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8937,"src":"3016:8:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":9026,"name":"newStreak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8939,"src":"3026:9:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":9027,"name":"freq30","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8941,"src":"3037:6:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":9023,"name":"ScoreSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9473,"src":"3001:8:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint16_$_t_uint16_$_t_uint8_$returns$__$","typeString":"function (address,uint16,uint16,uint8)"}},"id":9028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3001:43:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9029,"nodeType":"EmitStatement","src":"2996:48:29"}]},"documentation":{"id":8927,"nodeType":"StructuredDocumentation","src":"1749:314:29","text":" @notice Update user's savings consistency score\n @param user User address\n @param userDaysFromPool Array of deposit day indices from the pool\n @return newScore Updated score (0-100)\n @return newStreak Current streak in days\n @return freq30 Frequency in last 30 days"},"functionSelector":"950f2dae","id":9031,"implemented":true,"kind":"function","modifiers":[{"id":8935,"kind":"modifierInvocation","modifierName":{"id":8934,"name":"onlyPool","nameLocations":["2164:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":8900,"src":"2164:8:29"},"nodeType":"ModifierInvocation","src":"2164:8:29"}],"name":"updateScore","nameLocation":"2077:11:29","nodeType":"FunctionDefinition","parameters":{"id":8933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8929,"mutability":"mutable","name":"user","nameLocation":"2097:4:29","nodeType":"VariableDeclaration","scope":9031,"src":"2089:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8928,"name":"address","nodeType":"ElementaryTypeName","src":"2089:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8932,"mutability":"mutable","name":"userDaysFromPool","nameLocation":"2121:16:29","nodeType":"VariableDeclaration","scope":9031,"src":"2103:34:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_calldata_ptr","typeString":"uint40[]"},"typeName":{"baseType":{"id":8930,"name":"uint40","nodeType":"ElementaryTypeName","src":"2103:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":8931,"nodeType":"ArrayTypeName","src":"2103:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_storage_ptr","typeString":"uint40[]"}},"visibility":"internal"}],"src":"2088:50:29"},"returnParameters":{"id":8942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8937,"mutability":"mutable","name":"newScore","nameLocation":"2197:8:29","nodeType":"VariableDeclaration","scope":9031,"src":"2190:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8936,"name":"uint16","nodeType":"ElementaryTypeName","src":"2190:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":8939,"mutability":"mutable","name":"newStreak","nameLocation":"2214:9:29","nodeType":"VariableDeclaration","scope":9031,"src":"2207:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8938,"name":"uint16","nodeType":"ElementaryTypeName","src":"2207:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":8941,"mutability":"mutable","name":"freq30","nameLocation":"2231:6:29","nodeType":"VariableDeclaration","scope":9031,"src":"2225:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8940,"name":"uint8","nodeType":"ElementaryTypeName","src":"2225:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2189:49:29"},"scope":9271,"src":"2068:983:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9105,"nodeType":"Block","src":"3429:686:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9042,"name":"userDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9035,"src":"3614:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_calldata_ptr","typeString":"uint40[] calldata"}},"id":9043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3623:6:29","memberName":"length","nodeType":"MemberAccess","src":"3614:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3633:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3614:20:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9048,"nodeType":"IfStatement","src":"3610:34:29","trueBody":{"expression":{"hexValue":"30","id":9046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3643:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":9041,"id":9047,"nodeType":"Return","src":"3636:8:29"}},{"assignments":[9050],"declarations":[{"constant":false,"id":9050,"mutability":"mutable","name":"mostRecentDay","nameLocation":"3670:13:29","nodeType":"VariableDeclaration","scope":9105,"src":"3663:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":9049,"name":"uint40","nodeType":"ElementaryTypeName","src":"3663:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"id":9057,"initialValue":{"baseExpression":{"id":9051,"name":"userDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9035,"src":"3686:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_calldata_ptr","typeString":"uint40[] calldata"}},"id":9056,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9052,"name":"userDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9035,"src":"3695:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_calldata_ptr","typeString":"uint40[] calldata"}},"id":9053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3704:6:29","memberName":"length","nodeType":"MemberAccess","src":"3695:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3713:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3695:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3686:29:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"VariableDeclarationStatement","src":"3663:52:29"},{"assignments":[9059],"declarations":[{"constant":false,"id":9059,"mutability":"mutable","name":"cutoffDay","nameLocation":"3732:9:29","nodeType":"VariableDeclaration","scope":9105,"src":"3725:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":9058,"name":"uint40","nodeType":"ElementaryTypeName","src":"3725:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"id":9068,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":9062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9060,"name":"mostRecentDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9050,"src":"3744:13:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3239","id":9061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3761:2:29","typeDescriptions":{"typeIdentifier":"t_rational_29_by_1","typeString":"int_const 29"},"value":"29"},"src":"3744:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":9066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3787:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":9067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3744:44:29","trueExpression":{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":9065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9063,"name":"mostRecentDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9050,"src":"3766:13:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3239","id":9064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3782:2:29","typeDescriptions":{"typeIdentifier":"t_rational_29_by_1","typeString":"int_const 29"},"value":"29"},"src":"3766:18:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"VariableDeclarationStatement","src":"3725:63:29"},{"body":{"id":9096,"nodeType":"Block","src":"3870:125:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":9084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9080,"name":"userDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9035,"src":"3888:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_calldata_ptr","typeString":"uint40[] calldata"}},"id":9082,"indexExpression":{"id":9081,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9070,"src":"3897:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3888:11:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":9083,"name":"cutoffDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9059,"src":"3903:9:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"3888:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":9089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9085,"name":"userDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9035,"src":"3916:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_calldata_ptr","typeString":"uint40[] calldata"}},"id":9087,"indexExpression":{"id":9086,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9070,"src":"3925:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3916:11:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":9088,"name":"mostRecentDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9050,"src":"3931:13:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"3916:28:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3888:56:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9095,"nodeType":"IfStatement","src":"3884:101:29","trueBody":{"id":9094,"nodeType":"Block","src":"3946:39:29","statements":[{"expression":{"id":9092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3964:6:29","subExpression":{"id":9091,"name":"freq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9040,"src":"3964:4:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":9093,"nodeType":"ExpressionStatement","src":"3964:6:29"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9073,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9070,"src":"3844:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9074,"name":"userDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9035,"src":"3848:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_calldata_ptr","typeString":"uint40[] calldata"}},"id":9075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3857:6:29","memberName":"length","nodeType":"MemberAccess","src":"3848:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3844:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9097,"initializationExpression":{"assignments":[9070],"declarations":[{"constant":false,"id":9070,"mutability":"mutable","name":"i","nameLocation":"3837:1:29","nodeType":"VariableDeclaration","scope":9097,"src":"3829:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9069,"name":"uint256","nodeType":"ElementaryTypeName","src":"3829:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9072,"initialValue":{"hexValue":"30","id":9071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3841:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3829:13:29"},"loopExpression":{"expression":{"id":9078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3865:3:29","subExpression":{"id":9077,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9070,"src":"3865:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9079,"nodeType":"ExpressionStatement","src":"3865:3:29"},"nodeType":"ForStatement","src":"3824:171:29"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":9100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9098,"name":"freq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9040,"src":"4085:4:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"323535","id":9099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4092:3:29","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4085:10:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":9102,"name":"freq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9040,"src":"4104:4:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":9103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4085:23:29","trueExpression":{"hexValue":"323535","id":9101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4098:3:29","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":9041,"id":9104,"nodeType":"Return","src":"4078:30:29"}]},"documentation":{"id":9032,"nodeType":"StructuredDocumentation","src":"3057:230:29","text":" @notice Calculate frequency of deposits in last 30 days\n @param userDays Array of user's deposit days\n @param today Current day index\n @return freq Number of unique deposit days in last 30 days"},"id":9106,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateFrequency","nameLocation":"3301:19:29","nodeType":"FunctionDefinition","parameters":{"id":9038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9035,"mutability":"mutable","name":"userDays","nameLocation":"3339:8:29","nodeType":"VariableDeclaration","scope":9106,"src":"3321:26:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_calldata_ptr","typeString":"uint40[]"},"typeName":{"baseType":{"id":9033,"name":"uint40","nodeType":"ElementaryTypeName","src":"3321:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":9034,"nodeType":"ArrayTypeName","src":"3321:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_storage_ptr","typeString":"uint40[]"}},"visibility":"internal"},{"constant":false,"id":9037,"mutability":"mutable","name":"today","nameLocation":"3356:5:29","nodeType":"VariableDeclaration","scope":9106,"src":"3349:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":9036,"name":"uint40","nodeType":"ElementaryTypeName","src":"3349:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"3320:42:29"},"returnParameters":{"id":9041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9040,"mutability":"mutable","name":"freq","nameLocation":"3418:4:29","nodeType":"VariableDeclaration","scope":9106,"src":"3412:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9039,"name":"uint8","nodeType":"ElementaryTypeName","src":"3412:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3411:12:29"},"scope":9271,"src":"3292:823:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":9203,"nodeType":"Block","src":"4453:1160:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9119,"name":"userDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9112,"src":"4467:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_calldata_ptr","typeString":"uint40[] calldata"}},"id":9120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4476:6:29","memberName":"length","nodeType":"MemberAccess","src":"4467:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4467:20:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9125,"nodeType":"IfStatement","src":"4463:34:29","trueBody":{"expression":{"hexValue":"30","id":9123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4496:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":9118,"id":9124,"nodeType":"Return","src":"4489:8:29"}},{"assignments":[9127],"declarations":[{"constant":false,"id":9127,"mutability":"mutable","name":"lastDepositDay","nameLocation":"4595:14:29","nodeType":"VariableDeclaration","scope":9203,"src":"4588:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":9126,"name":"uint40","nodeType":"ElementaryTypeName","src":"4588:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"id":9134,"initialValue":{"baseExpression":{"id":9128,"name":"userDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9112,"src":"4612:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_calldata_ptr","typeString":"uint40[] calldata"}},"id":9133,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9129,"name":"userDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9112,"src":"4621:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_calldata_ptr","typeString":"uint40[] calldata"}},"id":9130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4630:6:29","memberName":"length","nodeType":"MemberAccess","src":"4621:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4639:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4621:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4612:29:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"VariableDeclarationStatement","src":"4588:53:29"},{"expression":{"id":9137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9135,"name":"streak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9117,"src":"4892:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":9136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4901:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4892:10:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":9138,"nodeType":"ExpressionStatement","src":"4892:10:29"},{"assignments":[9140],"declarations":[{"constant":false,"id":9140,"mutability":"mutable","name":"expectedPrevDay","nameLocation":"4948:15:29","nodeType":"VariableDeclaration","scope":9203,"src":"4941:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":9139,"name":"uint40","nodeType":"ElementaryTypeName","src":"4941:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"id":9144,"initialValue":{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":9143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9141,"name":"lastDepositDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9127,"src":"4966:14:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4983:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4966:18:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"VariableDeclarationStatement","src":"4941:43:29"},{"body":{"id":9186,"nodeType":"Block","src":"5105:353:29","statements":[{"assignments":[9162],"declarations":[{"constant":false,"id":9162,"mutability":"mutable","name":"currentDay","nameLocation":"5126:10:29","nodeType":"VariableDeclaration","scope":9186,"src":"5119:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":9161,"name":"uint40","nodeType":"ElementaryTypeName","src":"5119:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"id":9169,"initialValue":{"baseExpression":{"id":9163,"name":"userDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9112,"src":"5139:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_calldata_ptr","typeString":"uint40[] calldata"}},"id":9168,"indexExpression":{"arguments":[{"id":9166,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"5156:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5148:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9164,"name":"uint256","nodeType":"ElementaryTypeName","src":"5148:7:29","typeDescriptions":{}}},"id":9167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5148:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5139:20:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"VariableDeclarationStatement","src":"5119:40:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":9172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9170,"name":"currentDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9162,"src":"5238:10:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9171,"name":"expectedPrevDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9140,"src":"5252:15:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"5238:29:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":9184,"nodeType":"Block","src":"5366:82:29","statements":[{"id":9183,"nodeType":"Break","src":"5428:5:29"}]},"id":9185,"nodeType":"IfStatement","src":"5234:214:29","trueBody":{"id":9182,"nodeType":"Block","src":"5269:91:29","statements":[{"expression":{"id":9174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5287:8:29","subExpression":{"id":9173,"name":"streak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9117,"src":"5287:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":9175,"nodeType":"ExpressionStatement","src":"5287:8:29"},{"expression":{"id":9180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9176,"name":"expectedPrevDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9140,"src":"5313:15:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":9179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9177,"name":"currentDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9162,"src":"5331:10:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5344:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5331:14:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"5313:32:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":9181,"nodeType":"ExpressionStatement","src":"5313:32:29"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9155,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"5092:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":9156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5097:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5092:6:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9187,"initializationExpression":{"assignments":[9146],"declarations":[{"constant":false,"id":9146,"mutability":"mutable","name":"i","nameLocation":"5059:1:29","nodeType":"VariableDeclaration","scope":9187,"src":"5052:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9145,"name":"int256","nodeType":"ElementaryTypeName","src":"5052:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":9154,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":9149,"name":"userDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9112,"src":"5070:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_calldata_ptr","typeString":"uint40[] calldata"}},"id":9150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5079:6:29","memberName":"length","nodeType":"MemberAccess","src":"5070:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5063:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9147,"name":"int256","nodeType":"ElementaryTypeName","src":"5063:6:29","typeDescriptions":{}}},"id":9151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5063:23:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":9152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5089:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5063:27:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"5052:38:29"},"loopExpression":{"expression":{"id":9159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"5100:3:29","subExpression":{"id":9158,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"5100:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":9160,"nodeType":"ExpressionStatement","src":"5100:3:29"},"nodeType":"ForStatement","src":"5047:411:29"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":9194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9188,"name":"streak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9117,"src":"5553:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5567:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":9190,"name":"uint16","nodeType":"ElementaryTypeName","src":"5567:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":9189,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5562:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5562:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":9193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5575:3:29","memberName":"max","nodeType":"MemberAccess","src":"5562:16:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"5553:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":9200,"name":"streak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9117,"src":"5600:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":9201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5553:53:29","trueExpression":{"expression":{"arguments":[{"id":9197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5586:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":9196,"name":"uint16","nodeType":"ElementaryTypeName","src":"5586:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":9195,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5581:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5581:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":9199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5594:3:29","memberName":"max","nodeType":"MemberAccess","src":"5581:16:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":9118,"id":9202,"nodeType":"Return","src":"5546:60:29"}]},"documentation":{"id":9107,"nodeType":"StructuredDocumentation","src":"4121:170:29","text":" @notice Calculate current streak with 36h grace period\n @param userDays Array of user's deposit days\n @return streak Current streak in days"},"id":9204,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateStreak","nameLocation":"4305:16:29","nodeType":"FunctionDefinition","parameters":{"id":9115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9204,"src":"4322:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9108,"name":"address","nodeType":"ElementaryTypeName","src":"4322:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9112,"mutability":"mutable","name":"userDays","nameLocation":"4360:8:29","nodeType":"VariableDeclaration","scope":9204,"src":"4342:26:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_calldata_ptr","typeString":"uint40[]"},"typeName":{"baseType":{"id":9110,"name":"uint40","nodeType":"ElementaryTypeName","src":"4342:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":9111,"nodeType":"ArrayTypeName","src":"4342:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_storage_ptr","typeString":"uint40[]"}},"visibility":"internal"},{"constant":false,"id":9114,"mutability":"mutable","name":"today","nameLocation":"4377:5:29","nodeType":"VariableDeclaration","scope":9204,"src":"4370:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":9113,"name":"uint40","nodeType":"ElementaryTypeName","src":"4370:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"4321:62:29"},"returnParameters":{"id":9118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9117,"mutability":"mutable","name":"streak","nameLocation":"4440:6:29","nodeType":"VariableDeclaration","scope":9204,"src":"4433:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9116,"name":"uint16","nodeType":"ElementaryTypeName","src":"4433:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4432:15:29"},"scope":9271,"src":"4296:1317:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"baseFunctions":[9500],"body":{"id":9216,"nodeType":"Block","src":"5823:35:29","statements":[{"expression":{"baseExpression":{"id":9212,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8877,"src":"5840:5:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint16_$","typeString":"mapping(address => uint16)"}},"id":9214,"indexExpression":{"id":9213,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"5846:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5840:11:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":9211,"id":9215,"nodeType":"Return","src":"5833:18:29"}]},"documentation":{"id":9205,"nodeType":"StructuredDocumentation","src":"5619:132:29","text":" @notice Get user's current score\n @param user User address\n @return Current savings consistency score"},"functionSelector":"b34e0c47","id":9217,"implemented":true,"kind":"function","modifiers":[],"name":"getUserScore","nameLocation":"5765:12:29","nodeType":"FunctionDefinition","parameters":{"id":9208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9207,"mutability":"mutable","name":"user","nameLocation":"5786:4:29","nodeType":"VariableDeclaration","scope":9217,"src":"5778:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9206,"name":"address","nodeType":"ElementaryTypeName","src":"5778:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5777:14:29"},"returnParameters":{"id":9211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9217,"src":"5815:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9209,"name":"uint16","nodeType":"ElementaryTypeName","src":"5815:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5814:8:29"},"scope":9271,"src":"5756:102:29","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[9508],"body":{"id":9229,"nodeType":"Block","src":"6059:40:29","statements":[{"expression":{"baseExpression":{"id":9225,"name":"streakDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8882,"src":"6076:10:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint16_$","typeString":"mapping(address => uint16)"}},"id":9227,"indexExpression":{"id":9226,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9220,"src":"6087:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6076:16:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":9224,"id":9228,"nodeType":"Return","src":"6069:23:29"}]},"documentation":{"id":9218,"nodeType":"StructuredDocumentation","src":"5864:122:29","text":" @notice Get user's current streak\n @param user User address\n @return Current streak in days"},"functionSelector":"c57f2dfd","id":9230,"implemented":true,"kind":"function","modifiers":[],"name":"getUserStreak","nameLocation":"6000:13:29","nodeType":"FunctionDefinition","parameters":{"id":9221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9220,"mutability":"mutable","name":"user","nameLocation":"6022:4:29","nodeType":"VariableDeclaration","scope":9230,"src":"6014:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9219,"name":"address","nodeType":"ElementaryTypeName","src":"6014:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6013:14:29"},"returnParameters":{"id":9224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9230,"src":"6051:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9222,"name":"uint16","nodeType":"ElementaryTypeName","src":"6051:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"6050:8:29"},"scope":9271,"src":"5991:108:29","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[9516],"body":{"id":9240,"nodeType":"Block","src":"6364:151:29","statements":[{"expression":{"hexValue":"30","id":9238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6507:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":9237,"id":9239,"nodeType":"Return","src":"6500:8:29"}]},"documentation":{"id":9231,"nodeType":"StructuredDocumentation","src":"6105:181:29","text":" @notice Get user's frequency in last 30 days\n @return Deposit frequency in last 30 days\n @dev This is a view function that recalculates from pool data"},"functionSelector":"4a9359da","id":9241,"implemented":true,"kind":"function","modifiers":[],"name":"getUserFreq30","nameLocation":"6300:13:29","nodeType":"FunctionDefinition","parameters":{"id":9234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9241,"src":"6314:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9232,"name":"address","nodeType":"ElementaryTypeName","src":"6314:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6313:20:29"},"returnParameters":{"id":9237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9241,"src":"6357:5:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9235,"name":"uint8","nodeType":"ElementaryTypeName","src":"6357:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6356:7:29"},"scope":9271,"src":"6291:224:29","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[9528],"body":{"id":9269,"nodeType":"Block","src":"6896:131:29","statements":[{"expression":{"id":9257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9253,"name":"userScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9247,"src":"6906:9:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":9254,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8877,"src":"6918:5:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint16_$","typeString":"mapping(address => uint16)"}},"id":9256,"indexExpression":{"id":9255,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9244,"src":"6924:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6918:11:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"6906:23:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":9258,"nodeType":"ExpressionStatement","src":"6906:23:29"},{"expression":{"id":9263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9259,"name":"userStreak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9249,"src":"6939:10:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":9260,"name":"streakDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8882,"src":"6952:10:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint16_$","typeString":"mapping(address => uint16)"}},"id":9262,"indexExpression":{"id":9261,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9244,"src":"6963:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6952:16:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"6939:29:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":9264,"nodeType":"ExpressionStatement","src":"6939:29:29"},{"expression":{"id":9267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9265,"name":"freq30","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9251,"src":"6978:6:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":9266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6987:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6978:10:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":9268,"nodeType":"ExpressionStatement","src":"6978:10:29"}]},"documentation":{"id":9242,"nodeType":"StructuredDocumentation","src":"6521:228:29","text":" @notice Get comprehensive user stats\n @param user User address\n @return userScore Current score\n @return userStreak Current streak\n @return freq30 Frequency in last 30 days (simplified)"},"functionSelector":"4e43603a","id":9270,"implemented":true,"kind":"function","modifiers":[],"name":"getUserStats","nameLocation":"6763:12:29","nodeType":"FunctionDefinition","parameters":{"id":9245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9244,"mutability":"mutable","name":"user","nameLocation":"6784:4:29","nodeType":"VariableDeclaration","scope":9270,"src":"6776:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9243,"name":"address","nodeType":"ElementaryTypeName","src":"6776:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6775:14:29"},"returnParameters":{"id":9252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9247,"mutability":"mutable","name":"userScore","nameLocation":"6847:9:29","nodeType":"VariableDeclaration","scope":9270,"src":"6840:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9246,"name":"uint16","nodeType":"ElementaryTypeName","src":"6840:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":9249,"mutability":"mutable","name":"userStreak","nameLocation":"6865:10:29","nodeType":"VariableDeclaration","scope":9270,"src":"6858:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9248,"name":"uint16","nodeType":"ElementaryTypeName","src":"6858:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":9251,"mutability":"mutable","name":"freq30","nameLocation":"6883:6:29","nodeType":"VariableDeclaration","scope":9270,"src":"6877:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9250,"name":"uint8","nodeType":"ElementaryTypeName","src":"6877:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6839:51:29"},"scope":9271,"src":"6754:273:29","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9272,"src":"457:6572:29","usedErrors":[13,18,9475,9477],"usedEvents":[24,9473]}],"src":"32:6998:29"},"id":29},"contracts/interfaces/IRewardVault.sol":{"ast":{"absolutePath":"contracts/interfaces/IRewardVault.sol","exportedSymbols":{"IRewardVault":[9329]},"id":9330,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9273,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:30"},{"abstract":false,"baseContracts":[],"canonicalName":"IRewardVault","contractDependencies":[],"contractKind":"interface","documentation":{"id":9274,"nodeType":"StructuredDocumentation","src":"58:158:30","text":" @title IRewardVault\n @notice Interface for the MicroSave reward points system\n @dev Manages point allocation and claiming for consistent savers"},"fullyImplemented":false,"id":9329,"linearizedBaseContracts":[9329],"name":"IRewardVault","nameLocation":"227:12:30","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"81ecaaa31e69fc17832354b83912ed393c78921b2e6fcf355113f2fb513e4f99","id":9282,"name":"PointsAwarded","nameLocation":"266:13:30","nodeType":"EventDefinition","parameters":{"id":9281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9276,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"296:4:30","nodeType":"VariableDeclaration","scope":9282,"src":"280:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9275,"name":"address","nodeType":"ElementaryTypeName","src":"280:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9278,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"310:6:30","nodeType":"VariableDeclaration","scope":9282,"src":"302:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9277,"name":"uint256","nodeType":"ElementaryTypeName","src":"302:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9280,"indexed":false,"mutability":"mutable","name":"streak","nameLocation":"325:6:30","nodeType":"VariableDeclaration","scope":9282,"src":"318:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9279,"name":"uint16","nodeType":"ElementaryTypeName","src":"318:6:30","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"279:53:30"},"src":"260:73:30"},{"anonymous":false,"eventSelector":"ba953728785de35be3827ee7a7a7867a8472947562602939440e6c0bdbf4725e","id":9288,"name":"PointsClaimed","nameLocation":"344:13:30","nodeType":"EventDefinition","parameters":{"id":9287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9284,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"374:4:30","nodeType":"VariableDeclaration","scope":9288,"src":"358:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9283,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9286,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"388:6:30","nodeType":"VariableDeclaration","scope":9288,"src":"380:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9285,"name":"uint256","nodeType":"ElementaryTypeName","src":"380:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"357:38:30"},"src":"338:58:30"},{"errorSelector":"4b602735","id":9290,"name":"OnlyPool","nameLocation":"422:8:30","nodeType":"ErrorDefinition","parameters":{"id":9289,"nodeType":"ParameterList","parameters":[],"src":"430:2:30"},"src":"416:17:30"},{"errorSelector":"303e7a07","id":9292,"name":"InsufficientPoints","nameLocation":"444:18:30","nodeType":"ErrorDefinition","parameters":{"id":9291,"nodeType":"ParameterList","parameters":[],"src":"462:2:30"},"src":"438:27:30"},{"errorSelector":"2c5211c6","id":9294,"name":"InvalidAmount","nameLocation":"476:13:30","nodeType":"ErrorDefinition","parameters":{"id":9293,"nodeType":"ParameterList","parameters":[],"src":"489:2:30"},"src":"470:22:30"},{"documentation":{"id":9295,"nodeType":"StructuredDocumentation","src":"498:154:30","text":" @notice Called by SavingsPool on each deposit day\n @param user User who made the deposit\n @param streak Current streak days"},"functionSelector":"b0fb5664","id":9302,"implemented":false,"kind":"function","modifiers":[],"name":"onDepositDay","nameLocation":"666:12:30","nodeType":"FunctionDefinition","parameters":{"id":9300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9297,"mutability":"mutable","name":"user","nameLocation":"687:4:30","nodeType":"VariableDeclaration","scope":9302,"src":"679:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9296,"name":"address","nodeType":"ElementaryTypeName","src":"679:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9299,"mutability":"mutable","name":"streak","nameLocation":"700:6:30","nodeType":"VariableDeclaration","scope":9302,"src":"693:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9298,"name":"uint16","nodeType":"ElementaryTypeName","src":"693:6:30","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"678:29:30"},"returnParameters":{"id":9301,"nodeType":"ParameterList","parameters":[],"src":"716:0:30"},"scope":9329,"src":"657:60:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9303,"nodeType":"StructuredDocumentation","src":"723:111:30","text":" @notice Claim accumulated points (burns them)\n @param amount Amount of points to claim"},"functionSelector":"3ac795de","id":9308,"implemented":false,"kind":"function","modifiers":[],"name":"claimPoints","nameLocation":"848:11:30","nodeType":"FunctionDefinition","parameters":{"id":9306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9305,"mutability":"mutable","name":"amount","nameLocation":"868:6:30","nodeType":"VariableDeclaration","scope":9308,"src":"860:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9304,"name":"uint256","nodeType":"ElementaryTypeName","src":"860:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"859:16:30"},"returnParameters":{"id":9307,"nodeType":"ParameterList","parameters":[],"src":"884:0:30"},"scope":9329,"src":"839:46:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9309,"nodeType":"StructuredDocumentation","src":"891:128:30","text":" @notice Get user's current point balance\n @param user User address\n @return Current point balance"},"functionSelector":"ee204abb","id":9316,"implemented":false,"kind":"function","modifiers":[],"name":"getPoints","nameLocation":"1033:9:30","nodeType":"FunctionDefinition","parameters":{"id":9312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9311,"mutability":"mutable","name":"user","nameLocation":"1051:4:30","nodeType":"VariableDeclaration","scope":9316,"src":"1043:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9310,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1042:14:30"},"returnParameters":{"id":9315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9316,"src":"1080:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9313,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1079:9:30"},"scope":9329,"src":"1024:65:30","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"358b8166","id":9323,"implemented":false,"kind":"function","modifiers":[],"name":"points","nameLocation":"1127:6:30","nodeType":"FunctionDefinition","parameters":{"id":9319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9318,"mutability":"mutable","name":"user","nameLocation":"1142:4:30","nodeType":"VariableDeclaration","scope":9323,"src":"1134:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9317,"name":"address","nodeType":"ElementaryTypeName","src":"1134:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1133:14:30"},"returnParameters":{"id":9322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9323,"src":"1171:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1171:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1170:9:30"},"scope":9329,"src":"1118:62:30","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6fa0e653","id":9328,"implemented":false,"kind":"function","modifiers":[],"name":"savingsPool","nameLocation":"1194:11:30","nodeType":"FunctionDefinition","parameters":{"id":9324,"nodeType":"ParameterList","parameters":[],"src":"1205:2:30"},"returnParameters":{"id":9327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9328,"src":"1231:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9325,"name":"address","nodeType":"ElementaryTypeName","src":"1231:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1230:9:30"},"scope":9329,"src":"1185:55:30","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9330,"src":"217:1025:30","usedErrors":[9290,9292,9294],"usedEvents":[9282,9288]}],"src":"32:1211:30"},"id":30},"contracts/interfaces/ISavingsPool.sol":{"ast":{"absolutePath":"contracts/interfaces/ISavingsPool.sol","exportedSymbols":{"IERC20":[992],"IRewardVault":[9329],"ISavingsPool":[9460],"IScoreRegistry":[9548]},"id":9461,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9331,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:31"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":9332,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9461,"sourceUnit":993,"src":"58:56:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IScoreRegistry.sol","file":"./IScoreRegistry.sol","id":9333,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9461,"sourceUnit":9549,"src":"115:30:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IRewardVault.sol","file":"./IRewardVault.sol","id":9334,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9461,"sourceUnit":9330,"src":"146:28:31","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ISavingsPool","contractDependencies":[],"contractKind":"interface","documentation":{"id":9335,"nodeType":"StructuredDocumentation","src":"176:179:31","text":" @title ISavingsPool\n @notice Interface for the core MicroSave savings pool contract\n @dev Handles stablecoin deposits/withdrawals and integrates with scoring system"},"fullyImplemented":false,"id":9460,"linearizedBaseContracts":[9460],"name":"ISavingsPool","nameLocation":"366:12:31","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"cb5867ada7e790a7d70414567cba30a43473fe877223b5fa637f5af7edd02e52","id":9345,"name":"Deposited","nameLocation":"405:9:31","nodeType":"EventDefinition","parameters":{"id":9344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9337,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"431:4:31","nodeType":"VariableDeclaration","scope":9345,"src":"415:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9336,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9339,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"445:6:31","nodeType":"VariableDeclaration","scope":9345,"src":"437:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9338,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9341,"indexed":false,"mutability":"mutable","name":"netAmount","nameLocation":"461:9:31","nodeType":"VariableDeclaration","scope":9345,"src":"453:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9340,"name":"uint256","nodeType":"ElementaryTypeName","src":"453:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9343,"indexed":false,"mutability":"mutable","name":"dayIndex","nameLocation":"479:8:31","nodeType":"VariableDeclaration","scope":9345,"src":"472:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":9342,"name":"uint40","nodeType":"ElementaryTypeName","src":"472:6:31","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"414:74:31"},"src":"399:90:31"},{"anonymous":false,"eventSelector":"7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5","id":9351,"name":"Withdrawn","nameLocation":"500:9:31","nodeType":"EventDefinition","parameters":{"id":9350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9347,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"526:4:31","nodeType":"VariableDeclaration","scope":9351,"src":"510:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9346,"name":"address","nodeType":"ElementaryTypeName","src":"510:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9349,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"540:6:31","nodeType":"VariableDeclaration","scope":9351,"src":"532:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9348,"name":"uint256","nodeType":"ElementaryTypeName","src":"532:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"509:38:31"},"src":"494:54:31"},{"anonymous":false,"eventSelector":"9b24ce28727f6853c576fdd52d3dd47b59988260937e521e19296bcf93361fa6","id":9361,"name":"ScoreUpdated","nameLocation":"559:12:31","nodeType":"EventDefinition","parameters":{"id":9360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9353,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"588:4:31","nodeType":"VariableDeclaration","scope":9361,"src":"572:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9352,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9355,"indexed":false,"mutability":"mutable","name":"newScore","nameLocation":"601:8:31","nodeType":"VariableDeclaration","scope":9361,"src":"594:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9354,"name":"uint16","nodeType":"ElementaryTypeName","src":"594:6:31","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":9357,"indexed":false,"mutability":"mutable","name":"streakDays","nameLocation":"618:10:31","nodeType":"VariableDeclaration","scope":9361,"src":"611:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9356,"name":"uint16","nodeType":"ElementaryTypeName","src":"611:6:31","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":9359,"indexed":false,"mutability":"mutable","name":"freq30","nameLocation":"636:6:31","nodeType":"VariableDeclaration","scope":9361,"src":"630:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9358,"name":"uint8","nodeType":"ElementaryTypeName","src":"630:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"571:72:31"},"src":"553:91:31"},{"anonymous":false,"eventSelector":"c8fcf8ee1425e7e60b8af83735e1eb516d5b9ef05bfd6eece552ebaeb7c75b48","id":9365,"name":"FeeUpdated","nameLocation":"655:10:31","nodeType":"EventDefinition","parameters":{"id":9364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9363,"indexed":false,"mutability":"mutable","name":"depositFeeBps","nameLocation":"673:13:31","nodeType":"VariableDeclaration","scope":9365,"src":"666:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9362,"name":"uint16","nodeType":"ElementaryTypeName","src":"666:6:31","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"665:22:31"},"src":"649:39:31"},{"anonymous":false,"eventSelector":"7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d1","id":9369,"name":"TreasuryUpdated","nameLocation":"699:15:31","nodeType":"EventDefinition","parameters":{"id":9368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9367,"indexed":false,"mutability":"mutable","name":"treasury","nameLocation":"723:8:31","nodeType":"VariableDeclaration","scope":9369,"src":"715:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9366,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"714:18:31"},"src":"693:40:31"},{"errorSelector":"5945ea56","id":9371,"name":"InsufficientAmount","nameLocation":"759:18:31","nodeType":"ErrorDefinition","parameters":{"id":9370,"nodeType":"ParameterList","parameters":[],"src":"777:2:31"},"src":"753:27:31"},{"errorSelector":"f4d678b8","id":9373,"name":"InsufficientBalance","nameLocation":"791:19:31","nodeType":"ErrorDefinition","parameters":{"id":9372,"nodeType":"ParameterList","parameters":[],"src":"810:2:31"},"src":"785:28:31"},{"errorSelector":"c1ab6dc1","id":9375,"name":"InvalidToken","nameLocation":"824:12:31","nodeType":"ErrorDefinition","parameters":{"id":9374,"nodeType":"ParameterList","parameters":[],"src":"836:2:31"},"src":"818:21:31"},{"errorSelector":"0d0ad801","id":9377,"name":"NoPermitSupport","nameLocation":"850:15:31","nodeType":"ErrorDefinition","parameters":{"id":9376,"nodeType":"ParameterList","parameters":[],"src":"865:2:31"},"src":"844:24:31"},{"errorSelector":"d92e233d","id":9379,"name":"ZeroAddress","nameLocation":"879:11:31","nodeType":"ErrorDefinition","parameters":{"id":9378,"nodeType":"ParameterList","parameters":[],"src":"890:2:31"},"src":"873:20:31"},{"errorSelector":"2977da44","id":9381,"name":"ExcessiveFee","nameLocation":"904:12:31","nodeType":"ErrorDefinition","parameters":{"id":9380,"nodeType":"ParameterList","parameters":[],"src":"916:2:31"},"src":"898:21:31"},{"documentation":{"id":9382,"nodeType":"StructuredDocumentation","src":"925:106:31","text":" @notice Deposit stablecoin into the savings pool\n @param amount Amount to deposit"},"functionSelector":"b6b55f25","id":9387,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"1045:7:31","nodeType":"FunctionDefinition","parameters":{"id":9385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9384,"mutability":"mutable","name":"amount","nameLocation":"1061:6:31","nodeType":"VariableDeclaration","scope":9387,"src":"1053:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9383,"name":"uint256","nodeType":"ElementaryTypeName","src":"1053:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1052:16:31"},"returnParameters":{"id":9386,"nodeType":"ParameterList","parameters":[],"src":"1077:0:31"},"scope":9460,"src":"1036:42:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9388,"nodeType":"StructuredDocumentation","src":"1084:260:31","text":" @notice Deposit with EIP-2612 permit (gasless approval)\n @param amount Amount to deposit\n @param deadline Permit deadline\n @param v Signature parameter\n @param r Signature parameter\n @param s Signature parameter"},"functionSelector":"ce84daad","id":9401,"implemented":false,"kind":"function","modifiers":[],"name":"permitDeposit","nameLocation":"1358:13:31","nodeType":"FunctionDefinition","parameters":{"id":9399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9390,"mutability":"mutable","name":"amount","nameLocation":"1389:6:31","nodeType":"VariableDeclaration","scope":9401,"src":"1381:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9389,"name":"uint256","nodeType":"ElementaryTypeName","src":"1381:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9392,"mutability":"mutable","name":"deadline","nameLocation":"1413:8:31","nodeType":"VariableDeclaration","scope":9401,"src":"1405:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9391,"name":"uint256","nodeType":"ElementaryTypeName","src":"1405:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9394,"mutability":"mutable","name":"v","nameLocation":"1437:1:31","nodeType":"VariableDeclaration","scope":9401,"src":"1431:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9393,"name":"uint8","nodeType":"ElementaryTypeName","src":"1431:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":9396,"mutability":"mutable","name":"r","nameLocation":"1456:1:31","nodeType":"VariableDeclaration","scope":9401,"src":"1448:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9395,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1448:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9398,"mutability":"mutable","name":"s","nameLocation":"1475:1:31","nodeType":"VariableDeclaration","scope":9401,"src":"1467:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9397,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1467:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1371:111:31"},"returnParameters":{"id":9400,"nodeType":"ParameterList","parameters":[],"src":"1491:0:31"},"scope":9460,"src":"1349:143:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9402,"nodeType":"StructuredDocumentation","src":"1498:108:31","text":" @notice Withdraw stablecoin from the savings pool\n @param amount Amount to withdraw"},"functionSelector":"2e1a7d4d","id":9407,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"1620:8:31","nodeType":"FunctionDefinition","parameters":{"id":9405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9404,"mutability":"mutable","name":"amount","nameLocation":"1637:6:31","nodeType":"VariableDeclaration","scope":9407,"src":"1629:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1629:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1628:16:31"},"returnParameters":{"id":9406,"nodeType":"ParameterList","parameters":[],"src":"1653:0:31"},"scope":9460,"src":"1611:43:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9408,"nodeType":"StructuredDocumentation","src":"1660:111:31","text":" @notice Set deposit fee (only owner)\n @param depositFeeBps Fee in basis points (0-100)"},"functionSelector":"023b1fc9","id":9413,"implemented":false,"kind":"function","modifiers":[],"name":"setFeeBps","nameLocation":"1785:9:31","nodeType":"FunctionDefinition","parameters":{"id":9411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9410,"mutability":"mutable","name":"depositFeeBps","nameLocation":"1802:13:31","nodeType":"VariableDeclaration","scope":9413,"src":"1795:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9409,"name":"uint16","nodeType":"ElementaryTypeName","src":"1795:6:31","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1794:22:31"},"returnParameters":{"id":9412,"nodeType":"ParameterList","parameters":[],"src":"1825:0:31"},"scope":9460,"src":"1776:50:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9414,"nodeType":"StructuredDocumentation","src":"1832:104:31","text":" @notice Set treasury address (only owner)\n @param treasury New treasury address"},"functionSelector":"f0f44260","id":9419,"implemented":false,"kind":"function","modifiers":[],"name":"setTreasury","nameLocation":"1950:11:31","nodeType":"FunctionDefinition","parameters":{"id":9417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9416,"mutability":"mutable","name":"treasury","nameLocation":"1970:8:31","nodeType":"VariableDeclaration","scope":9419,"src":"1962:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9415,"name":"address","nodeType":"ElementaryTypeName","src":"1962:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1961:18:31"},"returnParameters":{"id":9418,"nodeType":"ParameterList","parameters":[],"src":"1988:0:31"},"scope":9460,"src":"1941:48:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"27e235e3","id":9426,"implemented":false,"kind":"function","modifiers":[],"name":"balances","nameLocation":"2026:8:31","nodeType":"FunctionDefinition","parameters":{"id":9422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9421,"mutability":"mutable","name":"user","nameLocation":"2043:4:31","nodeType":"VariableDeclaration","scope":9426,"src":"2035:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9420,"name":"address","nodeType":"ElementaryTypeName","src":"2035:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2034:14:31"},"returnParameters":{"id":9425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9426,"src":"2072:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9423,"name":"uint256","nodeType":"ElementaryTypeName","src":"2072:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2071:9:31"},"scope":9460,"src":"2017:64:31","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7d882097","id":9431,"implemented":false,"kind":"function","modifiers":[],"name":"totalDeposits","nameLocation":"2095:13:31","nodeType":"FunctionDefinition","parameters":{"id":9427,"nodeType":"ParameterList","parameters":[],"src":"2108:2:31"},"returnParameters":{"id":9430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9431,"src":"2134:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9428,"name":"uint256","nodeType":"ElementaryTypeName","src":"2134:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2133:9:31"},"scope":9460,"src":"2086:57:31","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54d9f653","id":9437,"implemented":false,"kind":"function","modifiers":[],"name":"STABLE","nameLocation":"2157:6:31","nodeType":"FunctionDefinition","parameters":{"id":9432,"nodeType":"ParameterList","parameters":[],"src":"2163:2:31"},"returnParameters":{"id":9436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9437,"src":"2189:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"},"typeName":{"id":9434,"nodeType":"UserDefinedTypeName","pathNode":{"id":9433,"name":"IERC20","nameLocations":["2189:6:31"],"nodeType":"IdentifierPath","referencedDeclaration":992,"src":"2189:6:31"},"referencedDeclaration":992,"src":"2189:6:31","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$992","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"2188:8:31"},"scope":9460,"src":"2148:49:31","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3eb8104a","id":9443,"implemented":false,"kind":"function","modifiers":[],"name":"scoreRegistry","nameLocation":"2211:13:31","nodeType":"FunctionDefinition","parameters":{"id":9438,"nodeType":"ParameterList","parameters":[],"src":"2224:2:31"},"returnParameters":{"id":9442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9443,"src":"2250:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IScoreRegistry_$9548","typeString":"contract IScoreRegistry"},"typeName":{"id":9440,"nodeType":"UserDefinedTypeName","pathNode":{"id":9439,"name":"IScoreRegistry","nameLocations":["2250:14:31"],"nodeType":"IdentifierPath","referencedDeclaration":9548,"src":"2250:14:31"},"referencedDeclaration":9548,"src":"2250:14:31","typeDescriptions":{"typeIdentifier":"t_contract$_IScoreRegistry_$9548","typeString":"contract IScoreRegistry"}},"visibility":"internal"}],"src":"2249:16:31"},"scope":9460,"src":"2202:64:31","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3a2c6777","id":9449,"implemented":false,"kind":"function","modifiers":[],"name":"rewardVault","nameLocation":"2280:11:31","nodeType":"FunctionDefinition","parameters":{"id":9444,"nodeType":"ParameterList","parameters":[],"src":"2291:2:31"},"returnParameters":{"id":9448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9449,"src":"2317:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardVault_$9329","typeString":"contract IRewardVault"},"typeName":{"id":9446,"nodeType":"UserDefinedTypeName","pathNode":{"id":9445,"name":"IRewardVault","nameLocations":["2317:12:31"],"nodeType":"IdentifierPath","referencedDeclaration":9329,"src":"2317:12:31"},"referencedDeclaration":9329,"src":"2317:12:31","typeDescriptions":{"typeIdentifier":"t_contract$_IRewardVault_$9329","typeString":"contract IRewardVault"}},"visibility":"internal"}],"src":"2316:14:31"},"scope":9460,"src":"2271:60:31","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"61d027b3","id":9454,"implemented":false,"kind":"function","modifiers":[],"name":"treasury","nameLocation":"2345:8:31","nodeType":"FunctionDefinition","parameters":{"id":9450,"nodeType":"ParameterList","parameters":[],"src":"2353:2:31"},"returnParameters":{"id":9453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9454,"src":"2379:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9451,"name":"address","nodeType":"ElementaryTypeName","src":"2379:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2378:9:31"},"scope":9460,"src":"2336:52:31","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ab879827","id":9459,"implemented":false,"kind":"function","modifiers":[],"name":"depositFeeBps","nameLocation":"2402:13:31","nodeType":"FunctionDefinition","parameters":{"id":9455,"nodeType":"ParameterList","parameters":[],"src":"2415:2:31"},"returnParameters":{"id":9458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9459,"src":"2441:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9456,"name":"uint16","nodeType":"ElementaryTypeName","src":"2441:6:31","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"2440:8:31"},"scope":9460,"src":"2393:56:31","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9461,"src":"356:2095:31","usedErrors":[9371,9373,9375,9377,9379,9381],"usedEvents":[9345,9351,9361,9365,9369]}],"src":"32:2420:31"},"id":31},"contracts/interfaces/IScoreRegistry.sol":{"ast":{"absolutePath":"contracts/interfaces/IScoreRegistry.sol","exportedSymbols":{"IScoreRegistry":[9548]},"id":9549,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9462,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:32"},{"abstract":false,"baseContracts":[],"canonicalName":"IScoreRegistry","contractDependencies":[],"contractKind":"interface","documentation":{"id":9463,"nodeType":"StructuredDocumentation","src":"58:183:32","text":" @title IScoreRegistry\n @notice Interface for the Savings Consistency Score (SCS) registry\n @dev Calculates and stores user scores based on deposit frequency and streaks"},"fullyImplemented":false,"id":9548,"linearizedBaseContracts":[9548],"name":"IScoreRegistry","nameLocation":"252:14:32","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"d4aa3a778f7de8988dd04fa0d6d79d3bc629ecfd224a29ed9300321606c5f80b","id":9473,"name":"ScoreSet","nameLocation":"293:8:32","nodeType":"EventDefinition","parameters":{"id":9472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9465,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"318:4:32","nodeType":"VariableDeclaration","scope":9473,"src":"302:20:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9464,"name":"address","nodeType":"ElementaryTypeName","src":"302:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9467,"indexed":false,"mutability":"mutable","name":"score","nameLocation":"331:5:32","nodeType":"VariableDeclaration","scope":9473,"src":"324:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9466,"name":"uint16","nodeType":"ElementaryTypeName","src":"324:6:32","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":9469,"indexed":false,"mutability":"mutable","name":"streak","nameLocation":"345:6:32","nodeType":"VariableDeclaration","scope":9473,"src":"338:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9468,"name":"uint16","nodeType":"ElementaryTypeName","src":"338:6:32","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":9471,"indexed":false,"mutability":"mutable","name":"freq30","nameLocation":"359:6:32","nodeType":"VariableDeclaration","scope":9473,"src":"353:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9470,"name":"uint8","nodeType":"ElementaryTypeName","src":"353:5:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"301:65:32"},"src":"287:80:32"},{"errorSelector":"4b602735","id":9475,"name":"OnlyPool","nameLocation":"393:8:32","nodeType":"ErrorDefinition","parameters":{"id":9474,"nodeType":"ParameterList","parameters":[],"src":"401:2:32"},"src":"387:17:32"},{"errorSelector":"fd684c3b","id":9477,"name":"InvalidUser","nameLocation":"415:11:32","nodeType":"ErrorDefinition","parameters":{"id":9476,"nodeType":"ParameterList","parameters":[],"src":"426:2:32"},"src":"409:20:32"},{"documentation":{"id":9478,"nodeType":"StructuredDocumentation","src":"435:314:32","text":" @notice Update user's savings consistency score\n @param user User address\n @param userDaysFromPool Array of deposit day indices from the pool\n @return newScore Updated score (0-100)\n @return newStreak Current streak in days\n @return freq30 Frequency in last 30 days"},"functionSelector":"950f2dae","id":9492,"implemented":false,"kind":"function","modifiers":[],"name":"updateScore","nameLocation":"763:11:32","nodeType":"FunctionDefinition","parameters":{"id":9484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9480,"mutability":"mutable","name":"user","nameLocation":"783:4:32","nodeType":"VariableDeclaration","scope":9492,"src":"775:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9479,"name":"address","nodeType":"ElementaryTypeName","src":"775:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9483,"mutability":"mutable","name":"userDaysFromPool","nameLocation":"807:16:32","nodeType":"VariableDeclaration","scope":9492,"src":"789:34:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_calldata_ptr","typeString":"uint40[]"},"typeName":{"baseType":{"id":9481,"name":"uint40","nodeType":"ElementaryTypeName","src":"789:6:32","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":9482,"nodeType":"ArrayTypeName","src":"789:8:32","typeDescriptions":{"typeIdentifier":"t_array$_t_uint40_$dyn_storage_ptr","typeString":"uint40[]"}},"visibility":"internal"}],"src":"774:50:32"},"returnParameters":{"id":9491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9486,"mutability":"mutable","name":"newScore","nameLocation":"866:8:32","nodeType":"VariableDeclaration","scope":9492,"src":"859:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9485,"name":"uint16","nodeType":"ElementaryTypeName","src":"859:6:32","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":9488,"mutability":"mutable","name":"newStreak","nameLocation":"883:9:32","nodeType":"VariableDeclaration","scope":9492,"src":"876:16:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9487,"name":"uint16","nodeType":"ElementaryTypeName","src":"876:6:32","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":9490,"mutability":"mutable","name":"freq30","nameLocation":"900:6:32","nodeType":"VariableDeclaration","scope":9492,"src":"894:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9489,"name":"uint8","nodeType":"ElementaryTypeName","src":"894:5:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"858:49:32"},"scope":9548,"src":"754:154:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9493,"nodeType":"StructuredDocumentation","src":"914:132:32","text":" @notice Get user's current score\n @param user User address\n @return Current savings consistency score"},"functionSelector":"b34e0c47","id":9500,"implemented":false,"kind":"function","modifiers":[],"name":"getUserScore","nameLocation":"1060:12:32","nodeType":"FunctionDefinition","parameters":{"id":9496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9495,"mutability":"mutable","name":"user","nameLocation":"1081:4:32","nodeType":"VariableDeclaration","scope":9500,"src":"1073:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9494,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1072:14:32"},"returnParameters":{"id":9499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9500,"src":"1110:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9497,"name":"uint16","nodeType":"ElementaryTypeName","src":"1110:6:32","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1109:8:32"},"scope":9548,"src":"1051:67:32","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9501,"nodeType":"StructuredDocumentation","src":"1124:122:32","text":" @notice Get user's current streak\n @param user User address\n @return Current streak in days"},"functionSelector":"c57f2dfd","id":9508,"implemented":false,"kind":"function","modifiers":[],"name":"getUserStreak","nameLocation":"1260:13:32","nodeType":"FunctionDefinition","parameters":{"id":9504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9503,"mutability":"mutable","name":"user","nameLocation":"1282:4:32","nodeType":"VariableDeclaration","scope":9508,"src":"1274:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9502,"name":"address","nodeType":"ElementaryTypeName","src":"1274:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1273:14:32"},"returnParameters":{"id":9507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9508,"src":"1311:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9505,"name":"uint16","nodeType":"ElementaryTypeName","src":"1311:6:32","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1310:8:32"},"scope":9548,"src":"1251:68:32","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9509,"nodeType":"StructuredDocumentation","src":"1325:144:32","text":" @notice Get user's frequency in last 30 days\n @param user User address\n @return Deposit frequency in last 30 days"},"functionSelector":"4a9359da","id":9516,"implemented":false,"kind":"function","modifiers":[],"name":"getUserFreq30","nameLocation":"1483:13:32","nodeType":"FunctionDefinition","parameters":{"id":9512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9511,"mutability":"mutable","name":"user","nameLocation":"1505:4:32","nodeType":"VariableDeclaration","scope":9516,"src":"1497:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9510,"name":"address","nodeType":"ElementaryTypeName","src":"1497:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1496:14:32"},"returnParameters":{"id":9515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9516,"src":"1534:5:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9513,"name":"uint8","nodeType":"ElementaryTypeName","src":"1534:5:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1533:7:32"},"scope":9548,"src":"1474:67:32","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9517,"nodeType":"StructuredDocumentation","src":"1547:207:32","text":" @notice Get comprehensive user stats\n @param user User address\n @return score Current score\n @return streak Current streak\n @return freq30 Frequency in last 30 days"},"functionSelector":"4e43603a","id":9528,"implemented":false,"kind":"function","modifiers":[],"name":"getUserStats","nameLocation":"1768:12:32","nodeType":"FunctionDefinition","parameters":{"id":9520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9519,"mutability":"mutable","name":"user","nameLocation":"1789:4:32","nodeType":"VariableDeclaration","scope":9528,"src":"1781:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9518,"name":"address","nodeType":"ElementaryTypeName","src":"1781:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1780:14:32"},"returnParameters":{"id":9527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9522,"mutability":"mutable","name":"score","nameLocation":"1825:5:32","nodeType":"VariableDeclaration","scope":9528,"src":"1818:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9521,"name":"uint16","nodeType":"ElementaryTypeName","src":"1818:6:32","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":9524,"mutability":"mutable","name":"streak","nameLocation":"1839:6:32","nodeType":"VariableDeclaration","scope":9528,"src":"1832:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9523,"name":"uint16","nodeType":"ElementaryTypeName","src":"1832:6:32","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":9526,"mutability":"mutable","name":"freq30","nameLocation":"1853:6:32","nodeType":"VariableDeclaration","scope":9528,"src":"1847:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9525,"name":"uint8","nodeType":"ElementaryTypeName","src":"1847:5:32","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1817:43:32"},"scope":9548,"src":"1759:102:32","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"776f3843","id":9535,"implemented":false,"kind":"function","modifiers":[],"name":"score","nameLocation":"1899:5:32","nodeType":"FunctionDefinition","parameters":{"id":9531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9530,"mutability":"mutable","name":"user","nameLocation":"1913:4:32","nodeType":"VariableDeclaration","scope":9535,"src":"1905:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9529,"name":"address","nodeType":"ElementaryTypeName","src":"1905:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1904:14:32"},"returnParameters":{"id":9534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9535,"src":"1942:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9532,"name":"uint16","nodeType":"ElementaryTypeName","src":"1942:6:32","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1941:8:32"},"scope":9548,"src":"1890:60:32","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"78df39a7","id":9542,"implemented":false,"kind":"function","modifiers":[],"name":"streakDays","nameLocation":"1964:10:32","nodeType":"FunctionDefinition","parameters":{"id":9538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9537,"mutability":"mutable","name":"user","nameLocation":"1983:4:32","nodeType":"VariableDeclaration","scope":9542,"src":"1975:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9536,"name":"address","nodeType":"ElementaryTypeName","src":"1975:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1974:14:32"},"returnParameters":{"id":9541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9540,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9542,"src":"2012:6:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9539,"name":"uint16","nodeType":"ElementaryTypeName","src":"2012:6:32","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"2011:8:32"},"scope":9548,"src":"1955:65:32","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6fa0e653","id":9547,"implemented":false,"kind":"function","modifiers":[],"name":"savingsPool","nameLocation":"2034:11:32","nodeType":"FunctionDefinition","parameters":{"id":9543,"nodeType":"ParameterList","parameters":[],"src":"2045:2:32"},"returnParameters":{"id":9546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9547,"src":"2071:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9544,"name":"address","nodeType":"ElementaryTypeName","src":"2071:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2070:9:32"},"scope":9548,"src":"2025:55:32","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9549,"src":"242:1840:32","usedErrors":[9475,9477],"usedEvents":[9473]}],"src":"32:2051:32"},"id":32},"contracts/mocks/MockERC20.sol":{"ast":{"absolutePath":"contracts/mocks/MockERC20.sol","exportedSymbols":{"Context":[1702],"ECDSA":[4090],"EIP712":[4317],"ERC20":[914],"ERC20Permit":[1146],"IERC20":[992],"IERC20Errors":[304],"IERC20Metadata":[1172],"IERC20Permit":[1208],"MockERC20":[9689],"Nonces":[1770],"Ownable":[147]},"id":9690,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9550,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:33"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":9551,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9690,"sourceUnit":915,"src":"58:55:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":9552,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9690,"sourceUnit":1147,"src":"114:72:33","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9553,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9690,"sourceUnit":148,"src":"187:52:33","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9555,"name":"ERC20","nameLocations":["418:5:33"],"nodeType":"IdentifierPath","referencedDeclaration":914,"src":"418:5:33"},"id":9556,"nodeType":"InheritanceSpecifier","src":"418:5:33"},{"baseName":{"id":9557,"name":"ERC20Permit","nameLocations":["425:11:33"],"nodeType":"IdentifierPath","referencedDeclaration":1146,"src":"425:11:33"},"id":9558,"nodeType":"InheritanceSpecifier","src":"425:11:33"},{"baseName":{"id":9559,"name":"Ownable","nameLocations":["438:7:33"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"438:7:33"},"id":9560,"nodeType":"InheritanceSpecifier","src":"438:7:33"}],"canonicalName":"MockERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":9554,"nodeType":"StructuredDocumentation","src":"241:154:33","text":" @title MockERC20\n @notice Mock ERC20 token with permit functionality for testing MicroSave\n @dev Includes mint function for easy test setup"},"fullyImplemented":true,"id":9689,"linearizedBaseContracts":[9689,147,1146,1770,4317,262,1208,914,304,1172,992,1702],"name":"MockERC20","nameLocation":"405:9:33","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":9562,"mutability":"mutable","name":"_decimals","nameLocation":"466:9:33","nodeType":"VariableDeclaration","scope":9689,"src":"452:23:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9561,"name":"uint8","nodeType":"ElementaryTypeName","src":"452:5:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"body":{"id":9588,"nodeType":"Block","src":"837:38:33","statements":[{"expression":{"id":9586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9584,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9562,"src":"847:9:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9585,"name":"decimals_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9569,"src":"859:9:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"847:21:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":9587,"nodeType":"ExpressionStatement","src":"847:21:33"}]},"documentation":{"id":9563,"nodeType":"StructuredDocumentation","src":"482:173:33","text":" @notice Constructor\n @param name Token name\n @param symbol Token symbol\n @param decimals_ Token decimals\n @param owner Token owner"},"id":9589,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":9574,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9565,"src":"790:4:33","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":9575,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9567,"src":"796:6:33","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":9576,"kind":"baseConstructorSpecifier","modifierName":{"id":9573,"name":"ERC20","nameLocations":["784:5:33"],"nodeType":"IdentifierPath","referencedDeclaration":914,"src":"784:5:33"},"nodeType":"ModifierInvocation","src":"784:19:33"},{"arguments":[{"id":9578,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9565,"src":"816:4:33","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":9579,"kind":"baseConstructorSpecifier","modifierName":{"id":9577,"name":"ERC20Permit","nameLocations":["804:11:33"],"nodeType":"IdentifierPath","referencedDeclaration":1146,"src":"804:11:33"},"nodeType":"ModifierInvocation","src":"804:17:33"},{"arguments":[{"id":9581,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9571,"src":"830:5:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9582,"kind":"baseConstructorSpecifier","modifierName":{"id":9580,"name":"Ownable","nameLocations":["822:7:33"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"822:7:33"},"nodeType":"ModifierInvocation","src":"822:14:33"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9565,"mutability":"mutable","name":"name","nameLocation":"695:4:33","nodeType":"VariableDeclaration","scope":9589,"src":"681:18:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9564,"name":"string","nodeType":"ElementaryTypeName","src":"681:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9567,"mutability":"mutable","name":"symbol","nameLocation":"723:6:33","nodeType":"VariableDeclaration","scope":9589,"src":"709:20:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9566,"name":"string","nodeType":"ElementaryTypeName","src":"709:6:33","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9569,"mutability":"mutable","name":"decimals_","nameLocation":"745:9:33","nodeType":"VariableDeclaration","scope":9589,"src":"739:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9568,"name":"uint8","nodeType":"ElementaryTypeName","src":"739:5:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":9571,"mutability":"mutable","name":"owner","nameLocation":"772:5:33","nodeType":"VariableDeclaration","scope":9589,"src":"764:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9570,"name":"address","nodeType":"ElementaryTypeName","src":"764:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"671:112:33"},"returnParameters":{"id":9583,"nodeType":"ParameterList","parameters":[],"src":"837:0:33"},"scope":9689,"src":"660:215:33","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[478],"body":{"id":9598,"nodeType":"Block","src":"1038:33:33","statements":[{"expression":{"id":9596,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9562,"src":"1055:9:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":9595,"id":9597,"nodeType":"Return","src":"1048:16:33"}]},"documentation":{"id":9590,"nodeType":"StructuredDocumentation","src":"881:87:33","text":" @notice Override decimals function\n @return Number of decimals"},"functionSelector":"313ce567","id":9599,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"982:8:33","nodeType":"FunctionDefinition","overrides":{"id":9592,"nodeType":"OverrideSpecifier","overrides":[],"src":"1013:8:33"},"parameters":{"id":9591,"nodeType":"ParameterList","parameters":[],"src":"990:2:33"},"returnParameters":{"id":9595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9599,"src":"1031:5:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9593,"name":"uint8","nodeType":"ElementaryTypeName","src":"1031:5:33","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1030:7:33"},"scope":9689,"src":"973:98:33","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":9614,"nodeType":"Block","src":"1267:34:33","statements":[{"expression":{"arguments":[{"id":9610,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9602,"src":"1283:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9611,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9604,"src":"1287:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9609,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"1277:5:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1277:17:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9613,"nodeType":"ExpressionStatement","src":"1277:17:33"}]},"documentation":{"id":9600,"nodeType":"StructuredDocumentation","src":"1077:124:33","text":" @notice Mint tokens to an address\n @param to Address to mint to\n @param amount Amount to mint"},"functionSelector":"40c10f19","id":9615,"implemented":true,"kind":"function","modifiers":[{"id":9607,"kind":"modifierInvocation","modifierName":{"id":9606,"name":"onlyOwner","nameLocations":["1257:9:33"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1257:9:33"},"nodeType":"ModifierInvocation","src":"1257:9:33"}],"name":"mint","nameLocation":"1215:4:33","nodeType":"FunctionDefinition","parameters":{"id":9605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9602,"mutability":"mutable","name":"to","nameLocation":"1228:2:33","nodeType":"VariableDeclaration","scope":9615,"src":"1220:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9601,"name":"address","nodeType":"ElementaryTypeName","src":"1220:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9604,"mutability":"mutable","name":"amount","nameLocation":"1240:6:33","nodeType":"VariableDeclaration","scope":9615,"src":"1232:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9603,"name":"uint256","nodeType":"ElementaryTypeName","src":"1232:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1219:28:33"},"returnParameters":{"id":9608,"nodeType":"ParameterList","parameters":[],"src":"1267:0:33"},"scope":9689,"src":"1206:95:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9658,"nodeType":"Block","src":"1570:210:33","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9628,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9619,"src":"1588:10:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":9629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1599:6:33","memberName":"length","nodeType":"MemberAccess","src":"1588:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9630,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9622,"src":"1609:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":9631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1617:6:33","memberName":"length","nodeType":"MemberAccess","src":"1609:14:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1588:35:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417272617973206c656e677468206d69736d61746368","id":9633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1625:24:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c","typeString":"literal_string \"Arrays length mismatch\""},"value":"Arrays length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c","typeString":"literal_string \"Arrays length mismatch\""}],"id":9627,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1580:7:33","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1580:70:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9635,"nodeType":"ExpressionStatement","src":"1580:70:33"},{"body":{"id":9656,"nodeType":"Block","src":"1717:57:33","statements":[{"expression":{"arguments":[{"baseExpression":{"id":9648,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9619,"src":"1737:10:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":9650,"indexExpression":{"id":9649,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9637,"src":"1748:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1737:13:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":9651,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9622,"src":"1752:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":9653,"indexExpression":{"id":9652,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9637,"src":"1760:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1752:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9647,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"1731:5:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1731:32:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9655,"nodeType":"ExpressionStatement","src":"1731:32:33"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9640,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9637,"src":"1689:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9641,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9619,"src":"1693:10:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":9642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1704:6:33","memberName":"length","nodeType":"MemberAccess","src":"1693:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1689:21:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9657,"initializationExpression":{"assignments":[9637],"declarations":[{"constant":false,"id":9637,"mutability":"mutable","name":"i","nameLocation":"1682:1:33","nodeType":"VariableDeclaration","scope":9657,"src":"1674:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9636,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9639,"initialValue":{"hexValue":"30","id":9638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1686:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1674:13:33"},"loopExpression":{"expression":{"id":9645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1712:3:33","subExpression":{"id":9644,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9637,"src":"1712:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9646,"nodeType":"ExpressionStatement","src":"1712:3:33"},"nodeType":"ForStatement","src":"1669:105:33"}]},"documentation":{"id":9616,"nodeType":"StructuredDocumentation","src":"1307:161:33","text":" @notice Mint tokens to multiple addresses\n @param recipients Array of recipient addresses\n @param amounts Array of amounts to mint"},"functionSelector":"68573107","id":9659,"implemented":true,"kind":"function","modifiers":[{"id":9625,"kind":"modifierInvocation","modifierName":{"id":9624,"name":"onlyOwner","nameLocations":["1560:9:33"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1560:9:33"},"nodeType":"ModifierInvocation","src":"1560:9:33"}],"name":"batchMint","nameLocation":"1482:9:33","nodeType":"FunctionDefinition","parameters":{"id":9623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9619,"mutability":"mutable","name":"recipients","nameLocation":"1511:10:33","nodeType":"VariableDeclaration","scope":9659,"src":"1492:29:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9617,"name":"address","nodeType":"ElementaryTypeName","src":"1492:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9618,"nodeType":"ArrayTypeName","src":"1492:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":9622,"mutability":"mutable","name":"amounts","nameLocation":"1542:7:33","nodeType":"VariableDeclaration","scope":9659,"src":"1523:26:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9620,"name":"uint256","nodeType":"ElementaryTypeName","src":"1523:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9621,"nodeType":"ArrayTypeName","src":"1523:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1491:59:33"},"returnParameters":{"id":9626,"nodeType":"ParameterList","parameters":[],"src":"1570:0:33"},"scope":9689,"src":"1473:307:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9674,"nodeType":"Block","src":"1998:36:33","statements":[{"expression":{"arguments":[{"id":9670,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9662,"src":"2014:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9671,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9664,"src":"2020:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9669,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"2008:5:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:19:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9673,"nodeType":"ExpressionStatement","src":"2008:19:33"}]},"documentation":{"id":9660,"nodeType":"StructuredDocumentation","src":"1786:144:33","text":" @notice Burn tokens from an address (for testing)\n @param from Address to burn from\n @param amount Amount to burn"},"functionSelector":"9dc29fac","id":9675,"implemented":true,"kind":"function","modifiers":[{"id":9667,"kind":"modifierInvocation","modifierName":{"id":9666,"name":"onlyOwner","nameLocations":["1988:9:33"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1988:9:33"},"nodeType":"ModifierInvocation","src":"1988:9:33"}],"name":"burn","nameLocation":"1944:4:33","nodeType":"FunctionDefinition","parameters":{"id":9665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9662,"mutability":"mutable","name":"from","nameLocation":"1957:4:33","nodeType":"VariableDeclaration","scope":9675,"src":"1949:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9661,"name":"address","nodeType":"ElementaryTypeName","src":"1949:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9664,"mutability":"mutable","name":"amount","nameLocation":"1971:6:33","nodeType":"VariableDeclaration","scope":9675,"src":"1963:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9663,"name":"uint256","nodeType":"ElementaryTypeName","src":"1963:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1948:30:33"},"returnParameters":{"id":9668,"nodeType":"ParameterList","parameters":[],"src":"1998:0:33"},"scope":9689,"src":"1935:99:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9687,"nodeType":"Block","src":"2209:42:33","statements":[{"expression":{"arguments":[{"expression":{"id":9682,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2225:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2229:6:33","memberName":"sender","nodeType":"MemberAccess","src":"2225:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9684,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9678,"src":"2237:6:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9681,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"2219:5:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2219:25:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9686,"nodeType":"ExpressionStatement","src":"2219:25:33"}]},"documentation":{"id":9676,"nodeType":"StructuredDocumentation","src":"2040:123:33","text":" @notice Faucet function for easy testing (anyone can call)\n @param amount Amount to mint to caller"},"functionSelector":"57915897","id":9688,"implemented":true,"kind":"function","modifiers":[],"name":"faucet","nameLocation":"2177:6:33","nodeType":"FunctionDefinition","parameters":{"id":9679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9678,"mutability":"mutable","name":"amount","nameLocation":"2192:6:33","nodeType":"VariableDeclaration","scope":9688,"src":"2184:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9677,"name":"uint256","nodeType":"ElementaryTypeName","src":"2184:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2183:16:33"},"returnParameters":{"id":9680,"nodeType":"ParameterList","parameters":[],"src":"2209:0:33"},"scope":9689,"src":"2168:83:33","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9690,"src":"396:1857:33","usedErrors":[13,18,274,279,284,293,298,303,1023,1030,1712,2013,2015,3753,3758,3763],"usedEvents":[24,242,926,935]}],"src":"32:2222:33"},"id":33}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xecd08ad8132d88a5fcfd50f76a18583004fcdab4c33fb86343903ae420ca5a2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02422dce2e5305624e5cec644add1baa44bfa98ea131bf6030069089a2f56ca4\",\"dweb:/ipfs/QmcsSUkX7AYXNZE18LYE6JEmv8zZcCZvKfbUm9cSzNQyNo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f1d06bf12875f252b400c9b3006def16eeb07c1c212ca46e924afe533f9a46da64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xD0 PUSH12 0xF12875F252B400C9B3006DEF AND 0xEE 0xB0 PUSH29 0x1C212CA46E924AFE533F9A46DA64736F6C634300081400330000000000 ","sourceMap":"698:9376:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f1d06bf12875f252b400c9b3006def16eeb07c1c212ca46e924afe533f9a46da64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xD0 PUSH12 0xF12875F252B400C9B3006DEF AND 0xEE 0xB0 PUSH29 0x1C212CA46E924AFE533F9A46DA64736F6C634300081400330000000000 ","sourceMap":"698:9376:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122099d0b5f366a78872590dac246cf99b97c37167f78d60be5c3afe67987d15111164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xD0 0xB5 RETURN PUSH7 0xA78872590DAC24 PUSH13 0xF99B97C37167F78D60BE5C3AFE PUSH8 0x987D15111164736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1255:3046:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122099d0b5f366a78872590dac246cf99b97c37167f78d60be5c3afe67987d15111164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xD0 0xB5 RETURN PUSH7 0xA78872590DAC24 PUSH13 0xF99B97C37167F78D60BE5C3AFE PUSH8 0x987D15111164736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1255:3046:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e720a9c2a57f6209f7f2521024ac618e6a0af2a0d030646748b683fc73f60af064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 KECCAK256 0xA9 0xC2 0xA5 PUSH32 0x6209F7F2521024AC618E6A0AF2A0D030646748B683FC73F60AF064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e720a9c2a57f6209f7f2521024ac618e6a0af2a0d030646748b683fc73f60af064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 KECCAK256 0xA9 0xC2 0xA5 PUSH32 0x6209F7F2521024AC618E6A0AF2A0D030646748B683FC73F60AF064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cdfc0f4896bddb25e6dbaa67bf1eb0e65a8304d29a2184c6bb257d077c9490e664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xFC 0xF BASEFEE SWAP7 0xBD 0xDB 0x25 0xE6 0xDB 0xAA PUSH8 0xBF1EB0E65A8304D2 SWAP11 0x21 DUP5 0xC6 0xBB 0x25 PUSH30 0x77C9490E664736F6C634300081400330000000000000000000000000000 ","sourceMap":"297:18982:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cdfc0f4896bddb25e6dbaa67bf1eb0e65a8304d29a2184c6bb257d077c9490e664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xFC 0xF BASEFEE SWAP7 0xBD 0xDB 0x25 0xE6 0xDB 0xAA PUSH8 0xBF1EB0E65A8304D2 SWAP11 0x21 DUP5 0xC6 0xBB 0x25 PUSH30 0x77C9490E664736F6C634300081400330000000000000000000000000000 ","sourceMap":"297:18982:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea78b0f46ee7f082d029812a528a5e0e5f3a1c646f4731a18cadc8ee8ad0f14364736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA PUSH25 0xB0F46EE7F082D029812A528A5E0E5F3A1C646F4731A18CADC8 0xEE DUP11 0xD0 CALL NUMBER PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7470:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea78b0f46ee7f082d029812a528a5e0e5f3a1c646f4731a18cadc8ee8ad0f14364736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA PUSH25 0xB0F46EE7F082D029812A528A5E0E5F3A1C646F4731A18CADC8 0xEE DUP11 0xD0 CALL NUMBER PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7470:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122026c48870ae02959cbf0acbe21bcfca73b8ad9bf6c86e24aa9d844ab7355d9d6564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xC4 DUP9 PUSH17 0xAE02959CBF0ACBE21BCFCA73B8AD9BF6C8 PUSH15 0x24AA9D844AB7355D9D6564736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122026c48870ae02959cbf0acbe21bcfca73b8ad9bf6c86e24aa9d844ab7355d9d6564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xC4 DUP9 PUSH17 0xAE02959CBF0ACBE21BCFCA73B8AD9BF6C8 PUSH15 0x24AA9D844AB7355D9D6564736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edaafa2b4bf2e693fe8ad63e033022e5f66b1ea153282004d8fbf7c3431f804e64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xAA STATICCALL 0x2B 0x4B CALLCODE 0xE6 SWAP4 INVALID DUP11 0xD6 RETURNDATACOPY SUB ADDRESS 0x22 0xE5 0xF6 PUSH12 0x1EA153282004D8FBF7C3431F DUP1 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edaafa2b4bf2e693fe8ad63e033022e5f66b1ea153282004d8fbf7c3431f804e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xAA STATICCALL 0x2B 0x4B CALLCODE 0xE6 SWAP4 INVALID DUP11 0xD6 RETURNDATACOPY SUB ADDRESS 0x22 0xE5 0xF6 PUSH12 0x1EA153282004D8FBF7C3431F DUP1 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/RewardVault.sol":{"RewardVault":{"abi":[{"inputs":[{"internalType":"address","name":"_savingsPool","type":"address"},{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InsufficientPoints","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"OnlyPool","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint16","name":"streak","type":"uint16"}],"name":"PointsAwarded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"PointsClaimed","type":"event"},{"inputs":[],"name":"POINTS_PER_DEPOSIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"STREAK_BONUS_POINTS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"STREAK_MILESTONE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"claimPoints","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getPoints","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint16","name":"streak","type":"uint16"}],"name":"onDepositDay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"points","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"savingsPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8013":{"entryPoint":null,"id":8013,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":354,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":633,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":656,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":727,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":744,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":587,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":555,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":550,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":607,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1707:34","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:34","statements":[{"nodeType":"YulAssignment","src":"57:19:34","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:34","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:34"},"nodeType":"YulFunctionCall","src":"67:9:34"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:34"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:34","type":""}],"src":"7:75:34"},{"body":{"nodeType":"YulBlock","src":"177:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:34"},"nodeType":"YulFunctionCall","src":"187:12:34"},"nodeType":"YulExpressionStatement","src":"187:12:34"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:34"},{"body":{"nodeType":"YulBlock","src":"300:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:34"},"nodeType":"YulFunctionCall","src":"310:12:34"},"nodeType":"YulExpressionStatement","src":"310:12:34"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:34"},{"body":{"nodeType":"YulBlock","src":"379:81:34","statements":[{"nodeType":"YulAssignment","src":"389:65:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:34"},"nodeType":"YulFunctionCall","src":"400:54:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:34"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:34","type":""}],"src":"334:126:34"},{"body":{"nodeType":"YulBlock","src":"511:51:34","statements":[{"nodeType":"YulAssignment","src":"521:35:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:34"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:34"},"nodeType":"YulFunctionCall","src":"532:24:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:34"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:34","type":""}],"src":"466:96:34"},{"body":{"nodeType":"YulBlock","src":"611:79:34","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:34"},"nodeType":"YulFunctionCall","src":"670:12:34"},"nodeType":"YulExpressionStatement","src":"670:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:34"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:34"},"nodeType":"YulFunctionCall","src":"641:24:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:34"},"nodeType":"YulFunctionCall","src":"631:35:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:34"},"nodeType":"YulFunctionCall","src":"624:43:34"},"nodeType":"YulIf","src":"621:63:34"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:34","type":""}],"src":"568:122:34"},{"body":{"nodeType":"YulBlock","src":"759:80:34","statements":[{"nodeType":"YulAssignment","src":"769:22:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:34"},"nodeType":"YulFunctionCall","src":"778:13:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:34"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:34"},"nodeType":"YulFunctionCall","src":"800:33:34"},"nodeType":"YulExpressionStatement","src":"800:33:34"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:34","type":""}],"src":"696:143:34"},{"body":{"nodeType":"YulBlock","src":"939:413:34","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:34"},"nodeType":"YulFunctionCall","src":"987:79:34"},"nodeType":"YulExpressionStatement","src":"987:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:34"},"nodeType":"YulFunctionCall","src":"956:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:34","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:34"},"nodeType":"YulFunctionCall","src":"952:32:34"},"nodeType":"YulIf","src":"949:119:34"},{"nodeType":"YulBlock","src":"1078:128:34","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:34","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:34"},"nodeType":"YulFunctionCall","src":"1164:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:34"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:34"},"nodeType":"YulFunctionCall","src":"1132:64:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:34"}]}]},{"nodeType":"YulBlock","src":"1216:129:34","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:34","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:34","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:34"},"nodeType":"YulFunctionCall","src":"1303:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:34"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:34"},"nodeType":"YulFunctionCall","src":"1271:64:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:34"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:34","type":""}],"src":"845:507:34"},{"body":{"nodeType":"YulBlock","src":"1423:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1440:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1463:5:34"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1445:17:34"},"nodeType":"YulFunctionCall","src":"1445:24:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1433:6:34"},"nodeType":"YulFunctionCall","src":"1433:37:34"},"nodeType":"YulExpressionStatement","src":"1433:37:34"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1411:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1418:3:34","type":""}],"src":"1358:118:34"},{"body":{"nodeType":"YulBlock","src":"1580:124:34","statements":[{"nodeType":"YulAssignment","src":"1590:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1602:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1613:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1598:3:34"},"nodeType":"YulFunctionCall","src":"1598:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1590:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1670:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1683:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1694:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1679:3:34"},"nodeType":"YulFunctionCall","src":"1679:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1626:43:34"},"nodeType":"YulFunctionCall","src":"1626:71:34"},"nodeType":"YulExpressionStatement","src":"1626:71:34"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1552:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1564:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1575:4:34","type":""}],"src":"1482:222:34"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":34,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523480156200001157600080fd5b5060405162000dec38038062000dec833981810160405281019062000037919062000290565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a49190620002e8565b60405180910390fd5b620000be816200016260201b60201c565b50600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000126576040517f4b60273500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050505062000305565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000258826200022b565b9050919050565b6200026a816200024b565b81146200027657600080fd5b50565b6000815190506200028a816200025f565b92915050565b60008060408385031215620002aa57620002a962000226565b5b6000620002ba8582860162000279565b9250506020620002cd8582860162000279565b9150509250929050565b620002e2816200024b565b82525050565b6000602082019050620002ff6000830184620002d7565b92915050565b608051610ac4620003286000396000818161037701526103dd0152610ac46000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a6146101545780637fc842fe1461015e5780638da5cb5b1461017c578063b0fb56641461019a578063ee204abb146101b6578063f2fde38b146101e6576100a9565b8063358b8166146100ae5780633ac795de146100de57806341d7b1d3146100fa5780635e9cb48e146101185780636fa0e65314610136575b600080fd5b6100c860048036038101906100c39190610835565b610202565b6040516100d5919061087b565b60405180910390f35b6100f860048036038101906100f391906108c2565b61021a565b005b61010261036b565b60405161010f919061087b565b60405180910390f35b610120610370565b60405161012d919061087b565b60405180910390f35b61013e610375565b60405161014b91906108fe565b60405180910390f35b61015c610399565b005b6101666103ad565b604051610173919061087b565b60405180910390f35b6101846103b2565b60405161019191906108fe565b60405180910390f35b6101b460048036038101906101af9190610953565b6103db565b005b6101d060048036038101906101cb9190610835565b6105b0565b6040516101dd919061087b565b60405180910390f35b61020060048036038101906101fb9190610835565b6105f9565b005b60016020528060005260406000206000915090505481565b60008103610254576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156102cd576040517f303e7a0700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff167fba953728785de35be3827ee7a7a7867a8472947562602939440e6c0bdbf4725e82604051610360919061087b565b60405180910390a250565b600581565b601481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6103a161067f565b6103ab6000610706565b565b600781565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610460576040517f4b60273500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104c6576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006005905060008261ffff161180156104f05750600060078361ffff166104ee91906109c2565b145b15610505576014816105029190610a22565b90505b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105549190610a22565b925050819055508273ffffffffffffffffffffffffffffffffffffffff167f81ecaaa31e69fc17832354b83912ed393c78921b2e6fcf355113f2fb513e4f9982846040516105a3929190610a65565b60405180910390a2505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61060161067f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106735760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161066a91906108fe565b60405180910390fd5b61067c81610706565b50565b6106876107ca565b73ffffffffffffffffffffffffffffffffffffffff166106a56103b2565b73ffffffffffffffffffffffffffffffffffffffff1614610704576106c86107ca565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106fb91906108fe565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610802826107d7565b9050919050565b610812816107f7565b811461081d57600080fd5b50565b60008135905061082f81610809565b92915050565b60006020828403121561084b5761084a6107d2565b5b600061085984828501610820565b91505092915050565b6000819050919050565b61087581610862565b82525050565b6000602082019050610890600083018461086c565b92915050565b61089f81610862565b81146108aa57600080fd5b50565b6000813590506108bc81610896565b92915050565b6000602082840312156108d8576108d76107d2565b5b60006108e6848285016108ad565b91505092915050565b6108f8816107f7565b82525050565b600060208201905061091360008301846108ef565b92915050565b600061ffff82169050919050565b61093081610919565b811461093b57600080fd5b50565b60008135905061094d81610927565b92915050565b6000806040838503121561096a576109696107d2565b5b600061097885828601610820565b92505060206109898582860161093e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006109cd82610862565b91506109d883610862565b9250826109e8576109e7610993565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a2d82610862565b9150610a3883610862565b9250828201905080821115610a5057610a4f6109f3565b5b92915050565b610a5f81610919565b82525050565b6000604082019050610a7a600083018561086c565b610a876020830184610a56565b939250505056fea26469706673582212204f161ed40b782692045ed9cc38043e76a7e81d2c9dc46688d77885cc3671d08f64736f6c63430008140033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xDEC CODESIZE SUB DUP1 PUSH3 0xDEC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x290 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0x2E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBE DUP2 PUSH3 0x162 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x126 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4B60273500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH3 0x305 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x258 DUP3 PUSH3 0x22B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x26A DUP2 PUSH3 0x24B JUMP JUMPDEST DUP2 EQ PUSH3 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x28A DUP2 PUSH3 0x25F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2AA JUMPI PUSH3 0x2A9 PUSH3 0x226 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2BA DUP6 DUP3 DUP7 ADD PUSH3 0x279 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x2CD DUP6 DUP3 DUP7 ADD PUSH3 0x279 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x2E2 DUP2 PUSH3 0x24B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2FF PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xAC4 PUSH3 0x328 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x377 ADD MSTORE PUSH2 0x3DD ADD MSTORE PUSH2 0xAC4 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x7FC842FE EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xB0FB5664 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xEE204ABB EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1E6 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x358B8166 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x3AC795DE EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x41D7B1D3 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x5E9CB48E EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FA0E653 EQ PUSH2 0x136 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x835 JUMP JUMPDEST PUSH2 0x202 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x8C2 JUMP JUMPDEST PUSH2 0x21A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH2 0x36B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH2 0x399 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x166 PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x953 JUMP JUMPDEST PUSH2 0x3DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x835 JUMP JUMPDEST PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x835 JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x254 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x2CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x303E7A0700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBA953728785DE35BE3827EE7A7A7867A8472947562602939440E6C0BDBF4725E DUP3 PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x3A1 PUSH2 0x67F JUMP JUMPDEST PUSH2 0x3AB PUSH1 0x0 PUSH2 0x706 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x460 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4B60273500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP PUSH1 0x0 DUP3 PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x4F0 JUMPI POP PUSH1 0x0 PUSH1 0x7 DUP4 PUSH2 0xFFFF AND PUSH2 0x4EE SWAP2 SWAP1 PUSH2 0x9C2 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x505 JUMPI PUSH1 0x14 DUP2 PUSH2 0x502 SWAP2 SWAP1 PUSH2 0xA22 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x554 SWAP2 SWAP1 PUSH2 0xA22 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x81ECAAA31E69FC17832354B83912ED393C78921B2E6FCF355113F2FB513E4F99 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x5A3 SWAP3 SWAP2 SWAP1 PUSH2 0xA65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x601 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x673 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66A SWAP2 SWAP1 PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x67C DUP2 PUSH2 0x706 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x687 PUSH2 0x7CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6A5 PUSH2 0x3B2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x704 JUMPI PUSH2 0x6C8 PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FB SWAP2 SWAP1 PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x802 DUP3 PUSH2 0x7D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x812 DUP2 PUSH2 0x7F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x81D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x82F DUP2 PUSH2 0x809 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x84B JUMPI PUSH2 0x84A PUSH2 0x7D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x859 DUP5 DUP3 DUP6 ADD PUSH2 0x820 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x875 DUP2 PUSH2 0x862 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x890 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x86C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x89F DUP2 PUSH2 0x862 JUMP JUMPDEST DUP2 EQ PUSH2 0x8AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8BC DUP2 PUSH2 0x896 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D8 JUMPI PUSH2 0x8D7 PUSH2 0x7D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8E6 DUP5 DUP3 DUP6 ADD PUSH2 0x8AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8F8 DUP2 PUSH2 0x7F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x913 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x930 DUP2 PUSH2 0x919 JUMP JUMPDEST DUP2 EQ PUSH2 0x93B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x94D DUP2 PUSH2 0x927 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x96A JUMPI PUSH2 0x969 PUSH2 0x7D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x978 DUP6 DUP3 DUP7 ADD PUSH2 0x820 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x989 DUP6 DUP3 DUP7 ADD PUSH2 0x93E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9CD DUP3 PUSH2 0x862 JUMP JUMPDEST SWAP2 POP PUSH2 0x9D8 DUP4 PUSH2 0x862 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x9E8 JUMPI PUSH2 0x9E7 PUSH2 0x993 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA2D DUP3 PUSH2 0x862 JUMP JUMPDEST SWAP2 POP PUSH2 0xA38 DUP4 PUSH2 0x862 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA50 JUMPI PUSH2 0xA4F PUSH2 0x9F3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA5F DUP2 PUSH2 0x919 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA7A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x86C JUMP JUMPDEST PUSH2 0xA87 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA56 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F AND 0x1E 0xD4 SIGNEXTEND PUSH25 0x2692045ED9CC38043E76A7E81D2C9DC46688D77885CC3671D0 DUP16 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"331:2522:27:-:0;;;1234:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1292:6;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1338:1:27::1;1314:26;;:12;:26;;::::0;1310:49:::1;;1349:10;;;;;;;;;;;;;;1310:49;1383:12;1369:26;;;;;;;;::::0;::::1;1234:168:::0;;331:2522;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:34:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;331:2522:27:-;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@POINTS_PER_DEPOSIT_7958":{"entryPoint":875,"id":7958,"parameterSlots":0,"returnSlots":0},"@STREAK_BONUS_POINTS_7962":{"entryPoint":880,"id":7962,"parameterSlots":0,"returnSlots":0},"@STREAK_MILESTONE_7966":{"entryPoint":941,"id":7966,"parameterSlots":0,"returnSlots":0},"@_checkOwner_84":{"entryPoint":1663,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_1684":{"entryPoint":1994,"id":1684,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":1798,"id":146,"parameterSlots":1,"returnSlots":0},"@claimPoints_8103":{"entryPoint":538,"id":8103,"parameterSlots":1,"returnSlots":0},"@getPoints_8116":{"entryPoint":1456,"id":8116,"parameterSlots":1,"returnSlots":1},"@onDepositDay_8065":{"entryPoint":987,"id":8065,"parameterSlots":2,"returnSlots":0},"@owner_67":{"entryPoint":946,"id":67,"parameterSlots":0,"returnSlots":1},"@points_7974":{"entryPoint":514,"id":7974,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":921,"id":98,"parameterSlots":0,"returnSlots":0},"@savingsPool_7969":{"entryPoint":885,"id":7969,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":1529,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":2080,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16":{"entryPoint":2366,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2221,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2101,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint16":{"entryPoint":2387,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":2242,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2287,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":2646,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2156,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2302,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2171,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint16__to_t_uint256_t_uint16__fromStack_reversed":{"entryPoint":2661,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2594,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2039,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":2329,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2007,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2146,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":2498,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2547,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":2451,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2002,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2057,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint16":{"entryPoint":2343,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2198,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4616:34","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:34","statements":[{"nodeType":"YulAssignment","src":"57:19:34","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:34","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:34"},"nodeType":"YulFunctionCall","src":"67:9:34"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:34"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:34","type":""}],"src":"7:75:34"},{"body":{"nodeType":"YulBlock","src":"177:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:34"},"nodeType":"YulFunctionCall","src":"187:12:34"},"nodeType":"YulExpressionStatement","src":"187:12:34"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:34"},{"body":{"nodeType":"YulBlock","src":"300:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:34"},"nodeType":"YulFunctionCall","src":"310:12:34"},"nodeType":"YulExpressionStatement","src":"310:12:34"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:34"},{"body":{"nodeType":"YulBlock","src":"379:81:34","statements":[{"nodeType":"YulAssignment","src":"389:65:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:34"},"nodeType":"YulFunctionCall","src":"400:54:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:34"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:34","type":""}],"src":"334:126:34"},{"body":{"nodeType":"YulBlock","src":"511:51:34","statements":[{"nodeType":"YulAssignment","src":"521:35:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:34"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:34"},"nodeType":"YulFunctionCall","src":"532:24:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:34"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:34","type":""}],"src":"466:96:34"},{"body":{"nodeType":"YulBlock","src":"611:79:34","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:34"},"nodeType":"YulFunctionCall","src":"670:12:34"},"nodeType":"YulExpressionStatement","src":"670:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:34"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:34"},"nodeType":"YulFunctionCall","src":"641:24:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:34"},"nodeType":"YulFunctionCall","src":"631:35:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:34"},"nodeType":"YulFunctionCall","src":"624:43:34"},"nodeType":"YulIf","src":"621:63:34"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:34","type":""}],"src":"568:122:34"},{"body":{"nodeType":"YulBlock","src":"748:87:34","statements":[{"nodeType":"YulAssignment","src":"758:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:34"},"nodeType":"YulFunctionCall","src":"767:20:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:34"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:34"},"nodeType":"YulFunctionCall","src":"796:33:34"},"nodeType":"YulExpressionStatement","src":"796:33:34"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:34","type":""}],"src":"696:139:34"},{"body":{"nodeType":"YulBlock","src":"907:263:34","statements":[{"body":{"nodeType":"YulBlock","src":"953:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"955:77:34"},"nodeType":"YulFunctionCall","src":"955:79:34"},"nodeType":"YulExpressionStatement","src":"955:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"928:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"924:3:34"},"nodeType":"YulFunctionCall","src":"924:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"949:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"920:3:34"},"nodeType":"YulFunctionCall","src":"920:32:34"},"nodeType":"YulIf","src":"917:119:34"},{"nodeType":"YulBlock","src":"1046:117:34","statements":[{"nodeType":"YulVariableDeclaration","src":"1061:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"1075:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1065:6:34","type":""}]},{"nodeType":"YulAssignment","src":"1090:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1125:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:34"},"nodeType":"YulFunctionCall","src":"1121:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1145:7:34"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1100:20:34"},"nodeType":"YulFunctionCall","src":"1100:53:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1090:6:34"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"877:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"888:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"900:6:34","type":""}],"src":"841:329:34"},{"body":{"nodeType":"YulBlock","src":"1221:32:34","statements":[{"nodeType":"YulAssignment","src":"1231:16:34","value":{"name":"value","nodeType":"YulIdentifier","src":"1242:5:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1231:7:34"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1203:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1213:7:34","type":""}],"src":"1176:77:34"},{"body":{"nodeType":"YulBlock","src":"1324:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1341:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1364:5:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1346:17:34"},"nodeType":"YulFunctionCall","src":"1346:24:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:34"},"nodeType":"YulFunctionCall","src":"1334:37:34"},"nodeType":"YulExpressionStatement","src":"1334:37:34"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1312:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1319:3:34","type":""}],"src":"1259:118:34"},{"body":{"nodeType":"YulBlock","src":"1481:124:34","statements":[{"nodeType":"YulAssignment","src":"1491:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1503:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1514:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1499:3:34"},"nodeType":"YulFunctionCall","src":"1499:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1491:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1571:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1584:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1595:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1580:3:34"},"nodeType":"YulFunctionCall","src":"1580:17:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1527:43:34"},"nodeType":"YulFunctionCall","src":"1527:71:34"},"nodeType":"YulExpressionStatement","src":"1527:71:34"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1453:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1465:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1476:4:34","type":""}],"src":"1383:222:34"},{"body":{"nodeType":"YulBlock","src":"1654:79:34","statements":[{"body":{"nodeType":"YulBlock","src":"1711:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1720:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1723:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1713:6:34"},"nodeType":"YulFunctionCall","src":"1713:12:34"},"nodeType":"YulExpressionStatement","src":"1713:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1677:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1702:5:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1684:17:34"},"nodeType":"YulFunctionCall","src":"1684:24:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1674:2:34"},"nodeType":"YulFunctionCall","src":"1674:35:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1667:6:34"},"nodeType":"YulFunctionCall","src":"1667:43:34"},"nodeType":"YulIf","src":"1664:63:34"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1647:5:34","type":""}],"src":"1611:122:34"},{"body":{"nodeType":"YulBlock","src":"1791:87:34","statements":[{"nodeType":"YulAssignment","src":"1801:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1823:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1810:12:34"},"nodeType":"YulFunctionCall","src":"1810:20:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1801:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1866:5:34"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1839:26:34"},"nodeType":"YulFunctionCall","src":"1839:33:34"},"nodeType":"YulExpressionStatement","src":"1839:33:34"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1769:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"1777:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1785:5:34","type":""}],"src":"1739:139:34"},{"body":{"nodeType":"YulBlock","src":"1950:263:34","statements":[{"body":{"nodeType":"YulBlock","src":"1996:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1998:77:34"},"nodeType":"YulFunctionCall","src":"1998:79:34"},"nodeType":"YulExpressionStatement","src":"1998:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1971:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"1980:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1967:3:34"},"nodeType":"YulFunctionCall","src":"1967:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"1992:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1963:3:34"},"nodeType":"YulFunctionCall","src":"1963:32:34"},"nodeType":"YulIf","src":"1960:119:34"},{"nodeType":"YulBlock","src":"2089:117:34","statements":[{"nodeType":"YulVariableDeclaration","src":"2104:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"2118:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2108:6:34","type":""}]},{"nodeType":"YulAssignment","src":"2133:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2168:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"2179:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2164:3:34"},"nodeType":"YulFunctionCall","src":"2164:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2188:7:34"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2143:20:34"},"nodeType":"YulFunctionCall","src":"2143:53:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2133:6:34"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1920:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1931:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1943:6:34","type":""}],"src":"1884:329:34"},{"body":{"nodeType":"YulBlock","src":"2284:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2301:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2324:5:34"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2306:17:34"},"nodeType":"YulFunctionCall","src":"2306:24:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2294:6:34"},"nodeType":"YulFunctionCall","src":"2294:37:34"},"nodeType":"YulExpressionStatement","src":"2294:37:34"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2272:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2279:3:34","type":""}],"src":"2219:118:34"},{"body":{"nodeType":"YulBlock","src":"2441:124:34","statements":[{"nodeType":"YulAssignment","src":"2451:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2463:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2474:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2459:3:34"},"nodeType":"YulFunctionCall","src":"2459:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2451:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2531:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2544:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2555:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2540:3:34"},"nodeType":"YulFunctionCall","src":"2540:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2487:43:34"},"nodeType":"YulFunctionCall","src":"2487:71:34"},"nodeType":"YulExpressionStatement","src":"2487:71:34"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2413:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2425:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2436:4:34","type":""}],"src":"2343:222:34"},{"body":{"nodeType":"YulBlock","src":"2615:45:34","statements":[{"nodeType":"YulAssignment","src":"2625:29:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2640:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"2647:6:34","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2636:3:34"},"nodeType":"YulFunctionCall","src":"2636:18:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2625:7:34"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2597:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2607:7:34","type":""}],"src":"2571:89:34"},{"body":{"nodeType":"YulBlock","src":"2708:78:34","statements":[{"body":{"nodeType":"YulBlock","src":"2764:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2773:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2776:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2766:6:34"},"nodeType":"YulFunctionCall","src":"2766:12:34"},"nodeType":"YulExpressionStatement","src":"2766:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2731:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2755:5:34"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"2738:16:34"},"nodeType":"YulFunctionCall","src":"2738:23:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2728:2:34"},"nodeType":"YulFunctionCall","src":"2728:34:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2721:6:34"},"nodeType":"YulFunctionCall","src":"2721:42:34"},"nodeType":"YulIf","src":"2718:62:34"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2701:5:34","type":""}],"src":"2666:120:34"},{"body":{"nodeType":"YulBlock","src":"2843:86:34","statements":[{"nodeType":"YulAssignment","src":"2853:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2875:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2862:12:34"},"nodeType":"YulFunctionCall","src":"2862:20:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2853:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2917:5:34"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"2891:25:34"},"nodeType":"YulFunctionCall","src":"2891:32:34"},"nodeType":"YulExpressionStatement","src":"2891:32:34"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2821:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"2829:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2837:5:34","type":""}],"src":"2792:137:34"},{"body":{"nodeType":"YulBlock","src":"3017:390:34","statements":[{"body":{"nodeType":"YulBlock","src":"3063:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3065:77:34"},"nodeType":"YulFunctionCall","src":"3065:79:34"},"nodeType":"YulExpressionStatement","src":"3065:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3038:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"3047:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3034:3:34"},"nodeType":"YulFunctionCall","src":"3034:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"3059:2:34","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3030:3:34"},"nodeType":"YulFunctionCall","src":"3030:32:34"},"nodeType":"YulIf","src":"3027:119:34"},{"nodeType":"YulBlock","src":"3156:117:34","statements":[{"nodeType":"YulVariableDeclaration","src":"3171:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"3185:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3175:6:34","type":""}]},{"nodeType":"YulAssignment","src":"3200:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3235:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"3246:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3231:3:34"},"nodeType":"YulFunctionCall","src":"3231:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3255:7:34"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3210:20:34"},"nodeType":"YulFunctionCall","src":"3210:53:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3200:6:34"}]}]},{"nodeType":"YulBlock","src":"3283:117:34","statements":[{"nodeType":"YulVariableDeclaration","src":"3298:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"3312:2:34","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3302:6:34","type":""}]},{"nodeType":"YulAssignment","src":"3328:62:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3362:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"3373:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3358:3:34"},"nodeType":"YulFunctionCall","src":"3358:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3382:7:34"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"3338:19:34"},"nodeType":"YulFunctionCall","src":"3338:52:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3328:6:34"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2979:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2990:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3002:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3010:6:34","type":""}],"src":"2935:472:34"},{"body":{"nodeType":"YulBlock","src":"3441:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3458:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3461:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3451:6:34"},"nodeType":"YulFunctionCall","src":"3451:88:34"},"nodeType":"YulExpressionStatement","src":"3451:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3555:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3558:4:34","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3548:6:34"},"nodeType":"YulFunctionCall","src":"3548:15:34"},"nodeType":"YulExpressionStatement","src":"3548:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3579:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3582:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3572:6:34"},"nodeType":"YulFunctionCall","src":"3572:15:34"},"nodeType":"YulExpressionStatement","src":"3572:15:34"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"3413:180:34"},{"body":{"nodeType":"YulBlock","src":"3633:142:34","statements":[{"nodeType":"YulAssignment","src":"3643:25:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3666:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3648:17:34"},"nodeType":"YulFunctionCall","src":"3648:20:34"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"3643:1:34"}]},{"nodeType":"YulAssignment","src":"3677:25:34","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3700:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3682:17:34"},"nodeType":"YulFunctionCall","src":"3682:20:34"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"3677:1:34"}]},{"body":{"nodeType":"YulBlock","src":"3724:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"3726:16:34"},"nodeType":"YulFunctionCall","src":"3726:18:34"},"nodeType":"YulExpressionStatement","src":"3726:18:34"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3721:1:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3714:6:34"},"nodeType":"YulFunctionCall","src":"3714:9:34"},"nodeType":"YulIf","src":"3711:35:34"},{"nodeType":"YulAssignment","src":"3755:14:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3764:1:34"},{"name":"y","nodeType":"YulIdentifier","src":"3767:1:34"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3760:3:34"},"nodeType":"YulFunctionCall","src":"3760:9:34"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"3755:1:34"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3622:1:34","type":""},{"name":"y","nodeType":"YulTypedName","src":"3625:1:34","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"3631:1:34","type":""}],"src":"3599:176:34"},{"body":{"nodeType":"YulBlock","src":"3809:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3826:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3829:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3819:6:34"},"nodeType":"YulFunctionCall","src":"3819:88:34"},"nodeType":"YulExpressionStatement","src":"3819:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3923:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3926:4:34","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3916:6:34"},"nodeType":"YulFunctionCall","src":"3916:15:34"},"nodeType":"YulExpressionStatement","src":"3916:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3947:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3950:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3940:6:34"},"nodeType":"YulFunctionCall","src":"3940:15:34"},"nodeType":"YulExpressionStatement","src":"3940:15:34"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3781:180:34"},{"body":{"nodeType":"YulBlock","src":"4011:147:34","statements":[{"nodeType":"YulAssignment","src":"4021:25:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4044:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4026:17:34"},"nodeType":"YulFunctionCall","src":"4026:20:34"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"4021:1:34"}]},{"nodeType":"YulAssignment","src":"4055:25:34","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4078:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4060:17:34"},"nodeType":"YulFunctionCall","src":"4060:20:34"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"4055:1:34"}]},{"nodeType":"YulAssignment","src":"4089:16:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4100:1:34"},{"name":"y","nodeType":"YulIdentifier","src":"4103:1:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4096:3:34"},"nodeType":"YulFunctionCall","src":"4096:9:34"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4089:3:34"}]},{"body":{"nodeType":"YulBlock","src":"4129:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4131:16:34"},"nodeType":"YulFunctionCall","src":"4131:18:34"},"nodeType":"YulExpressionStatement","src":"4131:18:34"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4121:1:34"},{"name":"sum","nodeType":"YulIdentifier","src":"4124:3:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4118:2:34"},"nodeType":"YulFunctionCall","src":"4118:10:34"},"nodeType":"YulIf","src":"4115:36:34"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3998:1:34","type":""},{"name":"y","nodeType":"YulTypedName","src":"4001:1:34","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4007:3:34","type":""}],"src":"3967:191:34"},{"body":{"nodeType":"YulBlock","src":"4227:52:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4244:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4266:5:34"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"4249:16:34"},"nodeType":"YulFunctionCall","src":"4249:23:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4237:6:34"},"nodeType":"YulFunctionCall","src":"4237:36:34"},"nodeType":"YulExpressionStatement","src":"4237:36:34"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4215:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4222:3:34","type":""}],"src":"4164:115:34"},{"body":{"nodeType":"YulBlock","src":"4409:204:34","statements":[{"nodeType":"YulAssignment","src":"4419:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4431:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"4442:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4427:3:34"},"nodeType":"YulFunctionCall","src":"4427:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4419:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4499:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4512:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"4523:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4508:3:34"},"nodeType":"YulFunctionCall","src":"4508:17:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4455:43:34"},"nodeType":"YulFunctionCall","src":"4455:71:34"},"nodeType":"YulExpressionStatement","src":"4455:71:34"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4578:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4591:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"4602:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4587:3:34"},"nodeType":"YulFunctionCall","src":"4587:18:34"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"4536:41:34"},"nodeType":"YulFunctionCall","src":"4536:70:34"},"nodeType":"YulExpressionStatement","src":"4536:70:34"}]},"name":"abi_encode_tuple_t_uint256_t_uint16__to_t_uint256_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4373:9:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4385:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4393:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4404:4:34","type":""}],"src":"4285:328:34"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint16(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint16__to_t_uint256_t_uint16__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":34,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"7969":[{"length":32,"start":887},{"length":32,"start":989}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a6146101545780637fc842fe1461015e5780638da5cb5b1461017c578063b0fb56641461019a578063ee204abb146101b6578063f2fde38b146101e6576100a9565b8063358b8166146100ae5780633ac795de146100de57806341d7b1d3146100fa5780635e9cb48e146101185780636fa0e65314610136575b600080fd5b6100c860048036038101906100c39190610835565b610202565b6040516100d5919061087b565b60405180910390f35b6100f860048036038101906100f391906108c2565b61021a565b005b61010261036b565b60405161010f919061087b565b60405180910390f35b610120610370565b60405161012d919061087b565b60405180910390f35b61013e610375565b60405161014b91906108fe565b60405180910390f35b61015c610399565b005b6101666103ad565b604051610173919061087b565b60405180910390f35b6101846103b2565b60405161019191906108fe565b60405180910390f35b6101b460048036038101906101af9190610953565b6103db565b005b6101d060048036038101906101cb9190610835565b6105b0565b6040516101dd919061087b565b60405180910390f35b61020060048036038101906101fb9190610835565b6105f9565b005b60016020528060005260406000206000915090505481565b60008103610254576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156102cd576040517f303e7a0700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff167fba953728785de35be3827ee7a7a7867a8472947562602939440e6c0bdbf4725e82604051610360919061087b565b60405180910390a250565b600581565b601481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6103a161067f565b6103ab6000610706565b565b600781565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610460576040517f4b60273500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104c6576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006005905060008261ffff161180156104f05750600060078361ffff166104ee91906109c2565b145b15610505576014816105029190610a22565b90505b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105549190610a22565b925050819055508273ffffffffffffffffffffffffffffffffffffffff167f81ecaaa31e69fc17832354b83912ed393c78921b2e6fcf355113f2fb513e4f9982846040516105a3929190610a65565b60405180910390a2505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61060161067f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106735760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161066a91906108fe565b60405180910390fd5b61067c81610706565b50565b6106876107ca565b73ffffffffffffffffffffffffffffffffffffffff166106a56103b2565b73ffffffffffffffffffffffffffffffffffffffff1614610704576106c86107ca565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106fb91906108fe565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610802826107d7565b9050919050565b610812816107f7565b811461081d57600080fd5b50565b60008135905061082f81610809565b92915050565b60006020828403121561084b5761084a6107d2565b5b600061085984828501610820565b91505092915050565b6000819050919050565b61087581610862565b82525050565b6000602082019050610890600083018461086c565b92915050565b61089f81610862565b81146108aa57600080fd5b50565b6000813590506108bc81610896565b92915050565b6000602082840312156108d8576108d76107d2565b5b60006108e6848285016108ad565b91505092915050565b6108f8816107f7565b82525050565b600060208201905061091360008301846108ef565b92915050565b600061ffff82169050919050565b61093081610919565b811461093b57600080fd5b50565b60008135905061094d81610927565b92915050565b6000806040838503121561096a576109696107d2565b5b600061097885828601610820565b92505060206109898582860161093e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006109cd82610862565b91506109d883610862565b9250826109e8576109e7610993565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a2d82610862565b9150610a3883610862565b9250828201905080821115610a5057610a4f6109f3565b5b92915050565b610a5f81610919565b82525050565b6000604082019050610a7a600083018561086c565b610a876020830184610a56565b939250505056fea26469706673582212204f161ed40b782692045ed9cc38043e76a7e81d2c9dc46688d77885cc3671d08f64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x7FC842FE EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xB0FB5664 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xEE204ABB EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1E6 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x358B8166 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x3AC795DE EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x41D7B1D3 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x5E9CB48E EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FA0E653 EQ PUSH2 0x136 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x835 JUMP JUMPDEST PUSH2 0x202 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x8C2 JUMP JUMPDEST PUSH2 0x21A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH2 0x36B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH2 0x399 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x166 PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x953 JUMP JUMPDEST PUSH2 0x3DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x835 JUMP JUMPDEST PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x835 JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x254 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x2CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x303E7A0700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBA953728785DE35BE3827EE7A7A7867A8472947562602939440E6C0BDBF4725E DUP3 PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x3A1 PUSH2 0x67F JUMP JUMPDEST PUSH2 0x3AB PUSH1 0x0 PUSH2 0x706 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x460 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4B60273500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2C5211C600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP PUSH1 0x0 DUP3 PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x4F0 JUMPI POP PUSH1 0x0 PUSH1 0x7 DUP4 PUSH2 0xFFFF AND PUSH2 0x4EE SWAP2 SWAP1 PUSH2 0x9C2 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x505 JUMPI PUSH1 0x14 DUP2 PUSH2 0x502 SWAP2 SWAP1 PUSH2 0xA22 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x554 SWAP2 SWAP1 PUSH2 0xA22 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x81ECAAA31E69FC17832354B83912ED393C78921B2E6FCF355113F2FB513E4F99 DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x5A3 SWAP3 SWAP2 SWAP1 PUSH2 0xA65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x601 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x673 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66A SWAP2 SWAP1 PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x67C DUP2 PUSH2 0x706 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x687 PUSH2 0x7CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6A5 PUSH2 0x3B2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x704 JUMPI PUSH2 0x6C8 PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FB SWAP2 SWAP1 PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x802 DUP3 PUSH2 0x7D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x812 DUP2 PUSH2 0x7F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x81D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x82F DUP2 PUSH2 0x809 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x84B JUMPI PUSH2 0x84A PUSH2 0x7D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x859 DUP5 DUP3 DUP6 ADD PUSH2 0x820 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x875 DUP2 PUSH2 0x862 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x890 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x86C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x89F DUP2 PUSH2 0x862 JUMP JUMPDEST DUP2 EQ PUSH2 0x8AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8BC DUP2 PUSH2 0x896 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D8 JUMPI PUSH2 0x8D7 PUSH2 0x7D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8E6 DUP5 DUP3 DUP6 ADD PUSH2 0x8AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8F8 DUP2 PUSH2 0x7F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x913 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x930 DUP2 PUSH2 0x919 JUMP JUMPDEST DUP2 EQ PUSH2 0x93B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x94D DUP2 PUSH2 0x927 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x96A JUMPI PUSH2 0x969 PUSH2 0x7D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x978 DUP6 DUP3 DUP7 ADD PUSH2 0x820 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x989 DUP6 DUP3 DUP7 ADD PUSH2 0x93E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9CD DUP3 PUSH2 0x862 JUMP JUMPDEST SWAP2 POP PUSH2 0x9D8 DUP4 PUSH2 0x862 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x9E8 JUMPI PUSH2 0x9E7 PUSH2 0x993 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA2D DUP3 PUSH2 0x862 JUMP JUMPDEST SWAP2 POP PUSH2 0xA38 DUP4 PUSH2 0x862 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA50 JUMPI PUSH2 0xA4F PUSH2 0x9F3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA5F DUP2 PUSH2 0x919 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA7A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x86C JUMP JUMPDEST PUSH2 0xA87 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA56 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F AND 0x1E 0xD4 SIGNEXTEND PUSH25 0x2692045ED9CC38043E76A7E81D2C9DC46688D77885CC3671D0 DUP16 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"331:2522:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;846:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2251:360;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;430:46;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;545:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;767:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;661:44:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1567:562:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2750:101;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;846:41:27;;;;;;;;;;;;;;;;;:::o;2251:360::-;2321:1;2311:6;:11;2307:39;;2331:15;;;;;;;;;;;;;;2307:39;2381:6;2360;:18;2367:10;2360:18;;;;;;;;;;;;;;;;:27;2356:60;;;2396:20;;;;;;;;;;;;;;2356:60;2531:6;2509;:18;2516:10;2509:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;2585:10;2571:33;;;2597:6;2571:33;;;;;;:::i;:::-;;;;;;;;2251:360;:::o;430:46::-;475:1;430:46;:::o;545:48::-;591:2;545:48;:::o;767:36::-;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;661:44:27:-;704:1;661:44;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1567:562:27:-;1022:11;1008:25;;:10;:25;;;1004:48;;1042:10;;;;;;;;;;;;;;1004:48;1666:1:::1;1650:18;;:4;:18;;::::0;1646:46:::1;;1677:15;;;;;;;;;;;;;;1646:46;1756:21;475:1;1756:42;;1881:1;1872:6;:10;;;:44;;;;;1915:1;704;1886:6;:25;;;;;;:::i;:::-;:30;1872:44;1868:111;;;591:2;1932:36;;;;;:::i;:::-;;;1868:111;2043:13;2027:6;:12;2034:4;2027:12;;;;;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;2094:4;2080:42;;;2100:13;2115:6;2080:42;;;;;;;:::i;:::-;;;;;;;;1636:493;1567:562:::0;;:::o;2750:101::-;2806:7;2832:6;:12;2839:4;2832:12;;;;;;;;;;;;;;;;2825:19;;2750:101;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:12:-;709:7;735:10;728:17;;656:96;:::o;88:117:34:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:118::-;2306:24;2324:5;2306:24;:::i;:::-;2301:3;2294:37;2219:118;;:::o;2343:222::-;2436:4;2474:2;2463:9;2459:18;2451:26;;2487:71;2555:1;2544:9;2540:17;2531:6;2487:71;:::i;:::-;2343:222;;;;:::o;2571:89::-;2607:7;2647:6;2640:5;2636:18;2625:29;;2571:89;;;:::o;2666:120::-;2738:23;2755:5;2738:23;:::i;:::-;2731:5;2728:34;2718:62;;2776:1;2773;2766:12;2718:62;2666:120;:::o;2792:137::-;2837:5;2875:6;2862:20;2853:29;;2891:32;2917:5;2891:32;:::i;:::-;2792:137;;;;:::o;2935:472::-;3002:6;3010;3059:2;3047:9;3038:7;3034:23;3030:32;3027:119;;;3065:79;;:::i;:::-;3027:119;3185:1;3210:53;3255:7;3246:6;3235:9;3231:22;3210:53;:::i;:::-;3200:63;;3156:117;3312:2;3338:52;3382:7;3373:6;3362:9;3358:22;3338:52;:::i;:::-;3328:62;;3283:117;2935:472;;;;;:::o;3413:180::-;3461:77;3458:1;3451:88;3558:4;3555:1;3548:15;3582:4;3579:1;3572:15;3599:176;3631:1;3648:20;3666:1;3648:20;:::i;:::-;3643:25;;3682:20;3700:1;3682:20;:::i;:::-;3677:25;;3721:1;3711:35;;3726:18;;:::i;:::-;3711:35;3767:1;3764;3760:9;3755:14;;3599:176;;;;:::o;3781:180::-;3829:77;3826:1;3819:88;3926:4;3923:1;3916:15;3950:4;3947:1;3940:15;3967:191;4007:3;4026:20;4044:1;4026:20;:::i;:::-;4021:25;;4060:20;4078:1;4060:20;:::i;:::-;4055:25;;4103:1;4100;4096:9;4089:16;;4124:3;4121:1;4118:10;4115:36;;;4131:18;;:::i;:::-;4115:36;3967:191;;;;:::o;4164:115::-;4249:23;4266:5;4249:23;:::i;:::-;4244:3;4237:36;4164:115;;:::o;4285:328::-;4404:4;4442:2;4431:9;4427:18;4419:26;;4455:71;4523:1;4512:9;4508:17;4499:6;4455:71;:::i;:::-;4536:70;4602:2;4591:9;4587:18;4578:6;4536:70;:::i;:::-;4285:328;;;;;:::o"},"methodIdentifiers":{"POINTS_PER_DEPOSIT()":"41d7b1d3","STREAK_BONUS_POINTS()":"5e9cb48e","STREAK_MILESTONE()":"7fc842fe","claimPoints(uint256)":"3ac795de","getPoints(address)":"ee204abb","onDepositDay(address,uint16)":"b0fb5664","owner()":"8da5cb5b","points(address)":"358b8166","renounceOwnership()":"715018a6","savingsPool()":"6fa0e653","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_savingsPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientPoints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyPool\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"streak\",\"type\":\"uint16\"}],\"name\":\"PointsAwarded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PointsClaimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"POINTS_PER_DEPOSIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STREAK_BONUS_POINTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STREAK_MILESTONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"streak\",\"type\":\"uint16\"}],\"name\":\"onDepositDay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"points\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"savingsPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Awards 5 points per deposit day + 20 bonus points per 7-day streak milestone\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"claimPoints(uint256)\":{\"params\":{\"amount\":\"Amount of points to claim\"}},\"constructor\":{\"params\":{\"_owner\":\"Address of the contract owner\",\"_savingsPool\":\"Address of the savings pool contract\"}},\"getPoints(address)\":{\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"Current point balance\"}},\"onDepositDay(address,uint16)\":{\"params\":{\"streak\":\"Current streak days\",\"user\":\"User who made the deposit\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"RewardVault\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"POINTS_PER_DEPOSIT()\":{\"notice\":\"Points awarded per deposit day\"},\"STREAK_BONUS_POINTS()\":{\"notice\":\"Bonus points awarded per streak milestone\"},\"STREAK_MILESTONE()\":{\"notice\":\"Streak milestone interval (every 7 days)\"},\"claimPoints(uint256)\":{\"notice\":\"Claim accumulated points (burns them)\"},\"constructor\":{\"notice\":\"Constructor\"},\"getPoints(address)\":{\"notice\":\"Get user's current point balance\"},\"onDepositDay(address,uint16)\":{\"notice\":\"Called by SavingsPool on each deposit day\"},\"points(address)\":{\"notice\":\"User point balances\"},\"savingsPool()\":{\"notice\":\"Address of the authorized savings pool\"}},\"notice\":\"Manages reward points for consistent MicroSave users\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RewardVault.sol\":\"RewardVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/RewardVault.sol\":{\"keccak256\":\"0xef155fdd1e0ab8f8aacbbab97a4957e8709e18d2fda211599e0757d837c8aed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51975aec6a9df7945c4a4eef88b2a5b7bc45a3a278770e95f45c2d01f83e8a49\",\"dweb:/ipfs/QmWbnzUNyeYQD6reiDH5PWyCpd2BysR7FGwuaoY1AMGVpY\"]},\"contracts/interfaces/IRewardVault.sol\":{\"keccak256\":\"0xf38aab45dab48b7c7a79ff54afae0771a703e8199347b1c2ddff2526d00ea361\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ff2de5e6672df5a16e2fab2ae0f76043b5554748eafda9ea4a7fa0217fb911c\",\"dweb:/ipfs/QmZ7cN77QSpQUMZK83DMaY1FcLt5QPGfJfPsU7zcDSnM2y\"]}},\"version\":1}"}},"contracts/SavingsPool.sol":{"SavingsPool":{"abi":[{"inputs":[{"internalType":"address","name":"_stablecoin","type":"address"},{"internalType":"address","name":"_scoreRegistry","type":"address"},{"internalType":"address","name":"_rewardVault","type":"address"},{"internalType":"address","name":"_treasury","type":"address"},{"internalType":"uint16","name":"_depositFeeBps","type":"uint16"},{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExcessiveFee","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InsufficientAmount","type":"error"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidToken","type":"error"},{"inputs":[],"name":"NoPermitSupport","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"inputs":[],"name":"ZeroAddress","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"netAmount","type":"uint256"},{"indexed":false,"internalType":"uint40","name":"dayIndex","type":"uint40"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"depositFeeBps","type":"uint16"}],"name":"FeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint16","name":"newScore","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"streakDays","type":"uint16"},{"indexed":false,"internalType":"uint8","name":"freq30","type":"uint8"}],"name":"ScoreUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"treasury","type":"address"}],"name":"TreasuryUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[],"name":"MAX_FEE_BPS","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"STABLE","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"depositFeeBps","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserDepositCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserDepositDays","outputs":[{"internalType":"uint40[]","name":"","type":"uint40[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lastScoredDay","outputs":[{"internalType":"uint40","name":"","type":"uint40"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permitDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardVault","outputs":[{"internalType":"contract IRewardVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"scoreRegistry","outputs":[{"internalType":"contract IScoreRegistry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_depositFeeBps","type":"uint16"}],"name":"setFeeBps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_treasury","type":"address"}],"name":"setTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalDeposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1952":{"entryPoint":null,"id":1952,"parameterSlots":0,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8255":{"entryPoint":null,"id":8255,"parameterSlots":6,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":734,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":1013,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16_fromMemory":{"entryPoint":1076,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint16t_address_fromMemory":{"entryPoint":1099,"id":null,"parameterSlots":2,"returnSlots":6},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1255,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1272,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":967,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":1036,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":935,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":930,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":987,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint16":{"entryPoint":1050,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2700:34","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:34","statements":[{"nodeType":"YulAssignment","src":"57:19:34","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:34","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:34"},"nodeType":"YulFunctionCall","src":"67:9:34"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:34"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:34","type":""}],"src":"7:75:34"},{"body":{"nodeType":"YulBlock","src":"177:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:34"},"nodeType":"YulFunctionCall","src":"187:12:34"},"nodeType":"YulExpressionStatement","src":"187:12:34"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:34"},{"body":{"nodeType":"YulBlock","src":"300:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:34"},"nodeType":"YulFunctionCall","src":"310:12:34"},"nodeType":"YulExpressionStatement","src":"310:12:34"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:34"},{"body":{"nodeType":"YulBlock","src":"379:81:34","statements":[{"nodeType":"YulAssignment","src":"389:65:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:34"},"nodeType":"YulFunctionCall","src":"400:54:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:34"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:34","type":""}],"src":"334:126:34"},{"body":{"nodeType":"YulBlock","src":"511:51:34","statements":[{"nodeType":"YulAssignment","src":"521:35:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:34"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:34"},"nodeType":"YulFunctionCall","src":"532:24:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:34"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:34","type":""}],"src":"466:96:34"},{"body":{"nodeType":"YulBlock","src":"611:79:34","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:34"},"nodeType":"YulFunctionCall","src":"670:12:34"},"nodeType":"YulExpressionStatement","src":"670:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:34"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:34"},"nodeType":"YulFunctionCall","src":"641:24:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:34"},"nodeType":"YulFunctionCall","src":"631:35:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:34"},"nodeType":"YulFunctionCall","src":"624:43:34"},"nodeType":"YulIf","src":"621:63:34"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:34","type":""}],"src":"568:122:34"},{"body":{"nodeType":"YulBlock","src":"759:80:34","statements":[{"nodeType":"YulAssignment","src":"769:22:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:34"},"nodeType":"YulFunctionCall","src":"778:13:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:34"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:34"},"nodeType":"YulFunctionCall","src":"800:33:34"},"nodeType":"YulExpressionStatement","src":"800:33:34"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:34","type":""}],"src":"696:143:34"},{"body":{"nodeType":"YulBlock","src":"889:45:34","statements":[{"nodeType":"YulAssignment","src":"899:29:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"914:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"921:6:34","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"910:3:34"},"nodeType":"YulFunctionCall","src":"910:18:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"899:7:34"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"871:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"881:7:34","type":""}],"src":"845:89:34"},{"body":{"nodeType":"YulBlock","src":"982:78:34","statements":[{"body":{"nodeType":"YulBlock","src":"1038:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1047:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1050:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1040:6:34"},"nodeType":"YulFunctionCall","src":"1040:12:34"},"nodeType":"YulExpressionStatement","src":"1040:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1005:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:34"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"1012:16:34"},"nodeType":"YulFunctionCall","src":"1012:23:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1002:2:34"},"nodeType":"YulFunctionCall","src":"1002:34:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"995:6:34"},"nodeType":"YulFunctionCall","src":"995:42:34"},"nodeType":"YulIf","src":"992:62:34"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"975:5:34","type":""}],"src":"940:120:34"},{"body":{"nodeType":"YulBlock","src":"1128:79:34","statements":[{"nodeType":"YulAssignment","src":"1138:22:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1153:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1147:5:34"},"nodeType":"YulFunctionCall","src":"1147:13:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1138:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1195:5:34"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"1169:25:34"},"nodeType":"YulFunctionCall","src":"1169:32:34"},"nodeType":"YulExpressionStatement","src":"1169:32:34"}]},"name":"abi_decode_t_uint16_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1106:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"1114:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1122:5:34","type":""}],"src":"1066:141:34"},{"body":{"nodeType":"YulBlock","src":"1374:971:34","statements":[{"body":{"nodeType":"YulBlock","src":"1421:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1423:77:34"},"nodeType":"YulFunctionCall","src":"1423:79:34"},"nodeType":"YulExpressionStatement","src":"1423:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1395:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"1404:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1391:3:34"},"nodeType":"YulFunctionCall","src":"1391:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"1416:3:34","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1387:3:34"},"nodeType":"YulFunctionCall","src":"1387:33:34"},"nodeType":"YulIf","src":"1384:120:34"},{"nodeType":"YulBlock","src":"1514:128:34","statements":[{"nodeType":"YulVariableDeclaration","src":"1529:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"1543:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1533:6:34","type":""}]},{"nodeType":"YulAssignment","src":"1558:74:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1604:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"1615:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1600:3:34"},"nodeType":"YulFunctionCall","src":"1600:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1624:7:34"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1568:31:34"},"nodeType":"YulFunctionCall","src":"1568:64:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1558:6:34"}]}]},{"nodeType":"YulBlock","src":"1652:129:34","statements":[{"nodeType":"YulVariableDeclaration","src":"1667:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"1681:2:34","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1671:6:34","type":""}]},{"nodeType":"YulAssignment","src":"1697:74:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1743:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"1754:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1739:3:34"},"nodeType":"YulFunctionCall","src":"1739:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1763:7:34"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1707:31:34"},"nodeType":"YulFunctionCall","src":"1707:64:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1697:6:34"}]}]},{"nodeType":"YulBlock","src":"1791:129:34","statements":[{"nodeType":"YulVariableDeclaration","src":"1806:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"1820:2:34","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1810:6:34","type":""}]},{"nodeType":"YulAssignment","src":"1836:74:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1882:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"1893:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1878:3:34"},"nodeType":"YulFunctionCall","src":"1878:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1902:7:34"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1846:31:34"},"nodeType":"YulFunctionCall","src":"1846:64:34"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1836:6:34"}]}]},{"nodeType":"YulBlock","src":"1930:129:34","statements":[{"nodeType":"YulVariableDeclaration","src":"1945:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"1959:2:34","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1949:6:34","type":""}]},{"nodeType":"YulAssignment","src":"1975:74:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2021:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"2032:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2017:3:34"},"nodeType":"YulFunctionCall","src":"2017:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2041:7:34"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1985:31:34"},"nodeType":"YulFunctionCall","src":"1985:64:34"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1975:6:34"}]}]},{"nodeType":"YulBlock","src":"2069:129:34","statements":[{"nodeType":"YulVariableDeclaration","src":"2084:17:34","value":{"kind":"number","nodeType":"YulLiteral","src":"2098:3:34","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2088:6:34","type":""}]},{"nodeType":"YulAssignment","src":"2115:73:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2160:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"2171:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2156:3:34"},"nodeType":"YulFunctionCall","src":"2156:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2180:7:34"}],"functionName":{"name":"abi_decode_t_uint16_fromMemory","nodeType":"YulIdentifier","src":"2125:30:34"},"nodeType":"YulFunctionCall","src":"2125:63:34"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2115:6:34"}]}]},{"nodeType":"YulBlock","src":"2208:130:34","statements":[{"nodeType":"YulVariableDeclaration","src":"2223:17:34","value":{"kind":"number","nodeType":"YulLiteral","src":"2237:3:34","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2227:6:34","type":""}]},{"nodeType":"YulAssignment","src":"2254:74:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2300:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"2311:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2296:3:34"},"nodeType":"YulFunctionCall","src":"2296:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2320:7:34"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2264:31:34"},"nodeType":"YulFunctionCall","src":"2264:64:34"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2254:6:34"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint16t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1304:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1315:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1327:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1335:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1343:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1351:6:34","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1359:6:34","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1367:6:34","type":""}],"src":"1213:1132:34"},{"body":{"nodeType":"YulBlock","src":"2416:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2433:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:34"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2438:17:34"},"nodeType":"YulFunctionCall","src":"2438:24:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2426:6:34"},"nodeType":"YulFunctionCall","src":"2426:37:34"},"nodeType":"YulExpressionStatement","src":"2426:37:34"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2404:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2411:3:34","type":""}],"src":"2351:118:34"},{"body":{"nodeType":"YulBlock","src":"2573:124:34","statements":[{"nodeType":"YulAssignment","src":"2583:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2595:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2606:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2591:3:34"},"nodeType":"YulFunctionCall","src":"2591:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2583:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2663:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2676:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2687:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2672:3:34"},"nodeType":"YulFunctionCall","src":"2672:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2619:43:34"},"nodeType":"YulFunctionCall","src":"2619:71:34"},"nodeType":"YulExpressionStatement","src":"2619:71:34"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2545:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2557:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2568:4:34","type":""}],"src":"2475:222:34"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint16t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":34,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2CD1 CODESIZE SUB DUP1 PUSH3 0x2CD1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x44B JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0x4F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBE DUP2 PUSH3 0x2DE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x12D JUMPI PUSH1 0x40 MLOAD PUSH32 0xC1AB6DC100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x194 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND GT ISZERO PUSH3 0x1D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2977DA4400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH1 0x2 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP PUSH3 0x515 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3D4 DUP3 PUSH3 0x3A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3E6 DUP2 PUSH3 0x3C7 JUMP JUMPDEST DUP2 EQ PUSH3 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x406 DUP2 PUSH3 0x3DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x425 DUP2 PUSH3 0x40C JUMP JUMPDEST DUP2 EQ PUSH3 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x445 DUP2 PUSH3 0x41A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x46B JUMPI PUSH3 0x46A PUSH3 0x3A2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x47B DUP10 DUP3 DUP11 ADD PUSH3 0x3F5 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x48E DUP10 DUP3 DUP11 ADD PUSH3 0x3F5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x4A1 DUP10 DUP3 DUP11 ADD PUSH3 0x3F5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x4B4 DUP10 DUP3 DUP11 ADD PUSH3 0x3F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH3 0x4C7 DUP10 DUP3 DUP11 ADD PUSH3 0x434 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH3 0x4DA DUP10 DUP3 DUP11 ADD PUSH3 0x3F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH3 0x4F2 DUP2 PUSH3 0x3C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x50F PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x4E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x2738 PUSH3 0x599 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x6D4 ADD MSTORE DUP2 DUP2 PUSH2 0xCCA ADD MSTORE DUP2 DUP2 PUSH2 0xD06 ADD MSTORE DUP2 DUP2 PUSH2 0x190D ADD MSTORE PUSH2 0x1949 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x6F8 ADD MSTORE DUP2 DUP2 PUSH2 0xB6A ADD MSTORE PUSH2 0x17B3 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x634 ADD MSTORE DUP2 DUP2 PUSH2 0x72E ADD MSTORE DUP2 DUP2 PUSH2 0x96B ADD MSTORE DUP2 DUP2 PUSH2 0xA8A ADD MSTORE DUP2 DUP2 PUSH2 0xE90 ADD MSTORE DUP2 DUP2 PUSH2 0x15B4 ADD MSTORE PUSH2 0x16D3 ADD MSTORE PUSH2 0x2738 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D882097 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xB6B55F25 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0xCE84DAAD EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xD55BE8C6 EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0xD68B29FE EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3E6 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x7D882097 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95CCEA67 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x9AB1AF67 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0xAB879827 EQ PUSH2 0x326 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x3EB8104A GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x3EB8104A EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x54D9F653 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x28A JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x23B1FC9 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x1BAE91A4 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x3A2C6777 EQ PUSH2 0x1EA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F2 PUSH2 0x6D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x71A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x238 PUSH2 0x72C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH2 0x750 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x274 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH2 0x78D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29C PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH2 0x7A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C4 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x1DFF JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1F0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32E PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x901 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST PUSH2 0xE44 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x384 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST PUSH2 0xF96 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x400 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST PUSH2 0x1019 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40A PUSH2 0x109F JUMP JUMPDEST PUSH1 0x64 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x44D JUMPI PUSH1 0x40 MLOAD PUSH32 0x2977DA4400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC8FCF8EE1425E7E60B8AF83735E1EB516D5B9EF05BFD6EECE552EBAEB7C75B48 DUP2 PUSH1 0x40 MLOAD PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x510 PUSH2 0x1126 JUMP JUMPDEST PUSH2 0x518 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x552 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5945EA5600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x5CB JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x678 DUP2 DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11AD SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6BE SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x6CF PUSH2 0x122C JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x722 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x72A PUSH2 0x1235 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x795 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x79F PUSH1 0x0 PUSH2 0x1298 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7AF PUSH2 0x109F JUMP JUMPDEST PUSH2 0x7B7 PUSH2 0x135C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7EA PUSH2 0x109F JUMP JUMPDEST PUSH2 0x7F2 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x824 PUSH2 0x7FD PUSH2 0x7B9 JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11AD SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x8E1 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x5 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x4 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x8A2 JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x909 PUSH2 0x1126 JUMP JUMPDEST PUSH2 0x911 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x94B JUMPI PUSH1 0x40 MLOAD PUSH32 0x5945EA5600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH3 0x15180 TIMESTAMP PUSH2 0x961 SWAP2 SWAP1 PUSH2 0x20CC JUMP JUMPDEST SWAP1 POP PUSH2 0x9B0 DUP3 ADDRESS DUP6 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13FF SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0xA24 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xAD0 JUMPI PUSH2 0x2710 PUSH1 0x2 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP6 PUSH2 0xA4C SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH2 0xA56 SWAP2 SWAP1 PUSH2 0x20CC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xACF JUMPI PUSH2 0xACE PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11AD SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 DUP2 DUP6 PUSH2 0xADE SWAP2 SWAP1 PUSH2 0x213F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB2F SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB48 SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xB5B DUP6 DUP6 PUSH2 0x1481 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 ISZERO PUSH2 0xDDF JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x950F2DAE DUP10 PUSH1 0x5 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC01 SWAP3 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC20 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC44 SWAP2 SWAP1 PUSH2 0x24FC JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP DUP3 SWAP6 POP POP POP POP DUP7 PUSH1 0x6 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD8C JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB0FB5664 DUP10 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5F SWAP3 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD8A JUMPI POP PUSH1 0x1 JUMPDEST POP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B24CE28727F6853C576FDD52D3DD47B59988260937E521E19296BCF93361FA6 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDD6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2587 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCB5867ADA7E790A7D70414567CBA30A43473FE877223B5FA637F5AF7EDD02E52 DUP11 DUP8 DUP11 PUSH1 0x40 MLOAD PUSH2 0xE29 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP PUSH2 0xE41 PUSH2 0x122C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE4C PUSH2 0x1126 JUMP JUMPDEST PUSH2 0xE54 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x0 DUP6 SUB PUSH2 0xE8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x5945EA5600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD505ACCF CALLER ADDRESS DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF3 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2604 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF1E JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0xF54 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD0AD80100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF5E CALLER DUP7 PUSH2 0x1599 JUMP JUMPDEST PUSH2 0xF66 PUSH2 0x122C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xF9E PUSH2 0x109F JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7DAE230F18360D76A040C81F050AA14EB9D6DC7901B20FC5D855E2A20FE814D1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x100E SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1021 PUSH2 0x109F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1093 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108A SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x109C DUP2 PUSH2 0x1298 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x10A7 PUSH2 0x1A7F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10C5 PUSH2 0x7B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1124 JUMPI PUSH2 0x10E8 PUSH2 0x1A7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111B SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1162 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1174 PUSH2 0x750 JUMP JUMPDEST ISZERO PUSH2 0x11AB JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1227 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x11E0 SWAP3 SWAP2 SWAP1 PUSH2 0x2673 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1A87 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x123D PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1281 PUSH2 0x1A7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128E SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1364 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x13A8 PUSH2 0x1A7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B5 SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x13C7 PUSH2 0x750 JUMP JUMPDEST PUSH2 0x13FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x147B DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1434 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x269C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1A87 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 DUP1 SLOAD SWAP1 POP GT DUP1 ISZERO PUSH2 0x152F JUMPI POP DUP3 PUSH5 0xFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP4 DUP1 SLOAD SWAP1 POP PUSH2 0x14EE SWAP2 SWAP1 PUSH2 0x213F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x14FF JUMPI PUSH2 0x14FE PUSH2 0x26D3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x5 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND PUSH5 0xFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x153E JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1593 JUMP JUMPDEST DUP1 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x5 MUL SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15180 TIMESTAMP PUSH2 0x15AA SWAP2 SWAP1 PUSH2 0x20CC JUMP JUMPDEST SWAP1 POP PUSH2 0x15F9 DUP4 ADDRESS DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13FF SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x166D JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1719 JUMPI PUSH2 0x2710 PUSH1 0x2 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP5 PUSH2 0x1695 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH2 0x169F SWAP2 SWAP1 PUSH2 0x20CC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1718 JUMPI PUSH2 0x1717 PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11AD SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 DUP2 DUP5 PUSH2 0x1727 SWAP2 SWAP1 PUSH2 0x213F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1778 SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1791 SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x17A4 DUP7 DUP6 PUSH2 0x1481 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1A25 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x950F2DAE DUP11 PUSH1 0x5 PUSH1 0x0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184A SWAP3 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1869 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x188D SWAP2 SWAP1 PUSH2 0x24FC JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP7 PUSH1 0x6 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19CF JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB0FB5664 DUP11 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A2 SWAP3 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x19CD JUMPI POP PUSH1 0x1 JUMPDEST POP JUMPDEST DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B24CE28727F6853C576FDD52D3DD47B59988260937E521E19296BCF93361FA6 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1A19 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2587 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCB5867ADA7E790A7D70414567CBA30A43473FE877223B5FA637F5AF7EDD02E52 DUP7 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1A6F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x1AAA JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH1 0x0 MLOAD SWAP2 POP POP PUSH1 0x0 DUP3 EQ PUSH2 0x1AC5 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1B23 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B1A SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B45 DUP2 PUSH2 0x1B2E JUMP JUMPDEST DUP2 EQ PUSH2 0x1B50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B62 DUP2 PUSH2 0x1B3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B7E JUMPI PUSH2 0x1B7D PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B8C DUP5 DUP3 DUP6 ADD PUSH2 0x1B53 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC0 DUP3 PUSH2 0x1B95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD0 DUP2 PUSH2 0x1BB5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BED DUP2 PUSH2 0x1BC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C09 JUMPI PUSH2 0x1C08 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C17 DUP5 DUP3 DUP6 ADD PUSH2 0x1BDE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C33 DUP2 PUSH2 0x1C20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C4E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C5D DUP2 PUSH2 0x1C20 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C7A DUP2 PUSH2 0x1C54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C96 JUMPI PUSH2 0x1C95 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CA4 DUP5 DUP3 DUP6 ADD PUSH2 0x1C6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD2 PUSH2 0x1CCD PUSH2 0x1CC8 DUP5 PUSH2 0x1B95 JUMP JUMPDEST PUSH2 0x1CAD JUMP JUMPDEST PUSH2 0x1B95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE4 DUP3 PUSH2 0x1CB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF6 DUP3 PUSH2 0x1CD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D06 DUP2 PUSH2 0x1CEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D21 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D32 DUP3 PUSH2 0x1CD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D42 DUP2 PUSH2 0x1D27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D5D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6E DUP3 PUSH2 0x1CD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D7E DUP2 PUSH2 0x1D63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D99 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB4 DUP2 PUSH2 0x1D9F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DCF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DDE DUP2 PUSH2 0x1BB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DF9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E16 JUMPI PUSH2 0x1E15 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E24 DUP6 DUP3 DUP7 ADD PUSH2 0x1BDE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E35 DUP6 DUP3 DUP7 ADD PUSH2 0x1C6B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0xFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E85 DUP2 PUSH2 0x1E6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E97 DUP4 DUP4 PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EBB DUP3 PUSH2 0x1E3F JUMP JUMPDEST PUSH2 0x1EC5 DUP2 DUP6 PUSH2 0x1E4A JUMP JUMPDEST SWAP4 POP PUSH2 0x1ED0 DUP4 PUSH2 0x1E5B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F01 JUMPI DUP2 MLOAD PUSH2 0x1EE8 DUP9 DUP3 PUSH2 0x1E8B JUMP JUMPDEST SWAP8 POP PUSH2 0x1EF3 DUP4 PUSH2 0x1EA3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1ED4 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F28 DUP2 DUP5 PUSH2 0x1EB0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F39 DUP2 PUSH2 0x1B2E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F54 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F70 DUP2 PUSH2 0x1F5A JUMP JUMPDEST DUP2 EQ PUSH2 0x1F7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F8D DUP2 PUSH2 0x1F67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FA6 DUP2 PUSH2 0x1F93 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FC3 DUP2 PUSH2 0x1F9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1FE5 JUMPI PUSH2 0x1FE4 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FF3 DUP9 DUP3 DUP10 ADD PUSH2 0x1C6B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2004 DUP9 DUP3 DUP10 ADD PUSH2 0x1C6B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2015 DUP9 DUP3 DUP10 ADD PUSH2 0x1F7E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2026 DUP9 DUP3 DUP10 ADD PUSH2 0x1FB4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2037 DUP9 DUP3 DUP10 ADD PUSH2 0x1FB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x204D DUP2 PUSH2 0x1E6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2068 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2044 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20D7 DUP3 PUSH2 0x1C20 JUMP JUMPDEST SWAP2 POP PUSH2 0x20E2 DUP4 PUSH2 0x1C20 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x20F2 JUMPI PUSH2 0x20F1 PUSH2 0x206E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2108 DUP3 PUSH2 0x1C20 JUMP JUMPDEST SWAP2 POP PUSH2 0x2113 DUP4 PUSH2 0x1C20 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2121 DUP2 PUSH2 0x1C20 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2138 JUMPI PUSH2 0x2137 PUSH2 0x209D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x214A DUP3 PUSH2 0x1C20 JUMP JUMPDEST SWAP2 POP PUSH2 0x2155 DUP4 PUSH2 0x1C20 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x216D JUMPI PUSH2 0x216C PUSH2 0x209D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217E DUP3 PUSH2 0x1C20 JUMP JUMPDEST SWAP2 POP PUSH2 0x2189 DUP4 PUSH2 0x1C20 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x21A1 JUMPI PUSH2 0x21A0 PUSH2 0x209D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0xFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21F8 PUSH2 0x21F3 DUP4 PUSH2 0x21C7 JUMP JUMPDEST PUSH2 0x21D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x28 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221F PUSH2 0x221A DUP4 PUSH2 0x21FF JUMP JUMPDEST PUSH2 0x21D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x50 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2246 PUSH2 0x2241 DUP4 PUSH2 0x2226 JUMP JUMPDEST PUSH2 0x21D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x78 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x226D PUSH2 0x2268 DUP4 PUSH2 0x224D JUMP JUMPDEST PUSH2 0x21D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xA0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2294 PUSH2 0x228F DUP4 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x21D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xC8 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BB PUSH2 0x22B6 DUP4 PUSH2 0x229B JUMP JUMPDEST PUSH2 0x21D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22CD DUP3 PUSH2 0x21A7 JUMP JUMPDEST PUSH2 0x22D7 DUP2 DUP6 PUSH2 0x1E4A JUMP JUMPDEST SWAP4 POP DUP4 PUSH2 0x22E3 DUP5 PUSH2 0x21B2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO PUSH2 0x23A0 JUMPI JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x6 SUB DUP3 ADD LT ISZERO PUSH2 0x239F JUMPI DUP2 SLOAD PUSH2 0x230F DUP9 PUSH2 0x230A DUP4 PUSH2 0x21E5 JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH2 0x2327 DUP9 PUSH2 0x2322 DUP4 PUSH2 0x220C JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH2 0x233F DUP9 PUSH2 0x233A DUP4 PUSH2 0x2233 JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH2 0x2357 DUP9 PUSH2 0x2352 DUP4 PUSH2 0x225A JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH2 0x236F DUP9 PUSH2 0x236A DUP4 PUSH2 0x2281 JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH2 0x2387 DUP9 PUSH2 0x2382 DUP4 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH1 0x1 DUP4 ADD SWAP3 POP POP PUSH1 0x6 DUP2 ADD SWAP1 POP PUSH2 0x22ED JUMP JUMPDEST JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x2495 JUMPI DUP2 SLOAD DUP5 DUP3 LT ISZERO PUSH2 0x23D0 JUMPI PUSH2 0x23C3 DUP9 PUSH2 0x23BE DUP4 PUSH2 0x21E5 JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH1 0x1 DUP3 ADD SWAP2 POP JUMPDEST DUP5 DUP3 LT ISZERO PUSH2 0x23F7 JUMPI PUSH2 0x23EA DUP9 PUSH2 0x23E5 DUP4 PUSH2 0x220C JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH1 0x1 DUP3 ADD SWAP2 POP JUMPDEST DUP5 DUP3 LT ISZERO PUSH2 0x241E JUMPI PUSH2 0x2411 DUP9 PUSH2 0x240C DUP4 PUSH2 0x2233 JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH1 0x1 DUP3 ADD SWAP2 POP JUMPDEST DUP5 DUP3 LT ISZERO PUSH2 0x2445 JUMPI PUSH2 0x2438 DUP9 PUSH2 0x2433 DUP4 PUSH2 0x225A JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH1 0x1 DUP3 ADD SWAP2 POP JUMPDEST DUP5 DUP3 LT ISZERO PUSH2 0x246C JUMPI PUSH2 0x245F DUP9 PUSH2 0x245A DUP4 PUSH2 0x2281 JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH1 0x1 DUP3 ADD SWAP2 POP JUMPDEST DUP5 DUP3 LT ISZERO PUSH2 0x2493 JUMPI PUSH2 0x2486 DUP9 PUSH2 0x2481 DUP4 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH1 0x1 DUP3 ADD SWAP2 POP JUMPDEST POP JUMPDEST DUP7 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24B7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DD5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x24C9 DUP2 DUP5 PUSH2 0x22C2 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24E1 DUP2 PUSH2 0x1B3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24F6 DUP2 PUSH2 0x1F67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2515 JUMPI PUSH2 0x2514 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2523 DUP7 DUP3 DUP8 ADD PUSH2 0x24D2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2534 DUP7 DUP3 DUP8 ADD PUSH2 0x24D2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2545 DUP7 DUP3 DUP8 ADD PUSH2 0x24E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2564 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0x2571 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F30 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2581 DUP2 PUSH2 0x1F5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x259C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1F30 JUMP JUMPDEST PUSH2 0x25A9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F30 JUMP JUMPDEST PUSH2 0x25B6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2578 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25D3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x25E0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x25ED PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2044 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x25FE DUP2 PUSH2 0x1F93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2619 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0x2626 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0x2633 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x2640 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x264D PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x2578 JUMP JUMPDEST PUSH2 0x265A PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x25F5 JUMP JUMPDEST PUSH2 0x2667 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x25F5 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2688 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0x2695 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C2A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26B1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0x26BE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0x26CB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C2A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 PUSH19 0xFBFE1F5B2980E1A14D22C02A69135683C29B33 EXP BYTE DUP4 0x4F DUP11 SIGNEXTEND SWAP9 0xC5 0xCF JUMP 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"735:9484:28:-:0;;;2301:620;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2500:6;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1857:1:16;2061:7;:21;;;;2545:1:28::1;2522:25;;:11;:25;;::::0;2518:52:::1;;2556:14;;;;;;;;;;;;;;2518:52;2610:1;2584:28;;:14;:28;;::::0;2580:54:::1;;2621:13;;;;;;;;;;;;;;2580:54;943:3;2648:28;;:14;:28;;;2644:55;;;2685:14;;;;;;;;;;;;;;2644:55;2726:11;2710:28;;;;;;;;::::0;::::1;2779:14;2748:46;;;;;;;;::::0;::::1;2831:12;2804:40;;;;;;;;::::0;::::1;2865:9;2854:8;;:20;;;;;;;;;;;;;;;;;;2900:14;2884:13;;:30;;;;;;;;;;;;;;;;;;2301:620:::0;;;;;;735:9484;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:34:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:89::-;881:7;921:6;914:5;910:18;899:29;;845:89;;;:::o;940:120::-;1012:23;1029:5;1012:23;:::i;:::-;1005:5;1002:34;992:62;;1050:1;1047;1040:12;992:62;940:120;:::o;1066:141::-;1122:5;1153:6;1147:13;1138:22;;1169:32;1195:5;1169:32;:::i;:::-;1066:141;;;;:::o;1213:1132::-;1327:6;1335;1343;1351;1359;1367;1416:3;1404:9;1395:7;1391:23;1387:33;1384:120;;;1423:79;;:::i;:::-;1384:120;1543:1;1568:64;1624:7;1615:6;1604:9;1600:22;1568:64;:::i;:::-;1558:74;;1514:128;1681:2;1707:64;1763:7;1754:6;1743:9;1739:22;1707:64;:::i;:::-;1697:74;;1652:129;1820:2;1846:64;1902:7;1893:6;1882:9;1878:22;1846:64;:::i;:::-;1836:74;;1791:129;1959:2;1985:64;2041:7;2032:6;2021:9;2017:22;1985:64;:::i;:::-;1975:74;;1930:129;2098:3;2125:63;2180:7;2171:6;2160:9;2156:22;2125:63;:::i;:::-;2115:73;;2069:129;2237:3;2264:64;2320:7;2311:6;2300:9;2296:22;2264:64;:::i;:::-;2254:74;;2208:130;1213:1132;;;;;;;;:::o;2351:118::-;2438:24;2456:5;2438:24;:::i;:::-;2433:3;2426:37;2351:118;;:::o;2475:222::-;2568:4;2606:2;2595:9;2591:18;2583:26;;2619:71;2687:1;2676:9;2672:17;2663:6;2619:71;:::i;:::-;2475:222;;;;:::o;735:9484:28:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@MAX_FEE_BPS_8145":{"entryPoint":3949,"id":8145,"parameterSlots":0,"returnSlots":0},"@STABLE_8149":{"entryPoint":1836,"id":8149,"parameterSlots":0,"returnSlots":0},"@_callOptionalReturn_1630":{"entryPoint":6791,"id":1630,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":4255,"id":84,"parameterSlots":0,"returnSlots":0},"@_executeDeposit_8635":{"entryPoint":5529,"id":8635,"parameterSlots":2,"returnSlots":0},"@_msgSender_1684":{"entryPoint":6783,"id":1684,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_1987":{"entryPoint":4652,"id":1987,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_1979":{"entryPoint":4390,"id":1979,"parameterSlots":0,"returnSlots":0},"@_pause_1913":{"entryPoint":4956,"id":1913,"parameterSlots":0,"returnSlots":0},"@_recordDepositDay_8736":{"entryPoint":5249,"id":8736,"parameterSlots":2,"returnSlots":1},"@_requireNotPaused_1884":{"entryPoint":4460,"id":1884,"parameterSlots":0,"returnSlots":0},"@_requirePaused_1897":{"entryPoint":5055,"id":1897,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":4760,"id":146,"parameterSlots":1,"returnSlots":0},"@_unpause_1929":{"entryPoint":4661,"id":1929,"parameterSlots":0,"returnSlots":0},"@balances_8168":{"entryPoint":1264,"id":8168,"parameterSlots":0,"returnSlots":0},"@depositFeeBps_8163":{"entryPoint":2285,"id":8163,"parameterSlots":0,"returnSlots":0},"@deposit_8428":{"entryPoint":2305,"id":8428,"parameterSlots":1,"returnSlots":0},"@emergencyWithdraw_8847":{"entryPoint":2018,"id":8847,"parameterSlots":2,"returnSlots":0},"@getUserDepositCount_8764":{"entryPoint":1188,"id":8764,"parameterSlots":1,"returnSlots":1},"@getUserDepositDays_8750":{"entryPoint":2088,"id":8750,"parameterSlots":1,"returnSlots":1},"@lastScoredDay_8182":{"entryPoint":3954,"id":8182,"parameterSlots":0,"returnSlots":0},"@owner_67":{"entryPoint":1977,"id":67,"parameterSlots":0,"returnSlots":1},"@pause_8815":{"entryPoint":1959,"id":8815,"parameterSlots":0,"returnSlots":0},"@paused_1872":{"entryPoint":1872,"id":1872,"parameterSlots":0,"returnSlots":1},"@permitDeposit_8487":{"entryPoint":3652,"id":8487,"parameterSlots":5,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":1933,"id":98,"parameterSlots":0,"returnSlots":0},"@rewardVault_8157":{"entryPoint":1746,"id":8157,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1280":{"entryPoint":5119,"id":1280,"parameterSlots":4,"returnSlots":0},"@safeTransfer_1253":{"entryPoint":4525,"id":1253,"parameterSlots":3,"returnSlots":0},"@scoreRegistry_8153":{"entryPoint":1782,"id":8153,"parameterSlots":0,"returnSlots":0},"@setFeeBps_8788":{"entryPoint":1026,"id":8788,"parameterSlots":1,"returnSlots":0},"@setTreasury_8805":{"entryPoint":3990,"id":8805,"parameterSlots":1,"returnSlots":0},"@totalDeposits_8171":{"entryPoint":1953,"id":8171,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":4121,"id":126,"parameterSlots":1,"returnSlots":0},"@treasury_8160":{"entryPoint":1895,"id":8160,"parameterSlots":0,"returnSlots":0},"@unpause_8825":{"entryPoint":1818,"id":8825,"parameterSlots":0,"returnSlots":0},"@withdraw_8691":{"entryPoint":1288,"id":8691,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":7134,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":8116,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16":{"entryPoint":6995,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16_fromMemory":{"entryPoint":9426,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7275,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":8062,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8_fromMemory":{"entryPoint":9447,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7155,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7679,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint16":{"entryPoint":7016,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint16t_uint16t_uint8_fromMemory":{"entryPoint":9468,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":7296,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":8137,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encodeUpdatedPos_t_uint40_to_t_uint40":{"entryPoint":7819,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7637,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint40_$dyn_memory_ptr_to_t_array$_t_uint40_$dyn_memory_ptr_fromStack":{"entryPoint":7856,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint40_$dyn_storage_to_t_array$_t_uint40_$dyn_memory_ptr_fromStack":{"entryPoint":8898,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7595,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":9717,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IERC20_$992_to_t_address_fromStack":{"entryPoint":7541,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IRewardVault_$9329_to_t_address_fromStack":{"entryPoint":7421,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IScoreRegistry_$9548_to_t_address_fromStack":{"entryPoint":7481,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":7984,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7210,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint40_to_t_uint40":{"entryPoint":7804,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint40_to_t_uint40_fromStack":{"entryPoint":8260,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":9592,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7652,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":9884,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":9732,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_address_t_array$_t_uint40_$dyn_storage__to_t_address_t_array$_t_uint40_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9378,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint16__to_t_address_t_uint16__fromStack_reversed":{"entryPoint":9551,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":9843,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint40_$dyn_memory_ptr__to_t_array$_t_uint40_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7950,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7610,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$992__to_t_address__fromStack_reversed":{"entryPoint":7556,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IRewardVault_$9329__to_t_address__fromStack_reversed":{"entryPoint":7436,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IScoreRegistry_$9548__to_t_address__fromStack_reversed":{"entryPoint":7496,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":7999,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint16_t_uint8__to_t_uint16_t_uint16_t_uint8__fromStack_reversed":{"entryPoint":9607,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7225,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint40__to_t_uint256_t_uint256_t_uint40__fromStack_reversed":{"entryPoint":9662,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint40__to_t_uint40__fromStack_reversed":{"entryPoint":8275,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint40_$dyn_memory_ptr":{"entryPoint":7771,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint40_$dyn_storage":{"entryPoint":8626,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint40_$dyn_memory_ptr":{"entryPoint":7743,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint40_$dyn_storage":{"entryPoint":8615,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint40_$dyn_memory_ptr":{"entryPoint":7843,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint40_$dyn_memory_ptr_fromStack":{"entryPoint":7754,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8563,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":8396,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":8445,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":8511,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_from_storage_t_uint40":{"entryPoint":8660,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address":{"entryPoint":7093,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7583,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":8083,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":6958,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7061,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7200,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint40":{"entryPoint":7787,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":8026,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$992_to_t_address":{"entryPoint":7523,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IRewardVault_$9329_to_t_address":{"entryPoint":7403,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IScoreRegistry_$9548_to_t_address":{"entryPoint":7463,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":7385,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":7351,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_0t_uint40":{"entryPoint":8677,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_10t_uint40":{"entryPoint":8755,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_15t_uint40":{"entryPoint":8794,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_20t_uint40":{"entryPoint":8833,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_25t_uint40":{"entryPoint":8872,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_5t_uint40":{"entryPoint":8716,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":7341,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8349,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8302,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":9939,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6953,"id":null,"parameterSlots":0,"returnSlots":0},"shift_right_0_unsigned":{"entryPoint":8647,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_120_unsigned":{"entryPoint":8781,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_160_unsigned":{"entryPoint":8820,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_200_unsigned":{"entryPoint":8859,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_40_unsigned":{"entryPoint":8703,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_80_unsigned":{"entryPoint":8742,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":7111,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":8093,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint16":{"entryPoint":6972,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7252,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":8039,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:22180:34","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:34","statements":[{"nodeType":"YulAssignment","src":"57:19:34","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:34","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:34"},"nodeType":"YulFunctionCall","src":"67:9:34"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:34"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:34","type":""}],"src":"7:75:34"},{"body":{"nodeType":"YulBlock","src":"177:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:34"},"nodeType":"YulFunctionCall","src":"187:12:34"},"nodeType":"YulExpressionStatement","src":"187:12:34"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:34"},{"body":{"nodeType":"YulBlock","src":"300:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:34"},"nodeType":"YulFunctionCall","src":"310:12:34"},"nodeType":"YulExpressionStatement","src":"310:12:34"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:34"},{"body":{"nodeType":"YulBlock","src":"378:45:34","statements":[{"nodeType":"YulAssignment","src":"388:29:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"410:6:34","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:34"},"nodeType":"YulFunctionCall","src":"399:18:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:34"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:34","type":""}],"src":"334:89:34"},{"body":{"nodeType":"YulBlock","src":"471:78:34","statements":[{"body":{"nodeType":"YulBlock","src":"527:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"536:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"539:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"529:6:34"},"nodeType":"YulFunctionCall","src":"529:12:34"},"nodeType":"YulExpressionStatement","src":"529:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"494:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"518:5:34"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"501:16:34"},"nodeType":"YulFunctionCall","src":"501:23:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"491:2:34"},"nodeType":"YulFunctionCall","src":"491:34:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"484:6:34"},"nodeType":"YulFunctionCall","src":"484:42:34"},"nodeType":"YulIf","src":"481:62:34"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"464:5:34","type":""}],"src":"429:120:34"},{"body":{"nodeType":"YulBlock","src":"606:86:34","statements":[{"nodeType":"YulAssignment","src":"616:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"638:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"625:12:34"},"nodeType":"YulFunctionCall","src":"625:20:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"616:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"680:5:34"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"654:25:34"},"nodeType":"YulFunctionCall","src":"654:32:34"},"nodeType":"YulExpressionStatement","src":"654:32:34"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"584:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"592:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"600:5:34","type":""}],"src":"555:137:34"},{"body":{"nodeType":"YulBlock","src":"763:262:34","statements":[{"body":{"nodeType":"YulBlock","src":"809:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"811:77:34"},"nodeType":"YulFunctionCall","src":"811:79:34"},"nodeType":"YulExpressionStatement","src":"811:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"784:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"793:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"780:3:34"},"nodeType":"YulFunctionCall","src":"780:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"805:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"776:3:34"},"nodeType":"YulFunctionCall","src":"776:32:34"},"nodeType":"YulIf","src":"773:119:34"},{"nodeType":"YulBlock","src":"902:116:34","statements":[{"nodeType":"YulVariableDeclaration","src":"917:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"931:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"921:6:34","type":""}]},{"nodeType":"YulAssignment","src":"946:62:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"980:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"991:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"976:3:34"},"nodeType":"YulFunctionCall","src":"976:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1000:7:34"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"956:19:34"},"nodeType":"YulFunctionCall","src":"956:52:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"946:6:34"}]}]}]},"name":"abi_decode_tuple_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"733:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"744:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"756:6:34","type":""}],"src":"698:327:34"},{"body":{"nodeType":"YulBlock","src":"1076:81:34","statements":[{"nodeType":"YulAssignment","src":"1086:65:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1101:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"1108:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1097:3:34"},"nodeType":"YulFunctionCall","src":"1097:54:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1086:7:34"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1058:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1068:7:34","type":""}],"src":"1031:126:34"},{"body":{"nodeType":"YulBlock","src":"1208:51:34","statements":[{"nodeType":"YulAssignment","src":"1218:35:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1247:5:34"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1229:17:34"},"nodeType":"YulFunctionCall","src":"1229:24:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1218:7:34"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1190:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1200:7:34","type":""}],"src":"1163:96:34"},{"body":{"nodeType":"YulBlock","src":"1308:79:34","statements":[{"body":{"nodeType":"YulBlock","src":"1365:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1374:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1377:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1367:6:34"},"nodeType":"YulFunctionCall","src":"1367:12:34"},"nodeType":"YulExpressionStatement","src":"1367:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1331:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1356:5:34"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1338:17:34"},"nodeType":"YulFunctionCall","src":"1338:24:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1328:2:34"},"nodeType":"YulFunctionCall","src":"1328:35:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1321:6:34"},"nodeType":"YulFunctionCall","src":"1321:43:34"},"nodeType":"YulIf","src":"1318:63:34"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1301:5:34","type":""}],"src":"1265:122:34"},{"body":{"nodeType":"YulBlock","src":"1445:87:34","statements":[{"nodeType":"YulAssignment","src":"1455:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1477:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1464:12:34"},"nodeType":"YulFunctionCall","src":"1464:20:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1455:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1520:5:34"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1493:26:34"},"nodeType":"YulFunctionCall","src":"1493:33:34"},"nodeType":"YulExpressionStatement","src":"1493:33:34"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1423:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"1431:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1439:5:34","type":""}],"src":"1393:139:34"},{"body":{"nodeType":"YulBlock","src":"1604:263:34","statements":[{"body":{"nodeType":"YulBlock","src":"1650:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1652:77:34"},"nodeType":"YulFunctionCall","src":"1652:79:34"},"nodeType":"YulExpressionStatement","src":"1652:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1625:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1621:3:34"},"nodeType":"YulFunctionCall","src":"1621:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"1646:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1617:3:34"},"nodeType":"YulFunctionCall","src":"1617:32:34"},"nodeType":"YulIf","src":"1614:119:34"},{"nodeType":"YulBlock","src":"1743:117:34","statements":[{"nodeType":"YulVariableDeclaration","src":"1758:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"1772:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1762:6:34","type":""}]},{"nodeType":"YulAssignment","src":"1787:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1822:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"1833:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1818:3:34"},"nodeType":"YulFunctionCall","src":"1818:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1842:7:34"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1797:20:34"},"nodeType":"YulFunctionCall","src":"1797:53:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1787:6:34"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1574:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1585:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1597:6:34","type":""}],"src":"1538:329:34"},{"body":{"nodeType":"YulBlock","src":"1918:32:34","statements":[{"nodeType":"YulAssignment","src":"1928:16:34","value":{"name":"value","nodeType":"YulIdentifier","src":"1939:5:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1928:7:34"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1900:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1910:7:34","type":""}],"src":"1873:77:34"},{"body":{"nodeType":"YulBlock","src":"2021:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2038:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2061:5:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2043:17:34"},"nodeType":"YulFunctionCall","src":"2043:24:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2031:6:34"},"nodeType":"YulFunctionCall","src":"2031:37:34"},"nodeType":"YulExpressionStatement","src":"2031:37:34"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2009:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2016:3:34","type":""}],"src":"1956:118:34"},{"body":{"nodeType":"YulBlock","src":"2178:124:34","statements":[{"nodeType":"YulAssignment","src":"2188:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2200:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2211:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2196:3:34"},"nodeType":"YulFunctionCall","src":"2196:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2188:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2268:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2281:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2292:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2277:3:34"},"nodeType":"YulFunctionCall","src":"2277:17:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2224:43:34"},"nodeType":"YulFunctionCall","src":"2224:71:34"},"nodeType":"YulExpressionStatement","src":"2224:71:34"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2150:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2162:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2173:4:34","type":""}],"src":"2080:222:34"},{"body":{"nodeType":"YulBlock","src":"2351:79:34","statements":[{"body":{"nodeType":"YulBlock","src":"2408:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2417:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2420:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2410:6:34"},"nodeType":"YulFunctionCall","src":"2410:12:34"},"nodeType":"YulExpressionStatement","src":"2410:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2374:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2399:5:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2381:17:34"},"nodeType":"YulFunctionCall","src":"2381:24:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2371:2:34"},"nodeType":"YulFunctionCall","src":"2371:35:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2364:6:34"},"nodeType":"YulFunctionCall","src":"2364:43:34"},"nodeType":"YulIf","src":"2361:63:34"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2344:5:34","type":""}],"src":"2308:122:34"},{"body":{"nodeType":"YulBlock","src":"2488:87:34","statements":[{"nodeType":"YulAssignment","src":"2498:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2520:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2507:12:34"},"nodeType":"YulFunctionCall","src":"2507:20:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2498:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2563:5:34"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2536:26:34"},"nodeType":"YulFunctionCall","src":"2536:33:34"},"nodeType":"YulExpressionStatement","src":"2536:33:34"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2466:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"2474:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2482:5:34","type":""}],"src":"2436:139:34"},{"body":{"nodeType":"YulBlock","src":"2647:263:34","statements":[{"body":{"nodeType":"YulBlock","src":"2693:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2695:77:34"},"nodeType":"YulFunctionCall","src":"2695:79:34"},"nodeType":"YulExpressionStatement","src":"2695:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2668:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"2677:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2664:3:34"},"nodeType":"YulFunctionCall","src":"2664:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"2689:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2660:3:34"},"nodeType":"YulFunctionCall","src":"2660:32:34"},"nodeType":"YulIf","src":"2657:119:34"},{"nodeType":"YulBlock","src":"2786:117:34","statements":[{"nodeType":"YulVariableDeclaration","src":"2801:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"2815:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2805:6:34","type":""}]},{"nodeType":"YulAssignment","src":"2830:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2865:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"2876:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2861:3:34"},"nodeType":"YulFunctionCall","src":"2861:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2885:7:34"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2840:20:34"},"nodeType":"YulFunctionCall","src":"2840:53:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2830:6:34"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2617:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2628:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2640:6:34","type":""}],"src":"2581:329:34"},{"body":{"nodeType":"YulBlock","src":"2948:28:34","statements":[{"nodeType":"YulAssignment","src":"2958:12:34","value":{"name":"value","nodeType":"YulIdentifier","src":"2965:5:34"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2958:3:34"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2934:5:34","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2944:3:34","type":""}],"src":"2916:60:34"},{"body":{"nodeType":"YulBlock","src":"3042:82:34","statements":[{"nodeType":"YulAssignment","src":"3052:66:34","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3110:5:34"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3092:17:34"},"nodeType":"YulFunctionCall","src":"3092:24:34"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3083:8:34"},"nodeType":"YulFunctionCall","src":"3083:34:34"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3065:17:34"},"nodeType":"YulFunctionCall","src":"3065:53:34"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3052:9:34"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3022:5:34","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3032:9:34","type":""}],"src":"2982:142:34"},{"body":{"nodeType":"YulBlock","src":"3190:66:34","statements":[{"nodeType":"YulAssignment","src":"3200:50:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3244:5:34"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"3213:30:34"},"nodeType":"YulFunctionCall","src":"3213:37:34"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3200:9:34"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3170:5:34","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3180:9:34","type":""}],"src":"3130:126:34"},{"body":{"nodeType":"YulBlock","src":"3343:66:34","statements":[{"nodeType":"YulAssignment","src":"3353:50:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3397:5:34"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"3366:30:34"},"nodeType":"YulFunctionCall","src":"3366:37:34"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3353:9:34"}]}]},"name":"convert_t_contract$_IRewardVault_$9329_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3323:5:34","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3333:9:34","type":""}],"src":"3262:147:34"},{"body":{"nodeType":"YulBlock","src":"3501:87:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3518:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3575:5:34"}],"functionName":{"name":"convert_t_contract$_IRewardVault_$9329_to_t_address","nodeType":"YulIdentifier","src":"3523:51:34"},"nodeType":"YulFunctionCall","src":"3523:58:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3511:6:34"},"nodeType":"YulFunctionCall","src":"3511:71:34"},"nodeType":"YulExpressionStatement","src":"3511:71:34"}]},"name":"abi_encode_t_contract$_IRewardVault_$9329_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3489:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3496:3:34","type":""}],"src":"3415:173:34"},{"body":{"nodeType":"YulBlock","src":"3713:145:34","statements":[{"nodeType":"YulAssignment","src":"3723:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3735:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"3746:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3731:3:34"},"nodeType":"YulFunctionCall","src":"3731:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3723:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3824:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3837:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"3848:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3833:3:34"},"nodeType":"YulFunctionCall","src":"3833:17:34"}],"functionName":{"name":"abi_encode_t_contract$_IRewardVault_$9329_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3759:64:34"},"nodeType":"YulFunctionCall","src":"3759:92:34"},"nodeType":"YulExpressionStatement","src":"3759:92:34"}]},"name":"abi_encode_tuple_t_contract$_IRewardVault_$9329__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3685:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3697:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3708:4:34","type":""}],"src":"3594:264:34"},{"body":{"nodeType":"YulBlock","src":"3947:66:34","statements":[{"nodeType":"YulAssignment","src":"3957:50:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4001:5:34"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"3970:30:34"},"nodeType":"YulFunctionCall","src":"3970:37:34"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3957:9:34"}]}]},"name":"convert_t_contract$_IScoreRegistry_$9548_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3927:5:34","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3937:9:34","type":""}],"src":"3864:149:34"},{"body":{"nodeType":"YulBlock","src":"4107:89:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4124:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4183:5:34"}],"functionName":{"name":"convert_t_contract$_IScoreRegistry_$9548_to_t_address","nodeType":"YulIdentifier","src":"4129:53:34"},"nodeType":"YulFunctionCall","src":"4129:60:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4117:6:34"},"nodeType":"YulFunctionCall","src":"4117:73:34"},"nodeType":"YulExpressionStatement","src":"4117:73:34"}]},"name":"abi_encode_t_contract$_IScoreRegistry_$9548_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4095:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4102:3:34","type":""}],"src":"4019:177:34"},{"body":{"nodeType":"YulBlock","src":"4323:147:34","statements":[{"nodeType":"YulAssignment","src":"4333:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4345:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"4356:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4341:3:34"},"nodeType":"YulFunctionCall","src":"4341:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4333:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4436:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4449:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"4460:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4445:3:34"},"nodeType":"YulFunctionCall","src":"4445:17:34"}],"functionName":{"name":"abi_encode_t_contract$_IScoreRegistry_$9548_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4369:66:34"},"nodeType":"YulFunctionCall","src":"4369:94:34"},"nodeType":"YulExpressionStatement","src":"4369:94:34"}]},"name":"abi_encode_tuple_t_contract$_IScoreRegistry_$9548__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4295:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4307:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4318:4:34","type":""}],"src":"4202:268:34"},{"body":{"nodeType":"YulBlock","src":"4550:66:34","statements":[{"nodeType":"YulAssignment","src":"4560:50:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4604:5:34"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"4573:30:34"},"nodeType":"YulFunctionCall","src":"4573:37:34"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4560:9:34"}]}]},"name":"convert_t_contract$_IERC20_$992_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4530:5:34","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4540:9:34","type":""}],"src":"4476:140:34"},{"body":{"nodeType":"YulBlock","src":"4701:80:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4718:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4768:5:34"}],"functionName":{"name":"convert_t_contract$_IERC20_$992_to_t_address","nodeType":"YulIdentifier","src":"4723:44:34"},"nodeType":"YulFunctionCall","src":"4723:51:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4711:6:34"},"nodeType":"YulFunctionCall","src":"4711:64:34"},"nodeType":"YulExpressionStatement","src":"4711:64:34"}]},"name":"abi_encode_t_contract$_IERC20_$992_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4689:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4696:3:34","type":""}],"src":"4622:159:34"},{"body":{"nodeType":"YulBlock","src":"4899:138:34","statements":[{"nodeType":"YulAssignment","src":"4909:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4921:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"4932:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4917:3:34"},"nodeType":"YulFunctionCall","src":"4917:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4909:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5003:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5016:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"5027:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5012:3:34"},"nodeType":"YulFunctionCall","src":"5012:17:34"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$992_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4945:57:34"},"nodeType":"YulFunctionCall","src":"4945:85:34"},"nodeType":"YulExpressionStatement","src":"4945:85:34"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$992__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4871:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4883:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4894:4:34","type":""}],"src":"4787:250:34"},{"body":{"nodeType":"YulBlock","src":"5085:48:34","statements":[{"nodeType":"YulAssignment","src":"5095:32:34","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5120:5:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5113:6:34"},"nodeType":"YulFunctionCall","src":"5113:13:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5106:6:34"},"nodeType":"YulFunctionCall","src":"5106:21:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5095:7:34"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5067:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5077:7:34","type":""}],"src":"5043:90:34"},{"body":{"nodeType":"YulBlock","src":"5198:50:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5215:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5235:5:34"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5220:14:34"},"nodeType":"YulFunctionCall","src":"5220:21:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5208:6:34"},"nodeType":"YulFunctionCall","src":"5208:34:34"},"nodeType":"YulExpressionStatement","src":"5208:34:34"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5186:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5193:3:34","type":""}],"src":"5139:109:34"},{"body":{"nodeType":"YulBlock","src":"5346:118:34","statements":[{"nodeType":"YulAssignment","src":"5356:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5368:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"5379:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5364:3:34"},"nodeType":"YulFunctionCall","src":"5364:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5356:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5430:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5443:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"5454:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5439:3:34"},"nodeType":"YulFunctionCall","src":"5439:17:34"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"5392:37:34"},"nodeType":"YulFunctionCall","src":"5392:65:34"},"nodeType":"YulExpressionStatement","src":"5392:65:34"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5318:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5330:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5341:4:34","type":""}],"src":"5254:210:34"},{"body":{"nodeType":"YulBlock","src":"5535:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5552:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5575:5:34"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5557:17:34"},"nodeType":"YulFunctionCall","src":"5557:24:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5545:6:34"},"nodeType":"YulFunctionCall","src":"5545:37:34"},"nodeType":"YulExpressionStatement","src":"5545:37:34"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5523:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5530:3:34","type":""}],"src":"5470:118:34"},{"body":{"nodeType":"YulBlock","src":"5692:124:34","statements":[{"nodeType":"YulAssignment","src":"5702:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5714:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"5725:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5710:3:34"},"nodeType":"YulFunctionCall","src":"5710:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5702:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5782:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5795:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"5806:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5791:3:34"},"nodeType":"YulFunctionCall","src":"5791:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5738:43:34"},"nodeType":"YulFunctionCall","src":"5738:71:34"},"nodeType":"YulExpressionStatement","src":"5738:71:34"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5664:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5676:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5687:4:34","type":""}],"src":"5594:222:34"},{"body":{"nodeType":"YulBlock","src":"5905:391:34","statements":[{"body":{"nodeType":"YulBlock","src":"5951:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5953:77:34"},"nodeType":"YulFunctionCall","src":"5953:79:34"},"nodeType":"YulExpressionStatement","src":"5953:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5926:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"5935:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5922:3:34"},"nodeType":"YulFunctionCall","src":"5922:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"5947:2:34","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5918:3:34"},"nodeType":"YulFunctionCall","src":"5918:32:34"},"nodeType":"YulIf","src":"5915:119:34"},{"nodeType":"YulBlock","src":"6044:117:34","statements":[{"nodeType":"YulVariableDeclaration","src":"6059:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"6073:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6063:6:34","type":""}]},{"nodeType":"YulAssignment","src":"6088:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6123:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"6134:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6119:3:34"},"nodeType":"YulFunctionCall","src":"6119:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6143:7:34"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6098:20:34"},"nodeType":"YulFunctionCall","src":"6098:53:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6088:6:34"}]}]},{"nodeType":"YulBlock","src":"6171:118:34","statements":[{"nodeType":"YulVariableDeclaration","src":"6186:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"6200:2:34","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6190:6:34","type":""}]},{"nodeType":"YulAssignment","src":"6216:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6251:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"6262:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6247:3:34"},"nodeType":"YulFunctionCall","src":"6247:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6271:7:34"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6226:20:34"},"nodeType":"YulFunctionCall","src":"6226:53:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6216:6:34"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5867:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5878:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5890:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5898:6:34","type":""}],"src":"5822:474:34"},{"body":{"nodeType":"YulBlock","src":"6375:40:34","statements":[{"nodeType":"YulAssignment","src":"6386:22:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6402:5:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6396:5:34"},"nodeType":"YulFunctionCall","src":"6396:12:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6386:6:34"}]}]},"name":"array_length_t_array$_t_uint40_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6358:5:34","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6368:6:34","type":""}],"src":"6302:113:34"},{"body":{"nodeType":"YulBlock","src":"6531:73:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6548:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"6553:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6541:6:34"},"nodeType":"YulFunctionCall","src":"6541:19:34"},"nodeType":"YulExpressionStatement","src":"6541:19:34"},{"nodeType":"YulAssignment","src":"6569:29:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6588:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"6593:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6584:3:34"},"nodeType":"YulFunctionCall","src":"6584:14:34"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6569:11:34"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint40_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6503:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"6508:6:34","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6519:11:34","type":""}],"src":"6421:183:34"},{"body":{"nodeType":"YulBlock","src":"6681:60:34","statements":[{"nodeType":"YulAssignment","src":"6691:11:34","value":{"name":"ptr","nodeType":"YulIdentifier","src":"6699:3:34"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6691:4:34"}]},{"nodeType":"YulAssignment","src":"6712:22:34","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"6724:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"6729:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6720:3:34"},"nodeType":"YulFunctionCall","src":"6720:14:34"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6712:4:34"}]}]},"name":"array_dataslot_t_array$_t_uint40_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"6668:3:34","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"6676:4:34","type":""}],"src":"6610:131:34"},{"body":{"nodeType":"YulBlock","src":"6791:51:34","statements":[{"nodeType":"YulAssignment","src":"6801:35:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6816:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"6823:12:34","type":"","value":"0xffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6812:3:34"},"nodeType":"YulFunctionCall","src":"6812:24:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6801:7:34"}]}]},"name":"cleanup_t_uint40","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6773:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6783:7:34","type":""}],"src":"6747:95:34"},{"body":{"nodeType":"YulBlock","src":"6901:52:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6918:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6940:5:34"}],"functionName":{"name":"cleanup_t_uint40","nodeType":"YulIdentifier","src":"6923:16:34"},"nodeType":"YulFunctionCall","src":"6923:23:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6911:6:34"},"nodeType":"YulFunctionCall","src":"6911:36:34"},"nodeType":"YulExpressionStatement","src":"6911:36:34"}]},"name":"abi_encode_t_uint40_to_t_uint40","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6889:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6896:3:34","type":""}],"src":"6848:105:34"},{"body":{"nodeType":"YulBlock","src":"7037:97:34","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7079:6:34"},{"name":"pos","nodeType":"YulIdentifier","src":"7087:3:34"}],"functionName":{"name":"abi_encode_t_uint40_to_t_uint40","nodeType":"YulIdentifier","src":"7047:31:34"},"nodeType":"YulFunctionCall","src":"7047:44:34"},"nodeType":"YulExpressionStatement","src":"7047:44:34"},{"nodeType":"YulAssignment","src":"7100:28:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7118:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"7123:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7114:3:34"},"nodeType":"YulFunctionCall","src":"7114:14:34"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"7100:10:34"}]}]},"name":"abi_encodeUpdatedPos_t_uint40_to_t_uint40","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"7010:6:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7018:3:34","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"7026:10:34","type":""}],"src":"6959:175:34"},{"body":{"nodeType":"YulBlock","src":"7214:38:34","statements":[{"nodeType":"YulAssignment","src":"7224:22:34","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7236:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"7241:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7232:3:34"},"nodeType":"YulFunctionCall","src":"7232:14:34"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"7224:4:34"}]}]},"name":"array_nextElement_t_array$_t_uint40_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7201:3:34","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"7209:4:34","type":""}],"src":"7140:112:34"},{"body":{"nodeType":"YulBlock","src":"7408:602:34","statements":[{"nodeType":"YulVariableDeclaration","src":"7418:67:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7479:5:34"}],"functionName":{"name":"array_length_t_array$_t_uint40_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7432:46:34"},"nodeType":"YulFunctionCall","src":"7432:53:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7422:6:34","type":""}]},{"nodeType":"YulAssignment","src":"7494:92:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7574:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"7579:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint40_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7501:72:34"},"nodeType":"YulFunctionCall","src":"7501:85:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7494:3:34"}]},{"nodeType":"YulVariableDeclaration","src":"7595:70:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7659:5:34"}],"functionName":{"name":"array_dataslot_t_array$_t_uint40_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7610:48:34"},"nodeType":"YulFunctionCall","src":"7610:55:34"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"7599:7:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7674:21:34","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"7688:7:34"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"7678:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"7764:221:34","statements":[{"nodeType":"YulVariableDeclaration","src":"7778:34:34","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7805:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7799:5:34"},"nodeType":"YulFunctionCall","src":"7799:13:34"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"7782:13:34","type":""}]},{"nodeType":"YulAssignment","src":"7825:68:34","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"7874:13:34"},{"name":"pos","nodeType":"YulIdentifier","src":"7889:3:34"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint40_to_t_uint40","nodeType":"YulIdentifier","src":"7832:41:34"},"nodeType":"YulFunctionCall","src":"7832:61:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7825:3:34"}]},{"nodeType":"YulAssignment","src":"7906:69:34","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7968:6:34"}],"functionName":{"name":"array_nextElement_t_array$_t_uint40_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7916:51:34"},"nodeType":"YulFunctionCall","src":"7916:59:34"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7906:6:34"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7726:1:34"},{"name":"length","nodeType":"YulIdentifier","src":"7729:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7723:2:34"},"nodeType":"YulFunctionCall","src":"7723:13:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7737:18:34","statements":[{"nodeType":"YulAssignment","src":"7739:14:34","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7748:1:34"},{"kind":"number","nodeType":"YulLiteral","src":"7751:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7744:3:34"},"nodeType":"YulFunctionCall","src":"7744:9:34"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7739:1:34"}]}]},"pre":{"nodeType":"YulBlock","src":"7708:14:34","statements":[{"nodeType":"YulVariableDeclaration","src":"7710:10:34","value":{"kind":"number","nodeType":"YulLiteral","src":"7719:1:34","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7714:1:34","type":""}]}]},"src":"7704:281:34"},{"nodeType":"YulAssignment","src":"7994:10:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"8001:3:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7994:3:34"}]}]},"name":"abi_encode_t_array$_t_uint40_$dyn_memory_ptr_to_t_array$_t_uint40_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7387:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7394:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7403:3:34","type":""}],"src":"7286:724:34"},{"body":{"nodeType":"YulBlock","src":"8162:223:34","statements":[{"nodeType":"YulAssignment","src":"8172:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8184:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"8195:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8180:3:34"},"nodeType":"YulFunctionCall","src":"8180:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8172:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8219:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"8230:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8215:3:34"},"nodeType":"YulFunctionCall","src":"8215:17:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8238:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"8244:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8234:3:34"},"nodeType":"YulFunctionCall","src":"8234:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8208:6:34"},"nodeType":"YulFunctionCall","src":"8208:47:34"},"nodeType":"YulExpressionStatement","src":"8208:47:34"},{"nodeType":"YulAssignment","src":"8264:114:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8364:6:34"},{"name":"tail","nodeType":"YulIdentifier","src":"8373:4:34"}],"functionName":{"name":"abi_encode_t_array$_t_uint40_$dyn_memory_ptr_to_t_array$_t_uint40_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8272:91:34"},"nodeType":"YulFunctionCall","src":"8272:106:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8264:4:34"}]}]},"name":"abi_encode_tuple_t_array$_t_uint40_$dyn_memory_ptr__to_t_array$_t_uint40_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8134:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8146:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8157:4:34","type":""}],"src":"8016:369:34"},{"body":{"nodeType":"YulBlock","src":"8454:52:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8471:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8493:5:34"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"8476:16:34"},"nodeType":"YulFunctionCall","src":"8476:23:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8464:6:34"},"nodeType":"YulFunctionCall","src":"8464:36:34"},"nodeType":"YulExpressionStatement","src":"8464:36:34"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8442:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8449:3:34","type":""}],"src":"8391:115:34"},{"body":{"nodeType":"YulBlock","src":"8608:122:34","statements":[{"nodeType":"YulAssignment","src":"8618:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8630:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"8641:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8626:3:34"},"nodeType":"YulFunctionCall","src":"8626:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8618:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8696:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8709:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"8720:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8705:3:34"},"nodeType":"YulFunctionCall","src":"8705:17:34"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"8654:41:34"},"nodeType":"YulFunctionCall","src":"8654:69:34"},"nodeType":"YulExpressionStatement","src":"8654:69:34"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8580:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8592:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8603:4:34","type":""}],"src":"8512:218:34"},{"body":{"nodeType":"YulBlock","src":"8779:43:34","statements":[{"nodeType":"YulAssignment","src":"8789:27:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8804:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"8811:4:34","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8800:3:34"},"nodeType":"YulFunctionCall","src":"8800:16:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8789:7:34"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8761:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8771:7:34","type":""}],"src":"8736:86:34"},{"body":{"nodeType":"YulBlock","src":"8869:77:34","statements":[{"body":{"nodeType":"YulBlock","src":"8924:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8933:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8936:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8926:6:34"},"nodeType":"YulFunctionCall","src":"8926:12:34"},"nodeType":"YulExpressionStatement","src":"8926:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8892:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8915:5:34"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"8899:15:34"},"nodeType":"YulFunctionCall","src":"8899:22:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8889:2:34"},"nodeType":"YulFunctionCall","src":"8889:33:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8882:6:34"},"nodeType":"YulFunctionCall","src":"8882:41:34"},"nodeType":"YulIf","src":"8879:61:34"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8862:5:34","type":""}],"src":"8828:118:34"},{"body":{"nodeType":"YulBlock","src":"9002:85:34","statements":[{"nodeType":"YulAssignment","src":"9012:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9034:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9021:12:34"},"nodeType":"YulFunctionCall","src":"9021:20:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9012:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9075:5:34"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"9050:24:34"},"nodeType":"YulFunctionCall","src":"9050:31:34"},"nodeType":"YulExpressionStatement","src":"9050:31:34"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8980:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"8988:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8996:5:34","type":""}],"src":"8952:135:34"},{"body":{"nodeType":"YulBlock","src":"9138:32:34","statements":[{"nodeType":"YulAssignment","src":"9148:16:34","value":{"name":"value","nodeType":"YulIdentifier","src":"9159:5:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9148:7:34"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9120:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9130:7:34","type":""}],"src":"9093:77:34"},{"body":{"nodeType":"YulBlock","src":"9219:79:34","statements":[{"body":{"nodeType":"YulBlock","src":"9276:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9285:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9288:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9278:6:34"},"nodeType":"YulFunctionCall","src":"9278:12:34"},"nodeType":"YulExpressionStatement","src":"9278:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9242:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9267:5:34"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"9249:17:34"},"nodeType":"YulFunctionCall","src":"9249:24:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9239:2:34"},"nodeType":"YulFunctionCall","src":"9239:35:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9232:6:34"},"nodeType":"YulFunctionCall","src":"9232:43:34"},"nodeType":"YulIf","src":"9229:63:34"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9212:5:34","type":""}],"src":"9176:122:34"},{"body":{"nodeType":"YulBlock","src":"9356:87:34","statements":[{"nodeType":"YulAssignment","src":"9366:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9388:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9375:12:34"},"nodeType":"YulFunctionCall","src":"9375:20:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9366:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9431:5:34"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"9404:26:34"},"nodeType":"YulFunctionCall","src":"9404:33:34"},"nodeType":"YulExpressionStatement","src":"9404:33:34"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9334:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"9342:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9350:5:34","type":""}],"src":"9304:139:34"},{"body":{"nodeType":"YulBlock","src":"9581:775:34","statements":[{"body":{"nodeType":"YulBlock","src":"9628:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9630:77:34"},"nodeType":"YulFunctionCall","src":"9630:79:34"},"nodeType":"YulExpressionStatement","src":"9630:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9602:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"9611:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9598:3:34"},"nodeType":"YulFunctionCall","src":"9598:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"9623:3:34","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9594:3:34"},"nodeType":"YulFunctionCall","src":"9594:33:34"},"nodeType":"YulIf","src":"9591:120:34"},{"nodeType":"YulBlock","src":"9721:117:34","statements":[{"nodeType":"YulVariableDeclaration","src":"9736:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"9750:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9740:6:34","type":""}]},{"nodeType":"YulAssignment","src":"9765:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9800:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"9811:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9796:3:34"},"nodeType":"YulFunctionCall","src":"9796:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9820:7:34"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9775:20:34"},"nodeType":"YulFunctionCall","src":"9775:53:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9765:6:34"}]}]},{"nodeType":"YulBlock","src":"9848:118:34","statements":[{"nodeType":"YulVariableDeclaration","src":"9863:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"9877:2:34","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9867:6:34","type":""}]},{"nodeType":"YulAssignment","src":"9893:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9928:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"9939:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9924:3:34"},"nodeType":"YulFunctionCall","src":"9924:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9948:7:34"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9903:20:34"},"nodeType":"YulFunctionCall","src":"9903:53:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9893:6:34"}]}]},{"nodeType":"YulBlock","src":"9976:116:34","statements":[{"nodeType":"YulVariableDeclaration","src":"9991:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"10005:2:34","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9995:6:34","type":""}]},{"nodeType":"YulAssignment","src":"10021:61:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10054:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"10065:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10050:3:34"},"nodeType":"YulFunctionCall","src":"10050:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10074:7:34"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"10031:18:34"},"nodeType":"YulFunctionCall","src":"10031:51:34"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10021:6:34"}]}]},{"nodeType":"YulBlock","src":"10102:118:34","statements":[{"nodeType":"YulVariableDeclaration","src":"10117:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"10131:2:34","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10121:6:34","type":""}]},{"nodeType":"YulAssignment","src":"10147:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10182:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"10193:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10178:3:34"},"nodeType":"YulFunctionCall","src":"10178:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10202:7:34"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"10157:20:34"},"nodeType":"YulFunctionCall","src":"10157:53:34"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10147:6:34"}]}]},{"nodeType":"YulBlock","src":"10230:119:34","statements":[{"nodeType":"YulVariableDeclaration","src":"10245:17:34","value":{"kind":"number","nodeType":"YulLiteral","src":"10259:3:34","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10249:6:34","type":""}]},{"nodeType":"YulAssignment","src":"10276:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10311:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"10322:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10307:3:34"},"nodeType":"YulFunctionCall","src":"10307:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10331:7:34"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"10286:20:34"},"nodeType":"YulFunctionCall","src":"10286:53:34"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10276:6:34"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9519:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9530:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9542:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9550:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9558:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9566:6:34","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9574:6:34","type":""}],"src":"9449:907:34"},{"body":{"nodeType":"YulBlock","src":"10425:52:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10442:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10464:5:34"}],"functionName":{"name":"cleanup_t_uint40","nodeType":"YulIdentifier","src":"10447:16:34"},"nodeType":"YulFunctionCall","src":"10447:23:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10435:6:34"},"nodeType":"YulFunctionCall","src":"10435:36:34"},"nodeType":"YulExpressionStatement","src":"10435:36:34"}]},"name":"abi_encode_t_uint40_to_t_uint40_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10413:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10420:3:34","type":""}],"src":"10362:115:34"},{"body":{"nodeType":"YulBlock","src":"10579:122:34","statements":[{"nodeType":"YulAssignment","src":"10589:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10601:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"10612:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10597:3:34"},"nodeType":"YulFunctionCall","src":"10597:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10589:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10667:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10680:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"10691:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10676:3:34"},"nodeType":"YulFunctionCall","src":"10676:17:34"}],"functionName":{"name":"abi_encode_t_uint40_to_t_uint40_fromStack","nodeType":"YulIdentifier","src":"10625:41:34"},"nodeType":"YulFunctionCall","src":"10625:69:34"},"nodeType":"YulExpressionStatement","src":"10625:69:34"}]},"name":"abi_encode_tuple_t_uint40__to_t_uint40__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10551:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10563:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10574:4:34","type":""}],"src":"10483:218:34"},{"body":{"nodeType":"YulBlock","src":"10735:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10752:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10755:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10745:6:34"},"nodeType":"YulFunctionCall","src":"10745:88:34"},"nodeType":"YulExpressionStatement","src":"10745:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10849:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10852:4:34","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10842:6:34"},"nodeType":"YulFunctionCall","src":"10842:15:34"},"nodeType":"YulExpressionStatement","src":"10842:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10873:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10876:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10866:6:34"},"nodeType":"YulFunctionCall","src":"10866:15:34"},"nodeType":"YulExpressionStatement","src":"10866:15:34"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"10707:180:34"},{"body":{"nodeType":"YulBlock","src":"10921:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10938:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10941:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10931:6:34"},"nodeType":"YulFunctionCall","src":"10931:88:34"},"nodeType":"YulExpressionStatement","src":"10931:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11035:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11038:4:34","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11028:6:34"},"nodeType":"YulFunctionCall","src":"11028:15:34"},"nodeType":"YulExpressionStatement","src":"11028:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11059:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11062:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11052:6:34"},"nodeType":"YulFunctionCall","src":"11052:15:34"},"nodeType":"YulExpressionStatement","src":"11052:15:34"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10893:180:34"},{"body":{"nodeType":"YulBlock","src":"11121:143:34","statements":[{"nodeType":"YulAssignment","src":"11131:25:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11154:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11136:17:34"},"nodeType":"YulFunctionCall","src":"11136:20:34"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11131:1:34"}]},{"nodeType":"YulAssignment","src":"11165:25:34","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11188:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11170:17:34"},"nodeType":"YulFunctionCall","src":"11170:20:34"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11165:1:34"}]},{"body":{"nodeType":"YulBlock","src":"11212:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"11214:16:34"},"nodeType":"YulFunctionCall","src":"11214:18:34"},"nodeType":"YulExpressionStatement","src":"11214:18:34"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11209:1:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11202:6:34"},"nodeType":"YulFunctionCall","src":"11202:9:34"},"nodeType":"YulIf","src":"11199:35:34"},{"nodeType":"YulAssignment","src":"11244:14:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11253:1:34"},{"name":"y","nodeType":"YulIdentifier","src":"11256:1:34"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11249:3:34"},"nodeType":"YulFunctionCall","src":"11249:9:34"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"11244:1:34"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11110:1:34","type":""},{"name":"y","nodeType":"YulTypedName","src":"11113:1:34","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"11119:1:34","type":""}],"src":"11079:185:34"},{"body":{"nodeType":"YulBlock","src":"11318:362:34","statements":[{"nodeType":"YulAssignment","src":"11328:25:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11351:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11333:17:34"},"nodeType":"YulFunctionCall","src":"11333:20:34"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11328:1:34"}]},{"nodeType":"YulAssignment","src":"11362:25:34","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11385:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11367:17:34"},"nodeType":"YulFunctionCall","src":"11367:20:34"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11362:1:34"}]},{"nodeType":"YulVariableDeclaration","src":"11396:28:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11419:1:34"},{"name":"y","nodeType":"YulIdentifier","src":"11422:1:34"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11415:3:34"},"nodeType":"YulFunctionCall","src":"11415:9:34"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"11400:11:34","type":""}]},{"nodeType":"YulAssignment","src":"11433:41:34","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"11462:11:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11444:17:34"},"nodeType":"YulFunctionCall","src":"11444:30:34"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"11433:7:34"}]},{"body":{"nodeType":"YulBlock","src":"11651:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11653:16:34"},"nodeType":"YulFunctionCall","src":"11653:18:34"},"nodeType":"YulExpressionStatement","src":"11653:18:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11584:1:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11577:6:34"},"nodeType":"YulFunctionCall","src":"11577:9:34"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11607:1:34"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"11614:7:34"},{"name":"x","nodeType":"YulIdentifier","src":"11623:1:34"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11610:3:34"},"nodeType":"YulFunctionCall","src":"11610:15:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11604:2:34"},"nodeType":"YulFunctionCall","src":"11604:22:34"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11557:2:34"},"nodeType":"YulFunctionCall","src":"11557:83:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11537:6:34"},"nodeType":"YulFunctionCall","src":"11537:113:34"},"nodeType":"YulIf","src":"11534:139:34"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11301:1:34","type":""},{"name":"y","nodeType":"YulTypedName","src":"11304:1:34","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"11310:7:34","type":""}],"src":"11270:410:34"},{"body":{"nodeType":"YulBlock","src":"11731:149:34","statements":[{"nodeType":"YulAssignment","src":"11741:25:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11764:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11746:17:34"},"nodeType":"YulFunctionCall","src":"11746:20:34"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11741:1:34"}]},{"nodeType":"YulAssignment","src":"11775:25:34","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11798:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11780:17:34"},"nodeType":"YulFunctionCall","src":"11780:20:34"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11775:1:34"}]},{"nodeType":"YulAssignment","src":"11809:17:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11821:1:34"},{"name":"y","nodeType":"YulIdentifier","src":"11824:1:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11817:3:34"},"nodeType":"YulFunctionCall","src":"11817:9:34"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"11809:4:34"}]},{"body":{"nodeType":"YulBlock","src":"11851:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11853:16:34"},"nodeType":"YulFunctionCall","src":"11853:18:34"},"nodeType":"YulExpressionStatement","src":"11853:18:34"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"11842:4:34"},{"name":"x","nodeType":"YulIdentifier","src":"11848:1:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11839:2:34"},"nodeType":"YulFunctionCall","src":"11839:11:34"},"nodeType":"YulIf","src":"11836:37:34"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11717:1:34","type":""},{"name":"y","nodeType":"YulTypedName","src":"11720:1:34","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"11726:4:34","type":""}],"src":"11686:194:34"},{"body":{"nodeType":"YulBlock","src":"11930:147:34","statements":[{"nodeType":"YulAssignment","src":"11940:25:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11963:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11945:17:34"},"nodeType":"YulFunctionCall","src":"11945:20:34"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11940:1:34"}]},{"nodeType":"YulAssignment","src":"11974:25:34","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11997:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11979:17:34"},"nodeType":"YulFunctionCall","src":"11979:20:34"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11974:1:34"}]},{"nodeType":"YulAssignment","src":"12008:16:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12019:1:34"},{"name":"y","nodeType":"YulIdentifier","src":"12022:1:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12015:3:34"},"nodeType":"YulFunctionCall","src":"12015:9:34"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"12008:3:34"}]},{"body":{"nodeType":"YulBlock","src":"12048:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12050:16:34"},"nodeType":"YulFunctionCall","src":"12050:18:34"},"nodeType":"YulExpressionStatement","src":"12050:18:34"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12040:1:34"},{"name":"sum","nodeType":"YulIdentifier","src":"12043:3:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12037:2:34"},"nodeType":"YulFunctionCall","src":"12037:10:34"},"nodeType":"YulIf","src":"12034:36:34"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11917:1:34","type":""},{"name":"y","nodeType":"YulTypedName","src":"11920:1:34","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"11926:3:34","type":""}],"src":"11886:191:34"},{"body":{"nodeType":"YulBlock","src":"12153:40:34","statements":[{"nodeType":"YulAssignment","src":"12164:22:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12180:5:34"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"12174:5:34"},"nodeType":"YulFunctionCall","src":"12174:12:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12164:6:34"}]}]},"name":"array_length_t_array$_t_uint40_$dyn_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12136:5:34","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12146:6:34","type":""}],"src":"12083:110:34"},{"body":{"nodeType":"YulBlock","src":"12267:87:34","statements":[{"nodeType":"YulAssignment","src":"12277:11:34","value":{"name":"ptr","nodeType":"YulIdentifier","src":"12285:3:34"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12277:4:34"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12305:1:34","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"12308:3:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12298:6:34"},"nodeType":"YulFunctionCall","src":"12298:14:34"},"nodeType":"YulExpressionStatement","src":"12298:14:34"},{"nodeType":"YulAssignment","src":"12321:26:34","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12339:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12342:4:34","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"12329:9:34"},"nodeType":"YulFunctionCall","src":"12329:18:34"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12321:4:34"}]}]},"name":"array_dataslot_t_array$_t_uint40_$dyn_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12254:3:34","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"12262:4:34","type":""}],"src":"12199:155:34"},{"body":{"nodeType":"YulBlock","src":"12411:51:34","statements":[{"nodeType":"YulAssignment","src":"12421:34:34","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12446:1:34","type":"","value":"0"},{"name":"value","nodeType":"YulIdentifier","src":"12449:5:34"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"12442:3:34"},"nodeType":"YulFunctionCall","src":"12442:13:34"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"12421:8:34"}]}]},"name":"shift_right_0_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12392:5:34","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"12402:8:34","type":""}],"src":"12360:102:34"},{"body":{"nodeType":"YulBlock","src":"12525:51:34","statements":[{"nodeType":"YulAssignment","src":"12535:35:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12550:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"12557:12:34","type":"","value":"0xffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12546:3:34"},"nodeType":"YulFunctionCall","src":"12546:24:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12535:7:34"}]}]},"name":"cleanup_from_storage_t_uint40","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12507:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12517:7:34","type":""}],"src":"12468:108:34"},{"body":{"nodeType":"YulBlock","src":"12656:90:34","statements":[{"nodeType":"YulAssignment","src":"12666:74:34","value":{"arguments":[{"arguments":[{"name":"slot_value","nodeType":"YulIdentifier","src":"12728:10:34"}],"functionName":{"name":"shift_right_0_unsigned","nodeType":"YulIdentifier","src":"12705:22:34"},"nodeType":"YulFunctionCall","src":"12705:34:34"}],"functionName":{"name":"cleanup_from_storage_t_uint40","nodeType":"YulIdentifier","src":"12675:29:34"},"nodeType":"YulFunctionCall","src":"12675:65:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12666:5:34"}]}]},"name":"extract_from_storage_value_offset_0t_uint40","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nodeType":"YulTypedName","src":"12635:10:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12650:5:34","type":""}],"src":"12582:164:34"},{"body":{"nodeType":"YulBlock","src":"12804:52:34","statements":[{"nodeType":"YulAssignment","src":"12814:35:34","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12839:2:34","type":"","value":"40"},{"name":"value","nodeType":"YulIdentifier","src":"12843:5:34"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"12835:3:34"},"nodeType":"YulFunctionCall","src":"12835:14:34"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"12814:8:34"}]}]},"name":"shift_right_40_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12785:5:34","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"12795:8:34","type":""}],"src":"12752:104:34"},{"body":{"nodeType":"YulBlock","src":"12936:91:34","statements":[{"nodeType":"YulAssignment","src":"12946:75:34","value":{"arguments":[{"arguments":[{"name":"slot_value","nodeType":"YulIdentifier","src":"13009:10:34"}],"functionName":{"name":"shift_right_40_unsigned","nodeType":"YulIdentifier","src":"12985:23:34"},"nodeType":"YulFunctionCall","src":"12985:35:34"}],"functionName":{"name":"cleanup_from_storage_t_uint40","nodeType":"YulIdentifier","src":"12955:29:34"},"nodeType":"YulFunctionCall","src":"12955:66:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12946:5:34"}]}]},"name":"extract_from_storage_value_offset_5t_uint40","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nodeType":"YulTypedName","src":"12915:10:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12930:5:34","type":""}],"src":"12862:165:34"},{"body":{"nodeType":"YulBlock","src":"13085:52:34","statements":[{"nodeType":"YulAssignment","src":"13095:35:34","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13120:2:34","type":"","value":"80"},{"name":"value","nodeType":"YulIdentifier","src":"13124:5:34"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13116:3:34"},"nodeType":"YulFunctionCall","src":"13116:14:34"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"13095:8:34"}]}]},"name":"shift_right_80_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13066:5:34","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"13076:8:34","type":""}],"src":"13033:104:34"},{"body":{"nodeType":"YulBlock","src":"13218:91:34","statements":[{"nodeType":"YulAssignment","src":"13228:75:34","value":{"arguments":[{"arguments":[{"name":"slot_value","nodeType":"YulIdentifier","src":"13291:10:34"}],"functionName":{"name":"shift_right_80_unsigned","nodeType":"YulIdentifier","src":"13267:23:34"},"nodeType":"YulFunctionCall","src":"13267:35:34"}],"functionName":{"name":"cleanup_from_storage_t_uint40","nodeType":"YulIdentifier","src":"13237:29:34"},"nodeType":"YulFunctionCall","src":"13237:66:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13228:5:34"}]}]},"name":"extract_from_storage_value_offset_10t_uint40","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nodeType":"YulTypedName","src":"13197:10:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13212:5:34","type":""}],"src":"13143:166:34"},{"body":{"nodeType":"YulBlock","src":"13368:53:34","statements":[{"nodeType":"YulAssignment","src":"13378:36:34","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13403:3:34","type":"","value":"120"},{"name":"value","nodeType":"YulIdentifier","src":"13408:5:34"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13399:3:34"},"nodeType":"YulFunctionCall","src":"13399:15:34"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"13378:8:34"}]}]},"name":"shift_right_120_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13349:5:34","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"13359:8:34","type":""}],"src":"13315:106:34"},{"body":{"nodeType":"YulBlock","src":"13502:92:34","statements":[{"nodeType":"YulAssignment","src":"13512:76:34","value":{"arguments":[{"arguments":[{"name":"slot_value","nodeType":"YulIdentifier","src":"13576:10:34"}],"functionName":{"name":"shift_right_120_unsigned","nodeType":"YulIdentifier","src":"13551:24:34"},"nodeType":"YulFunctionCall","src":"13551:36:34"}],"functionName":{"name":"cleanup_from_storage_t_uint40","nodeType":"YulIdentifier","src":"13521:29:34"},"nodeType":"YulFunctionCall","src":"13521:67:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13512:5:34"}]}]},"name":"extract_from_storage_value_offset_15t_uint40","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nodeType":"YulTypedName","src":"13481:10:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13496:5:34","type":""}],"src":"13427:167:34"},{"body":{"nodeType":"YulBlock","src":"13653:53:34","statements":[{"nodeType":"YulAssignment","src":"13663:36:34","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13688:3:34","type":"","value":"160"},{"name":"value","nodeType":"YulIdentifier","src":"13693:5:34"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13684:3:34"},"nodeType":"YulFunctionCall","src":"13684:15:34"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"13663:8:34"}]}]},"name":"shift_right_160_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13634:5:34","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"13644:8:34","type":""}],"src":"13600:106:34"},{"body":{"nodeType":"YulBlock","src":"13787:92:34","statements":[{"nodeType":"YulAssignment","src":"13797:76:34","value":{"arguments":[{"arguments":[{"name":"slot_value","nodeType":"YulIdentifier","src":"13861:10:34"}],"functionName":{"name":"shift_right_160_unsigned","nodeType":"YulIdentifier","src":"13836:24:34"},"nodeType":"YulFunctionCall","src":"13836:36:34"}],"functionName":{"name":"cleanup_from_storage_t_uint40","nodeType":"YulIdentifier","src":"13806:29:34"},"nodeType":"YulFunctionCall","src":"13806:67:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13797:5:34"}]}]},"name":"extract_from_storage_value_offset_20t_uint40","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nodeType":"YulTypedName","src":"13766:10:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13781:5:34","type":""}],"src":"13712:167:34"},{"body":{"nodeType":"YulBlock","src":"13938:53:34","statements":[{"nodeType":"YulAssignment","src":"13948:36:34","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13973:3:34","type":"","value":"200"},{"name":"value","nodeType":"YulIdentifier","src":"13978:5:34"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13969:3:34"},"nodeType":"YulFunctionCall","src":"13969:15:34"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"13948:8:34"}]}]},"name":"shift_right_200_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13919:5:34","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"13929:8:34","type":""}],"src":"13885:106:34"},{"body":{"nodeType":"YulBlock","src":"14072:92:34","statements":[{"nodeType":"YulAssignment","src":"14082:76:34","value":{"arguments":[{"arguments":[{"name":"slot_value","nodeType":"YulIdentifier","src":"14146:10:34"}],"functionName":{"name":"shift_right_200_unsigned","nodeType":"YulIdentifier","src":"14121:24:34"},"nodeType":"YulFunctionCall","src":"14121:36:34"}],"functionName":{"name":"cleanup_from_storage_t_uint40","nodeType":"YulIdentifier","src":"14091:29:34"},"nodeType":"YulFunctionCall","src":"14091:67:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14082:5:34"}]}]},"name":"extract_from_storage_value_offset_25t_uint40","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nodeType":"YulTypedName","src":"14051:10:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14066:5:34","type":""}],"src":"13997:167:34"},{"body":{"nodeType":"YulBlock","src":"14317:3120:34","statements":[{"nodeType":"YulVariableDeclaration","src":"14327:64:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14385:5:34"}],"functionName":{"name":"array_length_t_array$_t_uint40_$dyn_storage","nodeType":"YulIdentifier","src":"14341:43:34"},"nodeType":"YulFunctionCall","src":"14341:50:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14331:6:34","type":""}]},{"nodeType":"YulAssignment","src":"14400:92:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14480:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"14485:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint40_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14407:72:34"},"nodeType":"YulFunctionCall","src":"14407:85:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14400:3:34"}]},{"nodeType":"YulVariableDeclaration","src":"14501:22:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"14520:3:34"},"variables":[{"name":"originalPos","nodeType":"YulTypedName","src":"14505:11:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14532:66:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14592:5:34"}],"functionName":{"name":"array_dataslot_t_array$_t_uint40_$dyn_storage","nodeType":"YulIdentifier","src":"14546:45:34"},"nodeType":"YulFunctionCall","src":"14546:52:34"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"14536:6:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14607:20:34","value":{"kind":"number","nodeType":"YulLiteral","src":"14626:1:34","type":"","value":"0"},"variables":[{"name":"itemCounter","nodeType":"YulTypedName","src":"14611:11:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"14641:1144:34","statements":[{"body":{"nodeType":"YulBlock","src":"14814:961:34","statements":[{"nodeType":"YulVariableDeclaration","src":"14832:25:34","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14850:6:34"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"14844:5:34"},"nodeType":"YulFunctionCall","src":"14844:13:34"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"14836:4:34","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14951:4:34"}],"functionName":{"name":"extract_from_storage_value_offset_0t_uint40","nodeType":"YulIdentifier","src":"14907:43:34"},"nodeType":"YulFunctionCall","src":"14907:49:34"},{"name":"pos","nodeType":"YulIdentifier","src":"14958:3:34"}],"functionName":{"name":"abi_encode_t_uint40_to_t_uint40","nodeType":"YulIdentifier","src":"14875:31:34"},"nodeType":"YulFunctionCall","src":"14875:87:34"},"nodeType":"YulExpressionStatement","src":"14875:87:34"},{"nodeType":"YulAssignment","src":"14979:21:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14990:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"14995:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14986:3:34"},"nodeType":"YulFunctionCall","src":"14986:14:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14979:3:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15094:4:34"}],"functionName":{"name":"extract_from_storage_value_offset_5t_uint40","nodeType":"YulIdentifier","src":"15050:43:34"},"nodeType":"YulFunctionCall","src":"15050:49:34"},{"name":"pos","nodeType":"YulIdentifier","src":"15101:3:34"}],"functionName":{"name":"abi_encode_t_uint40_to_t_uint40","nodeType":"YulIdentifier","src":"15018:31:34"},"nodeType":"YulFunctionCall","src":"15018:87:34"},"nodeType":"YulExpressionStatement","src":"15018:87:34"},{"nodeType":"YulAssignment","src":"15122:21:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15133:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"15138:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15129:3:34"},"nodeType":"YulFunctionCall","src":"15129:14:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15122:3:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15238:4:34"}],"functionName":{"name":"extract_from_storage_value_offset_10t_uint40","nodeType":"YulIdentifier","src":"15193:44:34"},"nodeType":"YulFunctionCall","src":"15193:50:34"},{"name":"pos","nodeType":"YulIdentifier","src":"15245:3:34"}],"functionName":{"name":"abi_encode_t_uint40_to_t_uint40","nodeType":"YulIdentifier","src":"15161:31:34"},"nodeType":"YulFunctionCall","src":"15161:88:34"},"nodeType":"YulExpressionStatement","src":"15161:88:34"},{"nodeType":"YulAssignment","src":"15266:21:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15277:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"15282:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15273:3:34"},"nodeType":"YulFunctionCall","src":"15273:14:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15266:3:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15382:4:34"}],"functionName":{"name":"extract_from_storage_value_offset_15t_uint40","nodeType":"YulIdentifier","src":"15337:44:34"},"nodeType":"YulFunctionCall","src":"15337:50:34"},{"name":"pos","nodeType":"YulIdentifier","src":"15389:3:34"}],"functionName":{"name":"abi_encode_t_uint40_to_t_uint40","nodeType":"YulIdentifier","src":"15305:31:34"},"nodeType":"YulFunctionCall","src":"15305:88:34"},"nodeType":"YulExpressionStatement","src":"15305:88:34"},{"nodeType":"YulAssignment","src":"15410:21:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15421:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"15426:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15417:3:34"},"nodeType":"YulFunctionCall","src":"15417:14:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15410:3:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15526:4:34"}],"functionName":{"name":"extract_from_storage_value_offset_20t_uint40","nodeType":"YulIdentifier","src":"15481:44:34"},"nodeType":"YulFunctionCall","src":"15481:50:34"},{"name":"pos","nodeType":"YulIdentifier","src":"15533:3:34"}],"functionName":{"name":"abi_encode_t_uint40_to_t_uint40","nodeType":"YulIdentifier","src":"15449:31:34"},"nodeType":"YulFunctionCall","src":"15449:88:34"},"nodeType":"YulExpressionStatement","src":"15449:88:34"},{"nodeType":"YulAssignment","src":"15554:21:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15565:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"15570:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15561:3:34"},"nodeType":"YulFunctionCall","src":"15561:14:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15554:3:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15670:4:34"}],"functionName":{"name":"extract_from_storage_value_offset_25t_uint40","nodeType":"YulIdentifier","src":"15625:44:34"},"nodeType":"YulFunctionCall","src":"15625:50:34"},{"name":"pos","nodeType":"YulIdentifier","src":"15677:3:34"}],"functionName":{"name":"abi_encode_t_uint40_to_t_uint40","nodeType":"YulIdentifier","src":"15593:31:34"},"nodeType":"YulFunctionCall","src":"15593:88:34"},"nodeType":"YulExpressionStatement","src":"15593:88:34"},{"nodeType":"YulAssignment","src":"15698:21:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15709:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"15714:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15705:3:34"},"nodeType":"YulFunctionCall","src":"15705:14:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15698:3:34"}]},{"nodeType":"YulAssignment","src":"15737:24:34","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15751:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"15759:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15747:3:34"},"nodeType":"YulFunctionCall","src":"15747:14:34"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15737:6:34"}]}]},"condition":{"arguments":[{"arguments":[{"name":"itemCounter","nodeType":"YulIdentifier","src":"14718:11:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14735:1:34","type":"","value":"6"},{"kind":"number","nodeType":"YulLiteral","src":"14738:1:34","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14731:3:34"},"nodeType":"YulFunctionCall","src":"14731:9:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14714:3:34"},"nodeType":"YulFunctionCall","src":"14714:27:34"},{"name":"length","nodeType":"YulIdentifier","src":"14743:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14711:2:34"},"nodeType":"YulFunctionCall","src":"14711:39:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14763:38:34","statements":[{"nodeType":"YulAssignment","src":"14765:34:34","value":{"arguments":[{"name":"itemCounter","nodeType":"YulIdentifier","src":"14784:11:34"},{"kind":"number","nodeType":"YulLiteral","src":"14797:1:34","type":"","value":"6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14780:3:34"},"nodeType":"YulFunctionCall","src":"14780:19:34"},"variableNames":[{"name":"itemCounter","nodeType":"YulIdentifier","src":"14765:11:34"}]}]},"pre":{"nodeType":"YulBlock","src":"14707:3:34","statements":[]},"src":"14703:1072:34"}]},"condition":{"kind":"number","nodeType":"YulLiteral","src":"14639:1:34","type":"","value":"1"},"nodeType":"YulIf","src":"14636:1149:34"},{"body":{"nodeType":"YulBlock","src":"15864:1548:34","statements":[{"nodeType":"YulVariableDeclaration","src":"15878:25:34","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15896:6:34"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"15890:5:34"},"nodeType":"YulFunctionCall","src":"15890:13:34"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"15882:4:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"15944:208:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16038:4:34"}],"functionName":{"name":"extract_from_storage_value_offset_0t_uint40","nodeType":"YulIdentifier","src":"15994:43:34"},"nodeType":"YulFunctionCall","src":"15994:49:34"},{"name":"pos","nodeType":"YulIdentifier","src":"16045:3:34"}],"functionName":{"name":"abi_encode_t_uint40_to_t_uint40","nodeType":"YulIdentifier","src":"15962:31:34"},"nodeType":"YulFunctionCall","src":"15962:87:34"},"nodeType":"YulExpressionStatement","src":"15962:87:34"},{"nodeType":"YulAssignment","src":"16066:21:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16077:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"16082:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16073:3:34"},"nodeType":"YulFunctionCall","src":"16073:14:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16066:3:34"}]},{"nodeType":"YulAssignment","src":"16104:34:34","value":{"arguments":[{"name":"itemCounter","nodeType":"YulIdentifier","src":"16123:11:34"},{"kind":"number","nodeType":"YulLiteral","src":"16136:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16119:3:34"},"nodeType":"YulFunctionCall","src":"16119:19:34"},"variableNames":[{"name":"itemCounter","nodeType":"YulIdentifier","src":"16104:11:34"}]}]},"condition":{"arguments":[{"name":"itemCounter","nodeType":"YulIdentifier","src":"15923:11:34"},{"name":"length","nodeType":"YulIdentifier","src":"15936:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15920:2:34"},"nodeType":"YulFunctionCall","src":"15920:23:34"},"nodeType":"YulIf","src":"15917:235:34"},{"body":{"nodeType":"YulBlock","src":"16193:208:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16287:4:34"}],"functionName":{"name":"extract_from_storage_value_offset_5t_uint40","nodeType":"YulIdentifier","src":"16243:43:34"},"nodeType":"YulFunctionCall","src":"16243:49:34"},{"name":"pos","nodeType":"YulIdentifier","src":"16294:3:34"}],"functionName":{"name":"abi_encode_t_uint40_to_t_uint40","nodeType":"YulIdentifier","src":"16211:31:34"},"nodeType":"YulFunctionCall","src":"16211:87:34"},"nodeType":"YulExpressionStatement","src":"16211:87:34"},{"nodeType":"YulAssignment","src":"16315:21:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16326:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"16331:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16322:3:34"},"nodeType":"YulFunctionCall","src":"16322:14:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16315:3:34"}]},{"nodeType":"YulAssignment","src":"16353:34:34","value":{"arguments":[{"name":"itemCounter","nodeType":"YulIdentifier","src":"16372:11:34"},{"kind":"number","nodeType":"YulLiteral","src":"16385:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16368:3:34"},"nodeType":"YulFunctionCall","src":"16368:19:34"},"variableNames":[{"name":"itemCounter","nodeType":"YulIdentifier","src":"16353:11:34"}]}]},"condition":{"arguments":[{"name":"itemCounter","nodeType":"YulIdentifier","src":"16172:11:34"},{"name":"length","nodeType":"YulIdentifier","src":"16185:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16169:2:34"},"nodeType":"YulFunctionCall","src":"16169:23:34"},"nodeType":"YulIf","src":"16166:235:34"},{"body":{"nodeType":"YulBlock","src":"16442:209:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16537:4:34"}],"functionName":{"name":"extract_from_storage_value_offset_10t_uint40","nodeType":"YulIdentifier","src":"16492:44:34"},"nodeType":"YulFunctionCall","src":"16492:50:34"},{"name":"pos","nodeType":"YulIdentifier","src":"16544:3:34"}],"functionName":{"name":"abi_encode_t_uint40_to_t_uint40","nodeType":"YulIdentifier","src":"16460:31:34"},"nodeType":"YulFunctionCall","src":"16460:88:34"},"nodeType":"YulExpressionStatement","src":"16460:88:34"},{"nodeType":"YulAssignment","src":"16565:21:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16576:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"16581:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16572:3:34"},"nodeType":"YulFunctionCall","src":"16572:14:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16565:3:34"}]},{"nodeType":"YulAssignment","src":"16603:34:34","value":{"arguments":[{"name":"itemCounter","nodeType":"YulIdentifier","src":"16622:11:34"},{"kind":"number","nodeType":"YulLiteral","src":"16635:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16618:3:34"},"nodeType":"YulFunctionCall","src":"16618:19:34"},"variableNames":[{"name":"itemCounter","nodeType":"YulIdentifier","src":"16603:11:34"}]}]},"condition":{"arguments":[{"name":"itemCounter","nodeType":"YulIdentifier","src":"16421:11:34"},{"name":"length","nodeType":"YulIdentifier","src":"16434:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16418:2:34"},"nodeType":"YulFunctionCall","src":"16418:23:34"},"nodeType":"YulIf","src":"16415:236:34"},{"body":{"nodeType":"YulBlock","src":"16692:209:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"16787:4:34"}],"functionName":{"name":"extract_from_storage_value_offset_15t_uint40","nodeType":"YulIdentifier","src":"16742:44:34"},"nodeType":"YulFunctionCall","src":"16742:50:34"},{"name":"pos","nodeType":"YulIdentifier","src":"16794:3:34"}],"functionName":{"name":"abi_encode_t_uint40_to_t_uint40","nodeType":"YulIdentifier","src":"16710:31:34"},"nodeType":"YulFunctionCall","src":"16710:88:34"},"nodeType":"YulExpressionStatement","src":"16710:88:34"},{"nodeType":"YulAssignment","src":"16815:21:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16826:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"16831:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16822:3:34"},"nodeType":"YulFunctionCall","src":"16822:14:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16815:3:34"}]},{"nodeType":"YulAssignment","src":"16853:34:34","value":{"arguments":[{"name":"itemCounter","nodeType":"YulIdentifier","src":"16872:11:34"},{"kind":"number","nodeType":"YulLiteral","src":"16885:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16868:3:34"},"nodeType":"YulFunctionCall","src":"16868:19:34"},"variableNames":[{"name":"itemCounter","nodeType":"YulIdentifier","src":"16853:11:34"}]}]},"condition":{"arguments":[{"name":"itemCounter","nodeType":"YulIdentifier","src":"16671:11:34"},{"name":"length","nodeType":"YulIdentifier","src":"16684:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16668:2:34"},"nodeType":"YulFunctionCall","src":"16668:23:34"},"nodeType":"YulIf","src":"16665:236:34"},{"body":{"nodeType":"YulBlock","src":"16942:209:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17037:4:34"}],"functionName":{"name":"extract_from_storage_value_offset_20t_uint40","nodeType":"YulIdentifier","src":"16992:44:34"},"nodeType":"YulFunctionCall","src":"16992:50:34"},{"name":"pos","nodeType":"YulIdentifier","src":"17044:3:34"}],"functionName":{"name":"abi_encode_t_uint40_to_t_uint40","nodeType":"YulIdentifier","src":"16960:31:34"},"nodeType":"YulFunctionCall","src":"16960:88:34"},"nodeType":"YulExpressionStatement","src":"16960:88:34"},{"nodeType":"YulAssignment","src":"17065:21:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17076:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"17081:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17072:3:34"},"nodeType":"YulFunctionCall","src":"17072:14:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17065:3:34"}]},{"nodeType":"YulAssignment","src":"17103:34:34","value":{"arguments":[{"name":"itemCounter","nodeType":"YulIdentifier","src":"17122:11:34"},{"kind":"number","nodeType":"YulLiteral","src":"17135:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17118:3:34"},"nodeType":"YulFunctionCall","src":"17118:19:34"},"variableNames":[{"name":"itemCounter","nodeType":"YulIdentifier","src":"17103:11:34"}]}]},"condition":{"arguments":[{"name":"itemCounter","nodeType":"YulIdentifier","src":"16921:11:34"},{"name":"length","nodeType":"YulIdentifier","src":"16934:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16918:2:34"},"nodeType":"YulFunctionCall","src":"16918:23:34"},"nodeType":"YulIf","src":"16915:236:34"},{"body":{"nodeType":"YulBlock","src":"17192:209:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"17287:4:34"}],"functionName":{"name":"extract_from_storage_value_offset_25t_uint40","nodeType":"YulIdentifier","src":"17242:44:34"},"nodeType":"YulFunctionCall","src":"17242:50:34"},{"name":"pos","nodeType":"YulIdentifier","src":"17294:3:34"}],"functionName":{"name":"abi_encode_t_uint40_to_t_uint40","nodeType":"YulIdentifier","src":"17210:31:34"},"nodeType":"YulFunctionCall","src":"17210:88:34"},"nodeType":"YulExpressionStatement","src":"17210:88:34"},{"nodeType":"YulAssignment","src":"17315:21:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17326:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"17331:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17322:3:34"},"nodeType":"YulFunctionCall","src":"17322:14:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17315:3:34"}]},{"nodeType":"YulAssignment","src":"17353:34:34","value":{"arguments":[{"name":"itemCounter","nodeType":"YulIdentifier","src":"17372:11:34"},{"kind":"number","nodeType":"YulLiteral","src":"17385:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17368:3:34"},"nodeType":"YulFunctionCall","src":"17368:19:34"},"variableNames":[{"name":"itemCounter","nodeType":"YulIdentifier","src":"17353:11:34"}]}]},"condition":{"arguments":[{"name":"itemCounter","nodeType":"YulIdentifier","src":"17171:11:34"},{"name":"length","nodeType":"YulIdentifier","src":"17184:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17168:2:34"},"nodeType":"YulFunctionCall","src":"17168:23:34"},"nodeType":"YulIf","src":"17165:236:34"}]},"condition":{"kind":"number","nodeType":"YulLiteral","src":"15862:1:34","type":"","value":"1"},"nodeType":"YulIf","src":"15859:1553:34"},{"nodeType":"YulAssignment","src":"17421:10:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"17428:3:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17421:3:34"}]}]},"name":"abi_encode_t_array$_t_uint40_$dyn_storage_to_t_array$_t_uint40_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14296:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14303:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14312:3:34","type":""}],"src":"14198:3239:34"},{"body":{"nodeType":"YulBlock","src":"17614:302:34","statements":[{"nodeType":"YulAssignment","src":"17624:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17636:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"17647:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17632:3:34"},"nodeType":"YulFunctionCall","src":"17632:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17624:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17704:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17717:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"17728:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17713:3:34"},"nodeType":"YulFunctionCall","src":"17713:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17660:43:34"},"nodeType":"YulFunctionCall","src":"17660:71:34"},"nodeType":"YulExpressionStatement","src":"17660:71:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17752:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"17763:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17748:3:34"},"nodeType":"YulFunctionCall","src":"17748:18:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17772:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"17778:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17768:3:34"},"nodeType":"YulFunctionCall","src":"17768:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17741:6:34"},"nodeType":"YulFunctionCall","src":"17741:48:34"},"nodeType":"YulExpressionStatement","src":"17741:48:34"},{"nodeType":"YulAssignment","src":"17798:111:34","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17895:6:34"},{"name":"tail","nodeType":"YulIdentifier","src":"17904:4:34"}],"functionName":{"name":"abi_encode_t_array$_t_uint40_$dyn_storage_to_t_array$_t_uint40_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17806:88:34"},"nodeType":"YulFunctionCall","src":"17806:103:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17798:4:34"}]}]},"name":"abi_encode_tuple_t_address_t_array$_t_uint40_$dyn_storage__to_t_address_t_array$_t_uint40_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17578:9:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17590:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17598:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17609:4:34","type":""}],"src":"17443:473:34"},{"body":{"nodeType":"YulBlock","src":"17984:79:34","statements":[{"nodeType":"YulAssignment","src":"17994:22:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18009:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18003:5:34"},"nodeType":"YulFunctionCall","src":"18003:13:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17994:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18051:5:34"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"18025:25:34"},"nodeType":"YulFunctionCall","src":"18025:32:34"},"nodeType":"YulExpressionStatement","src":"18025:32:34"}]},"name":"abi_decode_t_uint16_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"17962:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"17970:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"17978:5:34","type":""}],"src":"17922:141:34"},{"body":{"nodeType":"YulBlock","src":"18130:78:34","statements":[{"nodeType":"YulAssignment","src":"18140:22:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18155:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18149:5:34"},"nodeType":"YulFunctionCall","src":"18149:13:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18140:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18196:5:34"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"18171:24:34"},"nodeType":"YulFunctionCall","src":"18171:31:34"},"nodeType":"YulExpressionStatement","src":"18171:31:34"}]},"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18108:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"18116:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"18124:5:34","type":""}],"src":"18069:139:34"},{"body":{"nodeType":"YulBlock","src":"18321:548:34","statements":[{"body":{"nodeType":"YulBlock","src":"18367:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18369:77:34"},"nodeType":"YulFunctionCall","src":"18369:79:34"},"nodeType":"YulExpressionStatement","src":"18369:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18342:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"18351:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18338:3:34"},"nodeType":"YulFunctionCall","src":"18338:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"18363:2:34","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18334:3:34"},"nodeType":"YulFunctionCall","src":"18334:32:34"},"nodeType":"YulIf","src":"18331:119:34"},{"nodeType":"YulBlock","src":"18460:127:34","statements":[{"nodeType":"YulVariableDeclaration","src":"18475:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"18489:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18479:6:34","type":""}]},{"nodeType":"YulAssignment","src":"18504:73:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18549:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"18560:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18545:3:34"},"nodeType":"YulFunctionCall","src":"18545:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18569:7:34"}],"functionName":{"name":"abi_decode_t_uint16_fromMemory","nodeType":"YulIdentifier","src":"18514:30:34"},"nodeType":"YulFunctionCall","src":"18514:63:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18504:6:34"}]}]},{"nodeType":"YulBlock","src":"18597:128:34","statements":[{"nodeType":"YulVariableDeclaration","src":"18612:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"18626:2:34","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18616:6:34","type":""}]},{"nodeType":"YulAssignment","src":"18642:73:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18687:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"18698:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18683:3:34"},"nodeType":"YulFunctionCall","src":"18683:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18707:7:34"}],"functionName":{"name":"abi_decode_t_uint16_fromMemory","nodeType":"YulIdentifier","src":"18652:30:34"},"nodeType":"YulFunctionCall","src":"18652:63:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18642:6:34"}]}]},{"nodeType":"YulBlock","src":"18735:127:34","statements":[{"nodeType":"YulVariableDeclaration","src":"18750:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"18764:2:34","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18754:6:34","type":""}]},{"nodeType":"YulAssignment","src":"18780:72:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18824:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"18835:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18820:3:34"},"nodeType":"YulFunctionCall","src":"18820:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18844:7:34"}],"functionName":{"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulIdentifier","src":"18790:29:34"},"nodeType":"YulFunctionCall","src":"18790:62:34"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"18780:6:34"}]}]}]},"name":"abi_decode_tuple_t_uint16t_uint16t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18275:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18286:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18298:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18306:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18314:6:34","type":""}],"src":"18214:655:34"},{"body":{"nodeType":"YulBlock","src":"18999:204:34","statements":[{"nodeType":"YulAssignment","src":"19009:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19021:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19032:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19017:3:34"},"nodeType":"YulFunctionCall","src":"19017:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19009:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19089:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19102:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19113:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19098:3:34"},"nodeType":"YulFunctionCall","src":"19098:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19045:43:34"},"nodeType":"YulFunctionCall","src":"19045:71:34"},"nodeType":"YulExpressionStatement","src":"19045:71:34"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19168:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19181:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19192:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19177:3:34"},"nodeType":"YulFunctionCall","src":"19177:18:34"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"19126:41:34"},"nodeType":"YulFunctionCall","src":"19126:70:34"},"nodeType":"YulExpressionStatement","src":"19126:70:34"}]},"name":"abi_encode_tuple_t_address_t_uint16__to_t_address_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18963:9:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18975:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18983:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18994:4:34","type":""}],"src":"18875:328:34"},{"body":{"nodeType":"YulBlock","src":"19270:51:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19287:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19308:5:34"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"19292:15:34"},"nodeType":"YulFunctionCall","src":"19292:22:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19280:6:34"},"nodeType":"YulFunctionCall","src":"19280:35:34"},"nodeType":"YulExpressionStatement","src":"19280:35:34"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19258:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19265:3:34","type":""}],"src":"19209:112:34"},{"body":{"nodeType":"YulBlock","src":"19473:280:34","statements":[{"nodeType":"YulAssignment","src":"19483:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19495:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19506:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19491:3:34"},"nodeType":"YulFunctionCall","src":"19491:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19483:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19561:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19574:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19585:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19570:3:34"},"nodeType":"YulFunctionCall","src":"19570:17:34"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"19519:41:34"},"nodeType":"YulFunctionCall","src":"19519:69:34"},"nodeType":"YulExpressionStatement","src":"19519:69:34"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19640:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19653:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19664:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19649:3:34"},"nodeType":"YulFunctionCall","src":"19649:18:34"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"19598:41:34"},"nodeType":"YulFunctionCall","src":"19598:70:34"},"nodeType":"YulExpressionStatement","src":"19598:70:34"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"19718:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19731:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19742:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19727:3:34"},"nodeType":"YulFunctionCall","src":"19727:18:34"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"19678:39:34"},"nodeType":"YulFunctionCall","src":"19678:68:34"},"nodeType":"YulExpressionStatement","src":"19678:68:34"}]},"name":"abi_encode_tuple_t_uint16_t_uint16_t_uint8__to_t_uint16_t_uint16_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19429:9:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19441:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19449:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19457:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19468:4:34","type":""}],"src":"19327:426:34"},{"body":{"nodeType":"YulBlock","src":"19911:286:34","statements":[{"nodeType":"YulAssignment","src":"19921:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19933:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19944:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19929:3:34"},"nodeType":"YulFunctionCall","src":"19929:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19921:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20001:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20014:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"20025:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20010:3:34"},"nodeType":"YulFunctionCall","src":"20010:17:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19957:43:34"},"nodeType":"YulFunctionCall","src":"19957:71:34"},"nodeType":"YulExpressionStatement","src":"19957:71:34"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20082:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20095:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"20106:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20091:3:34"},"nodeType":"YulFunctionCall","src":"20091:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20038:43:34"},"nodeType":"YulFunctionCall","src":"20038:72:34"},"nodeType":"YulExpressionStatement","src":"20038:72:34"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20162:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20175:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"20186:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20171:3:34"},"nodeType":"YulFunctionCall","src":"20171:18:34"}],"functionName":{"name":"abi_encode_t_uint40_to_t_uint40_fromStack","nodeType":"YulIdentifier","src":"20120:41:34"},"nodeType":"YulFunctionCall","src":"20120:70:34"},"nodeType":"YulExpressionStatement","src":"20120:70:34"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint40__to_t_uint256_t_uint256_t_uint40__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19867:9:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19879:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19887:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19895:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19906:4:34","type":""}],"src":"19759:438:34"},{"body":{"nodeType":"YulBlock","src":"20268:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20285:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20308:5:34"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"20290:17:34"},"nodeType":"YulFunctionCall","src":"20290:24:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20278:6:34"},"nodeType":"YulFunctionCall","src":"20278:37:34"},"nodeType":"YulExpressionStatement","src":"20278:37:34"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20256:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20263:3:34","type":""}],"src":"20203:118:34"},{"body":{"nodeType":"YulBlock","src":"20589:616:34","statements":[{"nodeType":"YulAssignment","src":"20599:27:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20611:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"20622:3:34","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20607:3:34"},"nodeType":"YulFunctionCall","src":"20607:19:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20599:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20680:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20693:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"20704:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20689:3:34"},"nodeType":"YulFunctionCall","src":"20689:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20636:43:34"},"nodeType":"YulFunctionCall","src":"20636:71:34"},"nodeType":"YulExpressionStatement","src":"20636:71:34"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20761:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20774:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"20785:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20770:3:34"},"nodeType":"YulFunctionCall","src":"20770:18:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20717:43:34"},"nodeType":"YulFunctionCall","src":"20717:72:34"},"nodeType":"YulExpressionStatement","src":"20717:72:34"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20843:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20856:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"20867:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20852:3:34"},"nodeType":"YulFunctionCall","src":"20852:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20799:43:34"},"nodeType":"YulFunctionCall","src":"20799:72:34"},"nodeType":"YulExpressionStatement","src":"20799:72:34"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"20925:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20938:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"20949:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20934:3:34"},"nodeType":"YulFunctionCall","src":"20934:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20881:43:34"},"nodeType":"YulFunctionCall","src":"20881:72:34"},"nodeType":"YulExpressionStatement","src":"20881:72:34"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"21003:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21016:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"21027:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21012:3:34"},"nodeType":"YulFunctionCall","src":"21012:19:34"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"20963:39:34"},"nodeType":"YulFunctionCall","src":"20963:69:34"},"nodeType":"YulExpressionStatement","src":"20963:69:34"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"21086:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21099:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"21110:3:34","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21095:3:34"},"nodeType":"YulFunctionCall","src":"21095:19:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"21042:43:34"},"nodeType":"YulFunctionCall","src":"21042:73:34"},"nodeType":"YulExpressionStatement","src":"21042:73:34"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"21169:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21182:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"21193:3:34","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21178:3:34"},"nodeType":"YulFunctionCall","src":"21178:19:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"21125:43:34"},"nodeType":"YulFunctionCall","src":"21125:73:34"},"nodeType":"YulExpressionStatement","src":"21125:73:34"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20513:9:34","type":""},{"name":"value6","nodeType":"YulTypedName","src":"20525:6:34","type":""},{"name":"value5","nodeType":"YulTypedName","src":"20533:6:34","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20541:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20549:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20557:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20565:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20573:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20584:4:34","type":""}],"src":"20327:878:34"},{"body":{"nodeType":"YulBlock","src":"21337:206:34","statements":[{"nodeType":"YulAssignment","src":"21347:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21359:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"21370:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21355:3:34"},"nodeType":"YulFunctionCall","src":"21355:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21347:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21427:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21440:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"21451:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21436:3:34"},"nodeType":"YulFunctionCall","src":"21436:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21383:43:34"},"nodeType":"YulFunctionCall","src":"21383:71:34"},"nodeType":"YulExpressionStatement","src":"21383:71:34"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21508:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21521:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"21532:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21517:3:34"},"nodeType":"YulFunctionCall","src":"21517:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21464:43:34"},"nodeType":"YulFunctionCall","src":"21464:72:34"},"nodeType":"YulExpressionStatement","src":"21464:72:34"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21301:9:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21313:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21321:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21332:4:34","type":""}],"src":"21211:332:34"},{"body":{"nodeType":"YulBlock","src":"21703:288:34","statements":[{"nodeType":"YulAssignment","src":"21713:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21725:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"21736:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21721:3:34"},"nodeType":"YulFunctionCall","src":"21721:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21713:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21793:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21806:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"21817:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21802:3:34"},"nodeType":"YulFunctionCall","src":"21802:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21749:43:34"},"nodeType":"YulFunctionCall","src":"21749:71:34"},"nodeType":"YulExpressionStatement","src":"21749:71:34"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21874:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21887:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"21898:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21883:3:34"},"nodeType":"YulFunctionCall","src":"21883:18:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21830:43:34"},"nodeType":"YulFunctionCall","src":"21830:72:34"},"nodeType":"YulExpressionStatement","src":"21830:72:34"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21956:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21969:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"21980:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21965:3:34"},"nodeType":"YulFunctionCall","src":"21965:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21912:43:34"},"nodeType":"YulFunctionCall","src":"21912:72:34"},"nodeType":"YulExpressionStatement","src":"21912:72:34"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21659:9:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21671:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21679:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21687:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21698:4:34","type":""}],"src":"21549:442:34"},{"body":{"nodeType":"YulBlock","src":"22025:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22042:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22045:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22035:6:34"},"nodeType":"YulFunctionCall","src":"22035:88:34"},"nodeType":"YulExpressionStatement","src":"22035:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22139:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22142:4:34","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22132:6:34"},"nodeType":"YulFunctionCall","src":"22132:15:34"},"nodeType":"YulExpressionStatement","src":"22132:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22163:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22166:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22156:6:34"},"nodeType":"YulFunctionCall","src":"22156:15:34"},"nodeType":"YulExpressionStatement","src":"22156:15:34"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"21997:180:34"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IRewardVault_$9329_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IRewardVault_$9329_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IRewardVault_$9329_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IRewardVault_$9329__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IRewardVault_$9329_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IScoreRegistry_$9548_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IScoreRegistry_$9548_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IScoreRegistry_$9548_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IScoreRegistry_$9548__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IScoreRegistry_$9548_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IERC20_$992_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$992_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$992_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$992__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$992_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint40_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint40_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint40_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint40(value) -> cleaned {\n        cleaned := and(value, 0xffffffffff)\n    }\n\n    function abi_encode_t_uint40_to_t_uint40(value, pos) {\n        mstore(pos, cleanup_t_uint40(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint40_to_t_uint40(value0, pos) -> updatedPos {\n        abi_encode_t_uint40_to_t_uint40(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint40_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint40[] -> uint40[]\n    function abi_encode_t_array$_t_uint40_$dyn_memory_ptr_to_t_array$_t_uint40_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint40_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint40_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint40_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint40_to_t_uint40(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint40_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint40_$dyn_memory_ptr__to_t_array$_t_uint40_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint40_$dyn_memory_ptr_to_t_array$_t_uint40_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint40_to_t_uint40_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint40(value))\n    }\n\n    function abi_encode_tuple_t_uint40__to_t_uint40__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint40_to_t_uint40_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_array$_t_uint40_$dyn_storage(value) -> length {\n\n        length := sload(value)\n\n    }\n\n    function array_dataslot_t_array$_t_uint40_$dyn_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function shift_right_0_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(0, value)\n\n    }\n\n    function cleanup_from_storage_t_uint40(value) -> cleaned {\n        cleaned := and(value, 0xffffffffff)\n    }\n\n    function extract_from_storage_value_offset_0t_uint40(slot_value) -> value {\n        value := cleanup_from_storage_t_uint40(shift_right_0_unsigned(slot_value))\n    }\n\n    function shift_right_40_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(40, value)\n\n    }\n\n    function extract_from_storage_value_offset_5t_uint40(slot_value) -> value {\n        value := cleanup_from_storage_t_uint40(shift_right_40_unsigned(slot_value))\n    }\n\n    function shift_right_80_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(80, value)\n\n    }\n\n    function extract_from_storage_value_offset_10t_uint40(slot_value) -> value {\n        value := cleanup_from_storage_t_uint40(shift_right_80_unsigned(slot_value))\n    }\n\n    function shift_right_120_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(120, value)\n\n    }\n\n    function extract_from_storage_value_offset_15t_uint40(slot_value) -> value {\n        value := cleanup_from_storage_t_uint40(shift_right_120_unsigned(slot_value))\n    }\n\n    function shift_right_160_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(160, value)\n\n    }\n\n    function extract_from_storage_value_offset_20t_uint40(slot_value) -> value {\n        value := cleanup_from_storage_t_uint40(shift_right_160_unsigned(slot_value))\n    }\n\n    function shift_right_200_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(200, value)\n\n    }\n\n    function extract_from_storage_value_offset_25t_uint40(slot_value) -> value {\n        value := cleanup_from_storage_t_uint40(shift_right_200_unsigned(slot_value))\n    }\n\n    // uint40[] -> uint40[]\n    function abi_encode_t_array$_t_uint40_$dyn_storage_to_t_array$_t_uint40_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint40_$dyn_storage(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint40_$dyn_memory_ptr_fromStack(pos, length)\n        let originalPos := pos\n        let srcPtr := array_dataslot_t_array$_t_uint40_$dyn_storage(value)\n        let itemCounter := 0\n        if 1 {\n            // Run the loop over all full slots\n            for { } lt(add(itemCounter, sub(6, 1)), length)\n            { itemCounter := add(itemCounter, 6) }\n            {\n                let data := sload(srcPtr)\n\n                abi_encode_t_uint40_to_t_uint40(extract_from_storage_value_offset_0t_uint40(data), pos)\n                pos := add(pos, 0x20)\n\n                abi_encode_t_uint40_to_t_uint40(extract_from_storage_value_offset_5t_uint40(data), pos)\n                pos := add(pos, 0x20)\n\n                abi_encode_t_uint40_to_t_uint40(extract_from_storage_value_offset_10t_uint40(data), pos)\n                pos := add(pos, 0x20)\n\n                abi_encode_t_uint40_to_t_uint40(extract_from_storage_value_offset_15t_uint40(data), pos)\n                pos := add(pos, 0x20)\n\n                abi_encode_t_uint40_to_t_uint40(extract_from_storage_value_offset_20t_uint40(data), pos)\n                pos := add(pos, 0x20)\n\n                abi_encode_t_uint40_to_t_uint40(extract_from_storage_value_offset_25t_uint40(data), pos)\n                pos := add(pos, 0x20)\n\n                srcPtr := add(srcPtr, 1)\n            }\n        }\n        // Handle the last (not necessarily full) slot specially\n        if 1 {\n            let data := sload(srcPtr)\n\n            if lt(itemCounter, length) {\n                abi_encode_t_uint40_to_t_uint40(extract_from_storage_value_offset_0t_uint40(data), pos)\n                pos := add(pos, 0x20)\n                itemCounter := add(itemCounter, 1)\n            }\n\n            if lt(itemCounter, length) {\n                abi_encode_t_uint40_to_t_uint40(extract_from_storage_value_offset_5t_uint40(data), pos)\n                pos := add(pos, 0x20)\n                itemCounter := add(itemCounter, 1)\n            }\n\n            if lt(itemCounter, length) {\n                abi_encode_t_uint40_to_t_uint40(extract_from_storage_value_offset_10t_uint40(data), pos)\n                pos := add(pos, 0x20)\n                itemCounter := add(itemCounter, 1)\n            }\n\n            if lt(itemCounter, length) {\n                abi_encode_t_uint40_to_t_uint40(extract_from_storage_value_offset_15t_uint40(data), pos)\n                pos := add(pos, 0x20)\n                itemCounter := add(itemCounter, 1)\n            }\n\n            if lt(itemCounter, length) {\n                abi_encode_t_uint40_to_t_uint40(extract_from_storage_value_offset_20t_uint40(data), pos)\n                pos := add(pos, 0x20)\n                itemCounter := add(itemCounter, 1)\n            }\n\n            if lt(itemCounter, length) {\n                abi_encode_t_uint40_to_t_uint40(extract_from_storage_value_offset_25t_uint40(data), pos)\n                pos := add(pos, 0x20)\n                itemCounter := add(itemCounter, 1)\n            }\n\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_array$_t_uint40_$dyn_storage__to_t_address_t_array$_t_uint40_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint40_$dyn_storage_to_t_array$_t_uint40_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint16t_uint16t_uint8_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint16__to_t_address_t_uint16__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint16_t_uint8__to_t_uint16_t_uint16_t_uint8__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint40__to_t_uint256_t_uint256_t_uint40__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint40_to_t_uint40_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n","id":34,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"8149":[{"length":32,"start":1588},{"length":32,"start":1838},{"length":32,"start":2411},{"length":32,"start":2698},{"length":32,"start":3728},{"length":32,"start":5556},{"length":32,"start":5843}],"8153":[{"length":32,"start":1784},{"length":32,"start":2922},{"length":32,"start":6067}],"8157":[{"length":32,"start":1748},{"length":32,"start":3274},{"length":32,"start":3334},{"length":32,"start":6413},{"length":32,"start":6473}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061014d5760003560e01c80637d882097116100c3578063b6b55f251161007c578063b6b55f2514610344578063ce84daad14610360578063d55be8c61461037c578063d68b29fe1461039a578063f0f44260146103ca578063f2fde38b146103e65761014d565b80637d882097146102945780638456cb59146102b25780638da5cb5b146102bc57806395ccea67146102da5780639ab1af67146102f6578063ab879827146103265761014d565b80633eb8104a116101155780633eb8104a146102085780633f4ba83a1461022657806354d9f653146102305780635c975abb1461024e57806361d027b31461026c578063715018a61461028a5761014d565b8063023b1fc9146101525780631bae91a41461016e57806327e235e31461019e5780632e1a7d4d146101ce5780633a2c6777146101ea575b600080fd5b61016c60048036038101906101679190611b68565b610402565b005b61018860048036038101906101839190611bf3565b6104a4565b6040516101959190611c39565b60405180910390f35b6101b860048036038101906101b39190611bf3565b6104f0565b6040516101c59190611c39565b60405180910390f35b6101e860048036038101906101e39190611c80565b610508565b005b6101f26106d2565b6040516101ff9190611d0c565b60405180910390f35b6102106106f6565b60405161021d9190611d48565b60405180910390f35b61022e61071a565b005b61023861072c565b6040516102459190611d84565b60405180910390f35b610256610750565b6040516102639190611dba565b60405180910390f35b610274610767565b6040516102819190611de4565b60405180910390f35b61029261078d565b005b61029c6107a1565b6040516102a99190611c39565b60405180910390f35b6102ba6107a7565b005b6102c46107b9565b6040516102d19190611de4565b60405180910390f35b6102f460048036038101906102ef9190611dff565b6107e2565b005b610310600480360381019061030b9190611bf3565b610828565b60405161031d9190611f0e565b60405180910390f35b61032e6108ed565b60405161033b9190611f3f565b60405180910390f35b61035e60048036038101906103599190611c80565b610901565b005b61037a60048036038101906103759190611fc9565b610e44565b005b610384610f6d565b6040516103919190611f3f565b60405180910390f35b6103b460048036038101906103af9190611bf3565b610f72565b6040516103c19190612053565b60405180910390f35b6103e460048036038101906103df9190611bf3565b610f96565b005b61040060048036038101906103fb9190611bf3565b611019565b005b61040a61109f565b606461ffff168161ffff16111561044d576040517f2977da4400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260156101000a81548161ffff021916908361ffff1602179055507fc8fcf8ee1425e7e60b8af83735e1eb516d5b9ef05bfd6eece552ebaeb7c75b48816040516104999190611f3f565b60405180910390a150565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b60036020528060005260406000206000915090505481565b610510611126565b61051861116c565b60008103610552576040517f5945ea5600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156105cb576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600033905081600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508160046000828254039250508190555061067881837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166111ad9092919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5836040516106be9190611c39565b60405180910390a2506106cf61122c565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b61072261109f565b61072a611235565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600260009054906101000a900460ff16905090565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61079561109f565b61079f6000611298565b565b60045481565b6107af61109f565b6107b761135c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107ea61109f565b6107f26113bf565b6108246107fd6107b9565b828473ffffffffffffffffffffffffffffffffffffffff166111ad9092919063ffffffff16565b5050565b6060600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156108e157602002820191906000526020600020906000905b82829054906101000a900464ffffffffff1664ffffffffff16815260200190600501906020826004010492830192600103820291508084116108a25790505b50505050509050919050565b600260159054906101000a900461ffff1681565b610909611126565b61091161116c565b6000810361094b576040517f5945ea5600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003390506000620151804261096191906120cc565b90506109b08230857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166113ff909392919063ffffffff16565b600080600260159054906101000a900461ffff1661ffff16118015610a245750600073ffffffffffffffffffffffffffffffffffffffff16600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b15610ad057612710600260159054906101000a900461ffff1661ffff1685610a4c91906120fd565b610a5691906120cc565b90506000811115610acf57610ace600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166111ad9092919063ffffffff16565b5b5b60008185610ade919061213f565b905080600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b2f9190612173565b925050819055508060046000828254610b489190612173565b925050819055506000610b5b8585611481565b905060008060008315610ddf577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663950f2dae89600560008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518363ffffffff1660e01b8152600401610c019291906124a2565b6060604051808303816000875af1158015610c20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4491906124fc565b80935081945082955050505086600660008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548164ffffffffff021916908364ffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610d8c577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b0fb566489846040518363ffffffff1660e01b8152600401610d5f92919061254f565b600060405180830381600087803b158015610d7957600080fd5b505af1925050508015610d8a575060015b505b8773ffffffffffffffffffffffffffffffffffffffff167f9b24ce28727f6853c576fdd52d3dd47b59988260937e521e19296bcf93361fa6848484604051610dd693929190612587565b60405180910390a25b8773ffffffffffffffffffffffffffffffffffffffff167fcb5867ada7e790a7d70414567cba30a43473fe877223b5fa637f5af7edd02e528a878a604051610e29939291906125be565b60405180910390a25050505050505050610e4161122c565b50565b610e4c611126565b610e5461116c565b60008503610e8e576040517f5945ea5600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d505accf333088888888886040518863ffffffff1660e01b8152600401610ef39796959493929190612604565b600060405180830381600087803b158015610f0d57600080fd5b505af1925050508015610f1e575060015b610f54576040517f0d0ad80100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f5e3386611599565b610f6661122c565b5050505050565b606481565b60066020528060005260406000206000915054906101000a900464ffffffffff1681565b610f9e61109f565b80600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d18160405161100e9190611de4565b60405180910390a150565b61102161109f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110935760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161108a9190611de4565b60405180910390fd5b61109c81611298565b50565b6110a7611a7f565b73ffffffffffffffffffffffffffffffffffffffff166110c56107b9565b73ffffffffffffffffffffffffffffffffffffffff1614611124576110e8611a7f565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161111b9190611de4565b60405180910390fd5b565b600260015403611162576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b611174610750565b156111ab576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611227838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016111e0929190612673565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611a87565b505050565b60018081905550565b61123d6113bf565b6000600260006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611281611a7f565b60405161128e9190611de4565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61136461116c565b6001600260006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113a8611a7f565b6040516113b59190611de4565b60405180910390a1565b6113c7610750565b6113fd576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61147b848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016114349392919061269c565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611a87565b50505050565b600080600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000818054905011801561152f57508264ffffffffff1681600183805490506114ee919061213f565b815481106114ff576114fe6126d3565b5b90600052602060002090600691828204019190066005029054906101000a900464ffffffffff1664ffffffffff16145b1561153e576000915050611593565b808390806001815401808255809150506001900390600052602060002090600691828204019190066005029091909190916101000a81548164ffffffffff021916908364ffffffffff16021790555060019150505b92915050565b600062015180426115aa91906120cc565b90506115f98330847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166113ff909392919063ffffffff16565b600080600260159054906101000a900461ffff1661ffff1611801561166d5750600073ffffffffffffffffffffffffffffffffffffffff16600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1561171957612710600260159054906101000a900461ffff1661ffff168461169591906120fd565b61169f91906120cc565b9050600081111561171857611717600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166111ad9092919063ffffffff16565b5b5b60008184611727919061213f565b905080600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117789190612173565b9250508190555080600460008282546117919190612173565b9250508190555060006117a48685611481565b90508015611a255760008060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663950f2dae8a600560008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518363ffffffff1660e01b815260040161184a9291906124a2565b6060604051808303816000875af1158015611869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188d91906124fc565b92509250925086600660008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548164ffffffffff021916908364ffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16146119cf577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b0fb56648a846040518363ffffffff1660e01b81526004016119a292919061254f565b600060405180830381600087803b1580156119bc57600080fd5b505af19250505080156119cd575060015b505b8873ffffffffffffffffffffffffffffffffffffffff167f9b24ce28727f6853c576fdd52d3dd47b59988260937e521e19296bcf93361fa6848484604051611a1993929190612587565b60405180910390a25050505b8573ffffffffffffffffffffffffffffffffffffffff167fcb5867ada7e790a7d70414567cba30a43473fe877223b5fa637f5af7edd02e52868487604051611a6f939291906125be565b60405180910390a2505050505050565b600033905090565b600080602060008451602086016000885af180611aaa576040513d6000823e3d81fd5b3d925060005191505060008214611ac5576001811415611ae1565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b15611b2357836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611b1a9190611de4565b60405180910390fd5b50505050565b600080fd5b600061ffff82169050919050565b611b4581611b2e565b8114611b5057600080fd5b50565b600081359050611b6281611b3c565b92915050565b600060208284031215611b7e57611b7d611b29565b5b6000611b8c84828501611b53565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611bc082611b95565b9050919050565b611bd081611bb5565b8114611bdb57600080fd5b50565b600081359050611bed81611bc7565b92915050565b600060208284031215611c0957611c08611b29565b5b6000611c1784828501611bde565b91505092915050565b6000819050919050565b611c3381611c20565b82525050565b6000602082019050611c4e6000830184611c2a565b92915050565b611c5d81611c20565b8114611c6857600080fd5b50565b600081359050611c7a81611c54565b92915050565b600060208284031215611c9657611c95611b29565b5b6000611ca484828501611c6b565b91505092915050565b6000819050919050565b6000611cd2611ccd611cc884611b95565b611cad565b611b95565b9050919050565b6000611ce482611cb7565b9050919050565b6000611cf682611cd9565b9050919050565b611d0681611ceb565b82525050565b6000602082019050611d216000830184611cfd565b92915050565b6000611d3282611cd9565b9050919050565b611d4281611d27565b82525050565b6000602082019050611d5d6000830184611d39565b92915050565b6000611d6e82611cd9565b9050919050565b611d7e81611d63565b82525050565b6000602082019050611d996000830184611d75565b92915050565b60008115159050919050565b611db481611d9f565b82525050565b6000602082019050611dcf6000830184611dab565b92915050565b611dde81611bb5565b82525050565b6000602082019050611df96000830184611dd5565b92915050565b60008060408385031215611e1657611e15611b29565b5b6000611e2485828601611bde565b9250506020611e3585828601611c6b565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600064ffffffffff82169050919050565b611e8581611e6b565b82525050565b6000611e978383611e7c565b60208301905092915050565b6000602082019050919050565b6000611ebb82611e3f565b611ec58185611e4a565b9350611ed083611e5b565b8060005b83811015611f01578151611ee88882611e8b565b9750611ef383611ea3565b925050600181019050611ed4565b5085935050505092915050565b60006020820190508181036000830152611f288184611eb0565b905092915050565b611f3981611b2e565b82525050565b6000602082019050611f546000830184611f30565b92915050565b600060ff82169050919050565b611f7081611f5a565b8114611f7b57600080fd5b50565b600081359050611f8d81611f67565b92915050565b6000819050919050565b611fa681611f93565b8114611fb157600080fd5b50565b600081359050611fc381611f9d565b92915050565b600080600080600060a08688031215611fe557611fe4611b29565b5b6000611ff388828901611c6b565b955050602061200488828901611c6b565b945050604061201588828901611f7e565b935050606061202688828901611fb4565b925050608061203788828901611fb4565b9150509295509295909350565b61204d81611e6b565b82525050565b60006020820190506120686000830184612044565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006120d782611c20565b91506120e283611c20565b9250826120f2576120f161206e565b5b828204905092915050565b600061210882611c20565b915061211383611c20565b925082820261212181611c20565b915082820484148315176121385761213761209d565b5b5092915050565b600061214a82611c20565b915061215583611c20565b925082820390508181111561216d5761216c61209d565b5b92915050565b600061217e82611c20565b915061218983611c20565b92508282019050808211156121a1576121a061209d565b5b92915050565b600081549050919050565b60008190508160005260206000209050919050565b60008160001c9050919050565b600064ffffffffff82169050919050565b60006121f86121f3836121c7565b6121d4565b9050919050565b60008160281c9050919050565b600061221f61221a836121ff565b6121d4565b9050919050565b60008160501c9050919050565b600061224661224183612226565b6121d4565b9050919050565b60008160781c9050919050565b600061226d6122688361224d565b6121d4565b9050919050565b60008160a01c9050919050565b600061229461228f83612274565b6121d4565b9050919050565b60008160c81c9050919050565b60006122bb6122b68361229b565b6121d4565b9050919050565b60006122cd826121a7565b6122d78185611e4a565b9350836122e3846121b2565b60006001156123a0575b8360016006038201101561239f57815461230f8861230a836121e5565b611e7c565b602088019750612327886123228361220c565b611e7c565b60208801975061233f8861233a83612233565b611e7c565b602088019750612357886123528361225a565b611e7c565b60208801975061236f8861236a83612281565b611e7c565b60208801975061238788612382836122a8565b611e7c565b602088019750600183019250506006810190506122ed565b5b600115612495578154848210156123d0576123c3886123be836121e5565b611e7c565b6020880197506001820191505b848210156123f7576123ea886123e58361220c565b611e7c565b6020880197506001820191505b8482101561241e576124118861240c83612233565b611e7c565b6020880197506001820191505b8482101561244557612438886124338361225a565b611e7c565b6020880197506001820191505b8482101561246c5761245f8861245a83612281565b611e7c565b6020880197506001820191505b848210156124935761248688612481836122a8565b611e7c565b6020880197506001820191505b505b8694505050505092915050565b60006040820190506124b76000830185611dd5565b81810360208301526124c981846122c2565b90509392505050565b6000815190506124e181611b3c565b92915050565b6000815190506124f681611f67565b92915050565b60008060006060848603121561251557612514611b29565b5b6000612523868287016124d2565b9350506020612534868287016124d2565b9250506040612545868287016124e7565b9150509250925092565b60006040820190506125646000830185611dd5565b6125716020830184611f30565b9392505050565b61258181611f5a565b82525050565b600060608201905061259c6000830186611f30565b6125a96020830185611f30565b6125b66040830184612578565b949350505050565b60006060820190506125d36000830186611c2a565b6125e06020830185611c2a565b6125ed6040830184612044565b949350505050565b6125fe81611f93565b82525050565b600060e082019050612619600083018a611dd5565b6126266020830189611dd5565b6126336040830188611c2a565b6126406060830187611c2a565b61264d6080830186612578565b61265a60a08301856125f5565b61266760c08301846125f5565b98975050505050505050565b60006040820190506126886000830185611dd5565b6126956020830184611c2a565b9392505050565b60006060820190506126b16000830186611dd5565b6126be6020830185611dd5565b6126cb6040830184611c2a565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212208272fbfe1f5b2980e1a14d22c02a69135683c29b330a1a834f8a0b98c5cf56e864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D882097 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xB6B55F25 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0xCE84DAAD EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xD55BE8C6 EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0xD68B29FE EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3E6 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x7D882097 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95CCEA67 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x9AB1AF67 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0xAB879827 EQ PUSH2 0x326 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x3EB8104A GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x3EB8104A EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x54D9F653 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x28A JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x23B1FC9 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x1BAE91A4 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x3A2C6777 EQ PUSH2 0x1EA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F2 PUSH2 0x6D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x71A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x238 PUSH2 0x72C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH2 0x750 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1DBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x274 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH2 0x78D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29C PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH2 0x7A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C4 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x1DFF JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1F0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32E PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x901 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST PUSH2 0xE44 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x384 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST PUSH2 0xF72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST PUSH2 0xF96 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x400 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FB SWAP2 SWAP1 PUSH2 0x1BF3 JUMP JUMPDEST PUSH2 0x1019 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40A PUSH2 0x109F JUMP JUMPDEST PUSH1 0x64 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x44D JUMPI PUSH1 0x40 MLOAD PUSH32 0x2977DA4400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC8FCF8EE1425E7E60B8AF83735E1EB516D5B9EF05BFD6EECE552EBAEB7C75B48 DUP2 PUSH1 0x40 MLOAD PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x510 PUSH2 0x1126 JUMP JUMPDEST PUSH2 0x518 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x552 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5945EA5600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x5CB JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x678 DUP2 DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11AD SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6BE SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x6CF PUSH2 0x122C JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x722 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x72A PUSH2 0x1235 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x795 PUSH2 0x109F JUMP JUMPDEST PUSH2 0x79F PUSH1 0x0 PUSH2 0x1298 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7AF PUSH2 0x109F JUMP JUMPDEST PUSH2 0x7B7 PUSH2 0x135C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7EA PUSH2 0x109F JUMP JUMPDEST PUSH2 0x7F2 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x824 PUSH2 0x7FD PUSH2 0x7B9 JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11AD SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x8E1 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x5 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x4 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x8A2 JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x909 PUSH2 0x1126 JUMP JUMPDEST PUSH2 0x911 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x94B JUMPI PUSH1 0x40 MLOAD PUSH32 0x5945EA5600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH3 0x15180 TIMESTAMP PUSH2 0x961 SWAP2 SWAP1 PUSH2 0x20CC JUMP JUMPDEST SWAP1 POP PUSH2 0x9B0 DUP3 ADDRESS DUP6 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13FF SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0xA24 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xAD0 JUMPI PUSH2 0x2710 PUSH1 0x2 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP6 PUSH2 0xA4C SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH2 0xA56 SWAP2 SWAP1 PUSH2 0x20CC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xACF JUMPI PUSH2 0xACE PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11AD SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 DUP2 DUP6 PUSH2 0xADE SWAP2 SWAP1 PUSH2 0x213F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB2F SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB48 SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xB5B DUP6 DUP6 PUSH2 0x1481 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 ISZERO PUSH2 0xDDF JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x950F2DAE DUP10 PUSH1 0x5 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC01 SWAP3 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC20 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC44 SWAP2 SWAP1 PUSH2 0x24FC JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP DUP3 SWAP6 POP POP POP POP DUP7 PUSH1 0x6 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD8C JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB0FB5664 DUP10 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5F SWAP3 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD8A JUMPI POP PUSH1 0x1 JUMPDEST POP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B24CE28727F6853C576FDD52D3DD47B59988260937E521E19296BCF93361FA6 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDD6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2587 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCB5867ADA7E790A7D70414567CBA30A43473FE877223B5FA637F5AF7EDD02E52 DUP11 DUP8 DUP11 PUSH1 0x40 MLOAD PUSH2 0xE29 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP PUSH2 0xE41 PUSH2 0x122C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE4C PUSH2 0x1126 JUMP JUMPDEST PUSH2 0xE54 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x0 DUP6 SUB PUSH2 0xE8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x5945EA5600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD505ACCF CALLER ADDRESS DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF3 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2604 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF1E JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0xF54 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD0AD80100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF5E CALLER DUP7 PUSH2 0x1599 JUMP JUMPDEST PUSH2 0xF66 PUSH2 0x122C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xF9E PUSH2 0x109F JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7DAE230F18360D76A040C81F050AA14EB9D6DC7901B20FC5D855E2A20FE814D1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x100E SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1021 PUSH2 0x109F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1093 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108A SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x109C DUP2 PUSH2 0x1298 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x10A7 PUSH2 0x1A7F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10C5 PUSH2 0x7B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1124 JUMPI PUSH2 0x10E8 PUSH2 0x1A7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111B SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1162 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1174 PUSH2 0x750 JUMP JUMPDEST ISZERO PUSH2 0x11AB JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1227 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x11E0 SWAP3 SWAP2 SWAP1 PUSH2 0x2673 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1A87 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x123D PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1281 PUSH2 0x1A7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128E SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1364 PUSH2 0x116C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x13A8 PUSH2 0x1A7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B5 SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x13C7 PUSH2 0x750 JUMP JUMPDEST PUSH2 0x13FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x147B DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1434 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x269C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1A87 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 DUP1 SLOAD SWAP1 POP GT DUP1 ISZERO PUSH2 0x152F JUMPI POP DUP3 PUSH5 0xFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP4 DUP1 SLOAD SWAP1 POP PUSH2 0x14EE SWAP2 SWAP1 PUSH2 0x213F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x14FF JUMPI PUSH2 0x14FE PUSH2 0x26D3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x5 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND PUSH5 0xFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x153E JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1593 JUMP JUMPDEST DUP1 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x5 MUL SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15180 TIMESTAMP PUSH2 0x15AA SWAP2 SWAP1 PUSH2 0x20CC JUMP JUMPDEST SWAP1 POP PUSH2 0x15F9 DUP4 ADDRESS DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13FF SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x166D JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1719 JUMPI PUSH2 0x2710 PUSH1 0x2 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP5 PUSH2 0x1695 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH2 0x169F SWAP2 SWAP1 PUSH2 0x20CC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1718 JUMPI PUSH2 0x1717 PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11AD SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 DUP2 DUP5 PUSH2 0x1727 SWAP2 SWAP1 PUSH2 0x213F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1778 SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1791 SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x17A4 DUP7 DUP6 PUSH2 0x1481 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1A25 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x950F2DAE DUP11 PUSH1 0x5 PUSH1 0x0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184A SWAP3 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1869 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x188D SWAP2 SWAP1 PUSH2 0x24FC JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP7 PUSH1 0x6 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19CF JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB0FB5664 DUP11 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A2 SWAP3 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x19CD JUMPI POP PUSH1 0x1 JUMPDEST POP JUMPDEST DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B24CE28727F6853C576FDD52D3DD47B59988260937E521E19296BCF93361FA6 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1A19 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2587 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCB5867ADA7E790A7D70414567CBA30A43473FE877223B5FA637F5AF7EDD02E52 DUP7 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1A6F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x1AAA JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH1 0x0 MLOAD SWAP2 POP POP PUSH1 0x0 DUP3 EQ PUSH2 0x1AC5 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1B23 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B1A SWAP2 SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B45 DUP2 PUSH2 0x1B2E JUMP JUMPDEST DUP2 EQ PUSH2 0x1B50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B62 DUP2 PUSH2 0x1B3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B7E JUMPI PUSH2 0x1B7D PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B8C DUP5 DUP3 DUP6 ADD PUSH2 0x1B53 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC0 DUP3 PUSH2 0x1B95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD0 DUP2 PUSH2 0x1BB5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BED DUP2 PUSH2 0x1BC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C09 JUMPI PUSH2 0x1C08 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C17 DUP5 DUP3 DUP6 ADD PUSH2 0x1BDE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C33 DUP2 PUSH2 0x1C20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C4E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C5D DUP2 PUSH2 0x1C20 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C7A DUP2 PUSH2 0x1C54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C96 JUMPI PUSH2 0x1C95 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CA4 DUP5 DUP3 DUP6 ADD PUSH2 0x1C6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD2 PUSH2 0x1CCD PUSH2 0x1CC8 DUP5 PUSH2 0x1B95 JUMP JUMPDEST PUSH2 0x1CAD JUMP JUMPDEST PUSH2 0x1B95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE4 DUP3 PUSH2 0x1CB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF6 DUP3 PUSH2 0x1CD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D06 DUP2 PUSH2 0x1CEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D21 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D32 DUP3 PUSH2 0x1CD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D42 DUP2 PUSH2 0x1D27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D5D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6E DUP3 PUSH2 0x1CD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D7E DUP2 PUSH2 0x1D63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D99 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB4 DUP2 PUSH2 0x1D9F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DCF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DDE DUP2 PUSH2 0x1BB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DF9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E16 JUMPI PUSH2 0x1E15 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E24 DUP6 DUP3 DUP7 ADD PUSH2 0x1BDE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E35 DUP6 DUP3 DUP7 ADD PUSH2 0x1C6B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0xFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E85 DUP2 PUSH2 0x1E6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E97 DUP4 DUP4 PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EBB DUP3 PUSH2 0x1E3F JUMP JUMPDEST PUSH2 0x1EC5 DUP2 DUP6 PUSH2 0x1E4A JUMP JUMPDEST SWAP4 POP PUSH2 0x1ED0 DUP4 PUSH2 0x1E5B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F01 JUMPI DUP2 MLOAD PUSH2 0x1EE8 DUP9 DUP3 PUSH2 0x1E8B JUMP JUMPDEST SWAP8 POP PUSH2 0x1EF3 DUP4 PUSH2 0x1EA3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1ED4 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F28 DUP2 DUP5 PUSH2 0x1EB0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F39 DUP2 PUSH2 0x1B2E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F54 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F70 DUP2 PUSH2 0x1F5A JUMP JUMPDEST DUP2 EQ PUSH2 0x1F7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F8D DUP2 PUSH2 0x1F67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FA6 DUP2 PUSH2 0x1F93 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FC3 DUP2 PUSH2 0x1F9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1FE5 JUMPI PUSH2 0x1FE4 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FF3 DUP9 DUP3 DUP10 ADD PUSH2 0x1C6B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2004 DUP9 DUP3 DUP10 ADD PUSH2 0x1C6B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2015 DUP9 DUP3 DUP10 ADD PUSH2 0x1F7E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2026 DUP9 DUP3 DUP10 ADD PUSH2 0x1FB4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2037 DUP9 DUP3 DUP10 ADD PUSH2 0x1FB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x204D DUP2 PUSH2 0x1E6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2068 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2044 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20D7 DUP3 PUSH2 0x1C20 JUMP JUMPDEST SWAP2 POP PUSH2 0x20E2 DUP4 PUSH2 0x1C20 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x20F2 JUMPI PUSH2 0x20F1 PUSH2 0x206E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2108 DUP3 PUSH2 0x1C20 JUMP JUMPDEST SWAP2 POP PUSH2 0x2113 DUP4 PUSH2 0x1C20 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2121 DUP2 PUSH2 0x1C20 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2138 JUMPI PUSH2 0x2137 PUSH2 0x209D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x214A DUP3 PUSH2 0x1C20 JUMP JUMPDEST SWAP2 POP PUSH2 0x2155 DUP4 PUSH2 0x1C20 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x216D JUMPI PUSH2 0x216C PUSH2 0x209D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217E DUP3 PUSH2 0x1C20 JUMP JUMPDEST SWAP2 POP PUSH2 0x2189 DUP4 PUSH2 0x1C20 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x21A1 JUMPI PUSH2 0x21A0 PUSH2 0x209D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0xFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21F8 PUSH2 0x21F3 DUP4 PUSH2 0x21C7 JUMP JUMPDEST PUSH2 0x21D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x28 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221F PUSH2 0x221A DUP4 PUSH2 0x21FF JUMP JUMPDEST PUSH2 0x21D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x50 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2246 PUSH2 0x2241 DUP4 PUSH2 0x2226 JUMP JUMPDEST PUSH2 0x21D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x78 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x226D PUSH2 0x2268 DUP4 PUSH2 0x224D JUMP JUMPDEST PUSH2 0x21D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xA0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2294 PUSH2 0x228F DUP4 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x21D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xC8 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BB PUSH2 0x22B6 DUP4 PUSH2 0x229B JUMP JUMPDEST PUSH2 0x21D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22CD DUP3 PUSH2 0x21A7 JUMP JUMPDEST PUSH2 0x22D7 DUP2 DUP6 PUSH2 0x1E4A JUMP JUMPDEST SWAP4 POP DUP4 PUSH2 0x22E3 DUP5 PUSH2 0x21B2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO PUSH2 0x23A0 JUMPI JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x6 SUB DUP3 ADD LT ISZERO PUSH2 0x239F JUMPI DUP2 SLOAD PUSH2 0x230F DUP9 PUSH2 0x230A DUP4 PUSH2 0x21E5 JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH2 0x2327 DUP9 PUSH2 0x2322 DUP4 PUSH2 0x220C JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH2 0x233F DUP9 PUSH2 0x233A DUP4 PUSH2 0x2233 JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH2 0x2357 DUP9 PUSH2 0x2352 DUP4 PUSH2 0x225A JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH2 0x236F DUP9 PUSH2 0x236A DUP4 PUSH2 0x2281 JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH2 0x2387 DUP9 PUSH2 0x2382 DUP4 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH1 0x1 DUP4 ADD SWAP3 POP POP PUSH1 0x6 DUP2 ADD SWAP1 POP PUSH2 0x22ED JUMP JUMPDEST JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x2495 JUMPI DUP2 SLOAD DUP5 DUP3 LT ISZERO PUSH2 0x23D0 JUMPI PUSH2 0x23C3 DUP9 PUSH2 0x23BE DUP4 PUSH2 0x21E5 JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH1 0x1 DUP3 ADD SWAP2 POP JUMPDEST DUP5 DUP3 LT ISZERO PUSH2 0x23F7 JUMPI PUSH2 0x23EA DUP9 PUSH2 0x23E5 DUP4 PUSH2 0x220C JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH1 0x1 DUP3 ADD SWAP2 POP JUMPDEST DUP5 DUP3 LT ISZERO PUSH2 0x241E JUMPI PUSH2 0x2411 DUP9 PUSH2 0x240C DUP4 PUSH2 0x2233 JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH1 0x1 DUP3 ADD SWAP2 POP JUMPDEST DUP5 DUP3 LT ISZERO PUSH2 0x2445 JUMPI PUSH2 0x2438 DUP9 PUSH2 0x2433 DUP4 PUSH2 0x225A JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH1 0x1 DUP3 ADD SWAP2 POP JUMPDEST DUP5 DUP3 LT ISZERO PUSH2 0x246C JUMPI PUSH2 0x245F DUP9 PUSH2 0x245A DUP4 PUSH2 0x2281 JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH1 0x1 DUP3 ADD SWAP2 POP JUMPDEST DUP5 DUP3 LT ISZERO PUSH2 0x2493 JUMPI PUSH2 0x2486 DUP9 PUSH2 0x2481 DUP4 PUSH2 0x22A8 JUMP JUMPDEST PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH1 0x1 DUP3 ADD SWAP2 POP JUMPDEST POP JUMPDEST DUP7 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24B7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DD5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x24C9 DUP2 DUP5 PUSH2 0x22C2 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24E1 DUP2 PUSH2 0x1B3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x24F6 DUP2 PUSH2 0x1F67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2515 JUMPI PUSH2 0x2514 PUSH2 0x1B29 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2523 DUP7 DUP3 DUP8 ADD PUSH2 0x24D2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2534 DUP7 DUP3 DUP8 ADD PUSH2 0x24D2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2545 DUP7 DUP3 DUP8 ADD PUSH2 0x24E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2564 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0x2571 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F30 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2581 DUP2 PUSH2 0x1F5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x259C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1F30 JUMP JUMPDEST PUSH2 0x25A9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F30 JUMP JUMPDEST PUSH2 0x25B6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2578 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25D3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x25E0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x25ED PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2044 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x25FE DUP2 PUSH2 0x1F93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2619 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0x2626 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0x2633 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x2640 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x264D PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x2578 JUMP JUMPDEST PUSH2 0x265A PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x25F5 JUMP JUMPDEST PUSH2 0x2667 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x25F5 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2688 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0x2695 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C2A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26B1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0x26BE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1DD5 JUMP JUMPDEST PUSH2 0x26CB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C2A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 PUSH19 0xFBFE1F5B2980E1A14D22C02A69135683C29B33 EXP BYTE DUP4 0x4F DUP11 SIGNEXTEND SWAP9 0xC5 0xCF JUMP 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"735:9484:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9173:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8926:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1511:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7359:491;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1241:41;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1118:45;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9841:65;;;:::i;:::-;;1020:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1726:84:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1353:23:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1604:28:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9709:61;;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10069:148:28;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8663:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1435:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3038:1632;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4941:662;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;906:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1840:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9503:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9173:214:28;1531:13:0;:11;:13::i;:::-;943:3:28::1;9248:28;;:14;:28;;;9244:55;;;9285:14;;;;;;;;;;;;;;9244:55;9325:14;9309:13;;:30;;;;;;;;;;;;;;;;;;9354:26;9365:14;9354:26;;;;;;:::i;:::-;;;;;;;;9173:214:::0;:::o;8926:124::-;8992:7;9018:12;:18;9031:4;9018:18;;;;;;;;;;;;;;;:25;;;;9011:32;;8926:124;;;:::o;1511:43::-;;;;;;;;;;;;;;;;;:::o;7359:491::-;2500:21:16;:19;:21::i;:::-;1350:19:15::1;:17;:19::i;:::-;7453:1:28::2;7443:6;:11:::0;7439:44:::2;;7463:20;;;;;;;;;;;;;;7439:44;7520:6;7497:8;:20;7506:10;7497:20;;;;;;;;;;;;;;;;:29;7493:63;;;7535:21;;;;;;;;;;;;;;7493:63;7567:12;7582:10;7567:25;;7672:6;7654:8;:14;7663:4;7654:14;;;;;;;;;;;;;;;;:24;;;;;;;;;;;7709:6;7692:13;;:23;;;;;;;;;;;7771:33;7791:4;7797:6;7771;:19;;;;:33;;;;;:::i;:::-;7830:4;7820:23;;;7836:6;7820:23;;;;;;:::i;:::-;;;;;;;;7429:421;2542:20:16::0;:18;:20::i;:::-;7359:491:28;:::o;1241:41::-;;;:::o;1118:45::-;;;:::o;9841:65::-;1531:13:0;:11;:13::i;:::-;9889:10:28::1;:8;:10::i;:::-;9841:65::o:0;1020:30::-;;;:::o;1726:84:15:-;1773:4;1796:7;;;;;;;;;;;1789:14;;1726:84;:::o;1353:23:28:-;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1604:28:28:-;;;;:::o;9709:61::-;1531:13:0;:11;:13::i;:::-;9755:8:28::1;:6;:8::i;:::-;9709:61::o:0;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;10069:148:28:-;1531:13:0;:11;:13::i;:::-;1597:16:15::1;:14;:16::i;:::-;10167:43:28::2;10194:7;:5;:7::i;:::-;10203:6;10174:5;10167:26;;;;:43;;;;;:::i;:::-;10069:148:::0;;:::o;8663:124::-;8728:15;8762:12;:18;8775:4;8762:18;;;;;;;;;;;;;;;8755:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8663:124;;;:::o;1435:27::-;;;;;;;;;;;;;:::o;3038:1632::-;2500:21:16;:19;:21::i;:::-;1350:19:15::1;:17;:19::i;:::-;3131:1:28::2;3121:6;:11:::0;3117:44:::2;;3141:20;;;;;;;;;;;;;;3117:44;3172:12;3187:10;3172:25;;3207:12;3247:6;3229:15;:24;;;;:::i;:::-;3207:47;;3302:52;3326:4;3340;3347:6;3302;:23;;;;:52;;;;;;:::i;:::-;3405:11;3450:1:::0;3434:13:::2;;;;;;;;;;;:17;;;:43;;;;;3475:1;3455:22;;:8;;;;;;;;;;;:22;;;;3434:43;3430:205;;;3526:5;3509:13;;;;;;;;;;;3500:22;;:6;:22;;;;:::i;:::-;3499:32;;;;:::i;:::-;3493:38;;3555:1;3549:3;:7;3545:80;;;3576:34;3596:8;;;;;;;;;;;3606:3;3576:6;:19;;;;:34;;;;;:::i;:::-;3545:80;3430:205;3645:17;3674:3;3665:6;:12;;;;:::i;:::-;3645:32;;3733:9;3715:8;:14;3724:4;3715:14;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;3769:9;3752:13;;:26;;;;;;;:::i;:::-;;;;;;;;3848:13;3864:30;3882:4;3888:5;3864:17;:30::i;:::-;3848:46;;3955:15;3984:17:::0;4015:12:::2;4046:8;4042:565;;;4103:13;:25;;;4129:4;4135:12;:18;4148:4;4135:18;;;;;;;;;;;;;;;4103:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4070:84;;;;;;;;;;;;4190:5;4168:13;:19;4182:4;4168:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;4297:1;4265:34;;4273:11;4265:34;;;4261:268;;4323:11;:24;;;4348:4;4354:10;4323:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;4319:196:::0;4261:268:::2;4561:4;4548:48;;;4567:8;4577:10;4589:6;4548:48;;;;;;;;:::i;:::-;;;;;;;;4042:565;4632:4;4622:41;;;4638:6;4646:9;4657:5;4622:41;;;;;;;;:::i;:::-;;;;;;;;3107:1563;;;;;;;;2542:20:16::0;:18;:20::i;:::-;3038:1632:28;:::o;4941:662::-;2500:21:16;:19;:21::i;:::-;1350:19:15::1;:17;:19::i;:::-;5135:1:28::2;5125:6;:11:::0;5121:44:::2;;5145:20;;;;;;;;;;;;;;5121:44;5262:6;5241:36;;;5291:10;5323:4;5342:6;5362:8;5384:1;5399;5414;5241:184;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;5237:360;;5569:17;;;;;;;;;;;;;;5237:360;5495:35;5511:10;5523:6;5495:15;:35::i;:::-;2542:20:16::0;:18;:20::i;:::-;4941:662:28;;;;;:::o;906:40::-;943:3;906:40;:::o;1840:47::-;;;;;;;;;;;;;;;;;;;;;;:::o;9503:137::-;1531:13:0;:11;:13::i;:::-;9583:9:28::1;9572:8;;:20;;;;;;;;;;;;;;;;;;9607:26;9623:9;9607:26;;;;;;:::i;:::-;;;;;;;;9503:137:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2575:307:16:-;1899:1;2702:7;;:18;2698:86;;2743:30;;;;;;;;;;;;;;2698:86;1899:1;2858:7;:17;;;;2575:307::o;1878:128:15:-;1943:8;:6;:8::i;:::-;1939:61;;;1974:15;;;;;;;;;;;;;;1939:61;1878:128::o;1219:160:11:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2888:208:16:-;1857:1;3068:7;:21;;;;2888:208::o;2586:117:15:-;1597:16;:14;:16::i;:::-;2654:5:::1;2644:7;;:15;;;;;;;;;;;;;;;;;;2674:22;2683:12;:10;:12::i;:::-;2674:22;;;;;;:::i;:::-;;;;;;;;2586:117::o:0;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2339:115:15:-;1350:19;:17;:19::i;:::-;2408:4:::1;2398:7;;:14;;;;;;;;;;;;;;;;;;2427:20;2434:12;:10;:12::i;:::-;2427:20;;;;;;:::i;:::-;;;;;;;;2339:115::o:0;2078:126::-;2141:8;:6;:8::i;:::-;2136:62;;2172:15;;;;;;;;;;;;;;2136:62;2078:126::o;1618:188:11:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;8070:440:28:-;8145:13;8170:25;8198:12;:18;8211:4;8198:18;;;;;;;;;;;;;;;8170:46;;8320:1;8302:8;:15;;;;:19;:64;;;;;8358:8;8325:41;;:8;8352:1;8334:8;:15;;;;:19;;;;:::i;:::-;8325:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:41;;;8302:64;8298:128;;;8389:5;8382:12;;;;;8298:128;8459:8;8473;8459:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8499:4;8492:11;;;8070:440;;;;;:::o;5754:1486::-;5827:12;5867:6;5849:15;:24;;;;:::i;:::-;5827:47;;5922:52;5946:4;5960;5967:6;5922;:23;;;;:52;;;;;;:::i;:::-;6025:11;6070:1;6054:13;;;;;;;;;;;:17;;;:43;;;;;6095:1;6075:22;;:8;;;;;;;;;;;:22;;;;6054:43;6050:205;;;6146:5;6129:13;;;;;;;;;;;6120:22;;:6;:22;;;;:::i;:::-;6119:32;;;;:::i;:::-;6113:38;;6175:1;6169:3;:7;6165:80;;;6196:34;6216:8;;;;;;;;;;;6226:3;6196:6;:19;;;;:34;;;;;:::i;:::-;6165:80;6050:205;6265:17;6294:3;6285:6;:12;;;;:::i;:::-;6265:32;;6353:9;6335:8;:14;6344:4;6335:14;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;6389:9;6372:13;;:26;;;;;;;:::i;:::-;;;;;;;;6468:13;6484:30;6502:4;6508:5;6484:17;:30::i;:::-;6468:46;;6579:8;6575:602;;;6604:15;6621:17;6640:12;6673:13;:25;;;6699:4;6705:12;:18;6718:4;6705:18;;;;;;;;;;;;;;;6673:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6603:121;;;;;;6760:5;6738:13;:19;6752:4;6738:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;6867:1;6835:34;;6843:11;6835:34;;;6831:268;;6893:11;:24;;;6918:4;6924:10;6893:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6889:196;6831:268;7131:4;7118:48;;;7137:8;7147:10;7159:6;7118:48;;;;;;;;:::i;:::-;;;;;;;;6589:588;;;6575:602;7202:4;7192:41;;;7208:6;7216:9;7227:5;7192:41;;;;;;;;:::i;:::-;;;;;;;;5817:1423;;;;5754:1486;;:::o;656:96:12:-;709:7;735:10;728:17;;656:96;:::o;8370:720:11:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;88:117:34:-;197:1;194;187:12;334:89;370:7;410:6;403:5;399:18;388:29;;334:89;;;:::o;429:120::-;501:23;518:5;501:23;:::i;:::-;494:5;491:34;481:62;;539:1;536;529:12;481:62;429:120;:::o;555:137::-;600:5;638:6;625:20;616:29;;654:32;680:5;654:32;:::i;:::-;555:137;;;;:::o;698:327::-;756:6;805:2;793:9;784:7;780:23;776:32;773:119;;;811:79;;:::i;:::-;773:119;931:1;956:52;1000:7;991:6;980:9;976:22;956:52;:::i;:::-;946:62;;902:116;698:327;;;;:::o;1031:126::-;1068:7;1108:42;1101:5;1097:54;1086:65;;1031:126;;;:::o;1163:96::-;1200:7;1229:24;1247:5;1229:24;:::i;:::-;1218:35;;1163:96;;;:::o;1265:122::-;1338:24;1356:5;1338:24;:::i;:::-;1331:5;1328:35;1318:63;;1377:1;1374;1367:12;1318:63;1265:122;:::o;1393:139::-;1439:5;1477:6;1464:20;1455:29;;1493:33;1520:5;1493:33;:::i;:::-;1393:139;;;;:::o;1538:329::-;1597:6;1646:2;1634:9;1625:7;1621:23;1617:32;1614:119;;;1652:79;;:::i;:::-;1614:119;1772:1;1797:53;1842:7;1833:6;1822:9;1818:22;1797:53;:::i;:::-;1787:63;;1743:117;1538:329;;;;:::o;1873:77::-;1910:7;1939:5;1928:16;;1873:77;;;:::o;1956:118::-;2043:24;2061:5;2043:24;:::i;:::-;2038:3;2031:37;1956:118;;:::o;2080:222::-;2173:4;2211:2;2200:9;2196:18;2188:26;;2224:71;2292:1;2281:9;2277:17;2268:6;2224:71;:::i;:::-;2080:222;;;;:::o;2308:122::-;2381:24;2399:5;2381:24;:::i;:::-;2374:5;2371:35;2361:63;;2420:1;2417;2410:12;2361:63;2308:122;:::o;2436:139::-;2482:5;2520:6;2507:20;2498:29;;2536:33;2563:5;2536:33;:::i;:::-;2436:139;;;;:::o;2581:329::-;2640:6;2689:2;2677:9;2668:7;2664:23;2660:32;2657:119;;;2695:79;;:::i;:::-;2657:119;2815:1;2840:53;2885:7;2876:6;2865:9;2861:22;2840:53;:::i;:::-;2830:63;;2786:117;2581:329;;;;:::o;2916:60::-;2944:3;2965:5;2958:12;;2916:60;;;:::o;2982:142::-;3032:9;3065:53;3083:34;3092:24;3110:5;3092:24;:::i;:::-;3083:34;:::i;:::-;3065:53;:::i;:::-;3052:66;;2982:142;;;:::o;3130:126::-;3180:9;3213:37;3244:5;3213:37;:::i;:::-;3200:50;;3130:126;;;:::o;3262:147::-;3333:9;3366:37;3397:5;3366:37;:::i;:::-;3353:50;;3262:147;;;:::o;3415:173::-;3523:58;3575:5;3523:58;:::i;:::-;3518:3;3511:71;3415:173;;:::o;3594:264::-;3708:4;3746:2;3735:9;3731:18;3723:26;;3759:92;3848:1;3837:9;3833:17;3824:6;3759:92;:::i;:::-;3594:264;;;;:::o;3864:149::-;3937:9;3970:37;4001:5;3970:37;:::i;:::-;3957:50;;3864:149;;;:::o;4019:177::-;4129:60;4183:5;4129:60;:::i;:::-;4124:3;4117:73;4019:177;;:::o;4202:268::-;4318:4;4356:2;4345:9;4341:18;4333:26;;4369:94;4460:1;4449:9;4445:17;4436:6;4369:94;:::i;:::-;4202:268;;;;:::o;4476:140::-;4540:9;4573:37;4604:5;4573:37;:::i;:::-;4560:50;;4476:140;;;:::o;4622:159::-;4723:51;4768:5;4723:51;:::i;:::-;4718:3;4711:64;4622:159;;:::o;4787:250::-;4894:4;4932:2;4921:9;4917:18;4909:26;;4945:85;5027:1;5016:9;5012:17;5003:6;4945:85;:::i;:::-;4787:250;;;;:::o;5043:90::-;5077:7;5120:5;5113:13;5106:21;5095:32;;5043:90;;;:::o;5139:109::-;5220:21;5235:5;5220:21;:::i;:::-;5215:3;5208:34;5139:109;;:::o;5254:210::-;5341:4;5379:2;5368:9;5364:18;5356:26;;5392:65;5454:1;5443:9;5439:17;5430:6;5392:65;:::i;:::-;5254:210;;;;:::o;5470:118::-;5557:24;5575:5;5557:24;:::i;:::-;5552:3;5545:37;5470:118;;:::o;5594:222::-;5687:4;5725:2;5714:9;5710:18;5702:26;;5738:71;5806:1;5795:9;5791:17;5782:6;5738:71;:::i;:::-;5594:222;;;;:::o;5822:474::-;5890:6;5898;5947:2;5935:9;5926:7;5922:23;5918:32;5915:119;;;5953:79;;:::i;:::-;5915:119;6073:1;6098:53;6143:7;6134:6;6123:9;6119:22;6098:53;:::i;:::-;6088:63;;6044:117;6200:2;6226:53;6271:7;6262:6;6251:9;6247:22;6226:53;:::i;:::-;6216:63;;6171:118;5822:474;;;;;:::o;6302:113::-;6368:6;6402:5;6396:12;6386:22;;6302:113;;;:::o;6421:183::-;6519:11;6553:6;6548:3;6541:19;6593:4;6588:3;6584:14;6569:29;;6421:183;;;;:::o;6610:131::-;6676:4;6699:3;6691:11;;6729:4;6724:3;6720:14;6712:22;;6610:131;;;:::o;6747:95::-;6783:7;6823:12;6816:5;6812:24;6801:35;;6747:95;;;:::o;6848:105::-;6923:23;6940:5;6923:23;:::i;:::-;6918:3;6911:36;6848:105;;:::o;6959:175::-;7026:10;7047:44;7087:3;7079:6;7047:44;:::i;:::-;7123:4;7118:3;7114:14;7100:28;;6959:175;;;;:::o;7140:112::-;7209:4;7241;7236:3;7232:14;7224:22;;7140:112;;;:::o;7286:724::-;7403:3;7432:53;7479:5;7432:53;:::i;:::-;7501:85;7579:6;7574:3;7501:85;:::i;:::-;7494:92;;7610:55;7659:5;7610:55;:::i;:::-;7688:7;7719:1;7704:281;7729:6;7726:1;7723:13;7704:281;;;7805:6;7799:13;7832:61;7889:3;7874:13;7832:61;:::i;:::-;7825:68;;7916:59;7968:6;7916:59;:::i;:::-;7906:69;;7764:221;7751:1;7748;7744:9;7739:14;;7704:281;;;7708:14;8001:3;7994:10;;7408:602;;;7286:724;;;;:::o;8016:369::-;8157:4;8195:2;8184:9;8180:18;8172:26;;8244:9;8238:4;8234:20;8230:1;8219:9;8215:17;8208:47;8272:106;8373:4;8364:6;8272:106;:::i;:::-;8264:114;;8016:369;;;;:::o;8391:115::-;8476:23;8493:5;8476:23;:::i;:::-;8471:3;8464:36;8391:115;;:::o;8512:218::-;8603:4;8641:2;8630:9;8626:18;8618:26;;8654:69;8720:1;8709:9;8705:17;8696:6;8654:69;:::i;:::-;8512:218;;;;:::o;8736:86::-;8771:7;8811:4;8804:5;8800:16;8789:27;;8736:86;;;:::o;8828:118::-;8899:22;8915:5;8899:22;:::i;:::-;8892:5;8889:33;8879:61;;8936:1;8933;8926:12;8879:61;8828:118;:::o;8952:135::-;8996:5;9034:6;9021:20;9012:29;;9050:31;9075:5;9050:31;:::i;:::-;8952:135;;;;:::o;9093:77::-;9130:7;9159:5;9148:16;;9093:77;;;:::o;9176:122::-;9249:24;9267:5;9249:24;:::i;:::-;9242:5;9239:35;9229:63;;9288:1;9285;9278:12;9229:63;9176:122;:::o;9304:139::-;9350:5;9388:6;9375:20;9366:29;;9404:33;9431:5;9404:33;:::i;:::-;9304:139;;;;:::o;9449:907::-;9542:6;9550;9558;9566;9574;9623:3;9611:9;9602:7;9598:23;9594:33;9591:120;;;9630:79;;:::i;:::-;9591:120;9750:1;9775:53;9820:7;9811:6;9800:9;9796:22;9775:53;:::i;:::-;9765:63;;9721:117;9877:2;9903:53;9948:7;9939:6;9928:9;9924:22;9903:53;:::i;:::-;9893:63;;9848:118;10005:2;10031:51;10074:7;10065:6;10054:9;10050:22;10031:51;:::i;:::-;10021:61;;9976:116;10131:2;10157:53;10202:7;10193:6;10182:9;10178:22;10157:53;:::i;:::-;10147:63;;10102:118;10259:3;10286:53;10331:7;10322:6;10311:9;10307:22;10286:53;:::i;:::-;10276:63;;10230:119;9449:907;;;;;;;;:::o;10362:115::-;10447:23;10464:5;10447:23;:::i;:::-;10442:3;10435:36;10362:115;;:::o;10483:218::-;10574:4;10612:2;10601:9;10597:18;10589:26;;10625:69;10691:1;10680:9;10676:17;10667:6;10625:69;:::i;:::-;10483:218;;;;:::o;10707:180::-;10755:77;10752:1;10745:88;10852:4;10849:1;10842:15;10876:4;10873:1;10866:15;10893:180;10941:77;10938:1;10931:88;11038:4;11035:1;11028:15;11062:4;11059:1;11052:15;11079:185;11119:1;11136:20;11154:1;11136:20;:::i;:::-;11131:25;;11170:20;11188:1;11170:20;:::i;:::-;11165:25;;11209:1;11199:35;;11214:18;;:::i;:::-;11199:35;11256:1;11253;11249:9;11244:14;;11079:185;;;;:::o;11270:410::-;11310:7;11333:20;11351:1;11333:20;:::i;:::-;11328:25;;11367:20;11385:1;11367:20;:::i;:::-;11362:25;;11422:1;11419;11415:9;11444:30;11462:11;11444:30;:::i;:::-;11433:41;;11623:1;11614:7;11610:15;11607:1;11604:22;11584:1;11577:9;11557:83;11534:139;;11653:18;;:::i;:::-;11534:139;11318:362;11270:410;;;;:::o;11686:194::-;11726:4;11746:20;11764:1;11746:20;:::i;:::-;11741:25;;11780:20;11798:1;11780:20;:::i;:::-;11775:25;;11824:1;11821;11817:9;11809:17;;11848:1;11842:4;11839:11;11836:37;;;11853:18;;:::i;:::-;11836:37;11686:194;;;;:::o;11886:191::-;11926:3;11945:20;11963:1;11945:20;:::i;:::-;11940:25;;11979:20;11997:1;11979:20;:::i;:::-;11974:25;;12022:1;12019;12015:9;12008:16;;12043:3;12040:1;12037:10;12034:36;;;12050:18;;:::i;:::-;12034:36;11886:191;;;;:::o;12083:110::-;12146:6;12180:5;12174:12;12164:22;;12083:110;;;:::o;12199:155::-;12262:4;12285:3;12277:11;;12308:3;12305:1;12298:14;12342:4;12339:1;12329:18;12321:26;;12199:155;;;:::o;12360:102::-;12402:8;12449:5;12446:1;12442:13;12421:34;;12360:102;;;:::o;12468:108::-;12517:7;12557:12;12550:5;12546:24;12535:35;;12468:108;;;:::o;12582:164::-;12650:5;12675:65;12705:34;12728:10;12705:34;:::i;:::-;12675:65;:::i;:::-;12666:74;;12582:164;;;:::o;12752:104::-;12795:8;12843:5;12839:2;12835:14;12814:35;;12752:104;;;:::o;12862:165::-;12930:5;12955:66;12985:35;13009:10;12985:35;:::i;:::-;12955:66;:::i;:::-;12946:75;;12862:165;;;:::o;13033:104::-;13076:8;13124:5;13120:2;13116:14;13095:35;;13033:104;;;:::o;13143:166::-;13212:5;13237:66;13267:35;13291:10;13267:35;:::i;:::-;13237:66;:::i;:::-;13228:75;;13143:166;;;:::o;13315:106::-;13359:8;13408:5;13403:3;13399:15;13378:36;;13315:106;;;:::o;13427:167::-;13496:5;13521:67;13551:36;13576:10;13551:36;:::i;:::-;13521:67;:::i;:::-;13512:76;;13427:167;;;:::o;13600:106::-;13644:8;13693:5;13688:3;13684:15;13663:36;;13600:106;;;:::o;13712:167::-;13781:5;13806:67;13836:36;13861:10;13836:36;:::i;:::-;13806:67;:::i;:::-;13797:76;;13712:167;;;:::o;13885:106::-;13929:8;13978:5;13973:3;13969:15;13948:36;;13885:106;;;:::o;13997:167::-;14066:5;14091:67;14121:36;14146:10;14121:36;:::i;:::-;14091:67;:::i;:::-;14082:76;;13997:167;;;:::o;14198:3239::-;14312:3;14341:50;14385:5;14341:50;:::i;:::-;14407:85;14485:6;14480:3;14407:85;:::i;:::-;14400:92;;14520:3;14546:52;14592:5;14546:52;:::i;:::-;14626:1;14639;14636:1149;;;14703:1072;14743:6;14738:1;14735;14731:9;14718:11;14714:27;14711:39;14703:1072;;;14850:6;14844:13;14875:87;14958:3;14907:49;14951:4;14907:49;:::i;:::-;14875:87;:::i;:::-;14995:4;14990:3;14986:14;14979:21;;15018:87;15101:3;15050:49;15094:4;15050:49;:::i;:::-;15018:87;:::i;:::-;15138:4;15133:3;15129:14;15122:21;;15161:88;15245:3;15193:50;15238:4;15193:50;:::i;:::-;15161:88;:::i;:::-;15282:4;15277:3;15273:14;15266:21;;15305:88;15389:3;15337:50;15382:4;15337:50;:::i;:::-;15305:88;:::i;:::-;15426:4;15421:3;15417:14;15410:21;;15449:88;15533:3;15481:50;15526:4;15481:50;:::i;:::-;15449:88;:::i;:::-;15570:4;15565:3;15561:14;15554:21;;15593:88;15677:3;15625:50;15670:4;15625:50;:::i;:::-;15593:88;:::i;:::-;15714:4;15709:3;15705:14;15698:21;;15759:1;15751:6;15747:14;15737:24;;14814:961;14797:1;14784:11;14780:19;14765:34;;14703:1072;;;14636:1149;15862:1;15859:1553;;;15896:6;15890:13;15936:6;15923:11;15920:23;15917:235;;;15962:87;16045:3;15994:49;16038:4;15994:49;:::i;:::-;15962:87;:::i;:::-;16082:4;16077:3;16073:14;16066:21;;16136:1;16123:11;16119:19;16104:34;;15917:235;16185:6;16172:11;16169:23;16166:235;;;16211:87;16294:3;16243:49;16287:4;16243:49;:::i;:::-;16211:87;:::i;:::-;16331:4;16326:3;16322:14;16315:21;;16385:1;16372:11;16368:19;16353:34;;16166:235;16434:6;16421:11;16418:23;16415:236;;;16460:88;16544:3;16492:50;16537:4;16492:50;:::i;:::-;16460:88;:::i;:::-;16581:4;16576:3;16572:14;16565:21;;16635:1;16622:11;16618:19;16603:34;;16415:236;16684:6;16671:11;16668:23;16665:236;;;16710:88;16794:3;16742:50;16787:4;16742:50;:::i;:::-;16710:88;:::i;:::-;16831:4;16826:3;16822:14;16815:21;;16885:1;16872:11;16868:19;16853:34;;16665:236;16934:6;16921:11;16918:23;16915:236;;;16960:88;17044:3;16992:50;17037:4;16992:50;:::i;:::-;16960:88;:::i;:::-;17081:4;17076:3;17072:14;17065:21;;17135:1;17122:11;17118:19;17103:34;;16915:236;17184:6;17171:11;17168:23;17165:236;;;17210:88;17294:3;17242:50;17287:4;17242:50;:::i;:::-;17210:88;:::i;:::-;17331:4;17326:3;17322:14;17315:21;;17385:1;17372:11;17368:19;17353:34;;17165:236;15864:1548;15859:1553;17428:3;17421:10;;14317:3120;;;;14198:3239;;;;:::o;17443:473::-;17609:4;17647:2;17636:9;17632:18;17624:26;;17660:71;17728:1;17717:9;17713:17;17704:6;17660:71;:::i;:::-;17778:9;17772:4;17768:20;17763:2;17752:9;17748:18;17741:48;17806:103;17904:4;17895:6;17806:103;:::i;:::-;17798:111;;17443:473;;;;;:::o;17922:141::-;17978:5;18009:6;18003:13;17994:22;;18025:32;18051:5;18025:32;:::i;:::-;17922:141;;;;:::o;18069:139::-;18124:5;18155:6;18149:13;18140:22;;18171:31;18196:5;18171:31;:::i;:::-;18069:139;;;;:::o;18214:655::-;18298:6;18306;18314;18363:2;18351:9;18342:7;18338:23;18334:32;18331:119;;;18369:79;;:::i;:::-;18331:119;18489:1;18514:63;18569:7;18560:6;18549:9;18545:22;18514:63;:::i;:::-;18504:73;;18460:127;18626:2;18652:63;18707:7;18698:6;18687:9;18683:22;18652:63;:::i;:::-;18642:73;;18597:128;18764:2;18790:62;18844:7;18835:6;18824:9;18820:22;18790:62;:::i;:::-;18780:72;;18735:127;18214:655;;;;;:::o;18875:328::-;18994:4;19032:2;19021:9;19017:18;19009:26;;19045:71;19113:1;19102:9;19098:17;19089:6;19045:71;:::i;:::-;19126:70;19192:2;19181:9;19177:18;19168:6;19126:70;:::i;:::-;18875:328;;;;;:::o;19209:112::-;19292:22;19308:5;19292:22;:::i;:::-;19287:3;19280:35;19209:112;;:::o;19327:426::-;19468:4;19506:2;19495:9;19491:18;19483:26;;19519:69;19585:1;19574:9;19570:17;19561:6;19519:69;:::i;:::-;19598:70;19664:2;19653:9;19649:18;19640:6;19598:70;:::i;:::-;19678:68;19742:2;19731:9;19727:18;19718:6;19678:68;:::i;:::-;19327:426;;;;;;:::o;19759:438::-;19906:4;19944:2;19933:9;19929:18;19921:26;;19957:71;20025:1;20014:9;20010:17;20001:6;19957:71;:::i;:::-;20038:72;20106:2;20095:9;20091:18;20082:6;20038:72;:::i;:::-;20120:70;20186:2;20175:9;20171:18;20162:6;20120:70;:::i;:::-;19759:438;;;;;;:::o;20203:118::-;20290:24;20308:5;20290:24;:::i;:::-;20285:3;20278:37;20203:118;;:::o;20327:878::-;20584:4;20622:3;20611:9;20607:19;20599:27;;20636:71;20704:1;20693:9;20689:17;20680:6;20636:71;:::i;:::-;20717:72;20785:2;20774:9;20770:18;20761:6;20717:72;:::i;:::-;20799;20867:2;20856:9;20852:18;20843:6;20799:72;:::i;:::-;20881;20949:2;20938:9;20934:18;20925:6;20881:72;:::i;:::-;20963:69;21027:3;21016:9;21012:19;21003:6;20963:69;:::i;:::-;21042:73;21110:3;21099:9;21095:19;21086:6;21042:73;:::i;:::-;21125;21193:3;21182:9;21178:19;21169:6;21125:73;:::i;:::-;20327:878;;;;;;;;;;:::o;21211:332::-;21332:4;21370:2;21359:9;21355:18;21347:26;;21383:71;21451:1;21440:9;21436:17;21427:6;21383:71;:::i;:::-;21464:72;21532:2;21521:9;21517:18;21508:6;21464:72;:::i;:::-;21211:332;;;;;:::o;21549:442::-;21698:4;21736:2;21725:9;21721:18;21713:26;;21749:71;21817:1;21806:9;21802:17;21793:6;21749:71;:::i;:::-;21830:72;21898:2;21887:9;21883:18;21874:6;21830:72;:::i;:::-;21912;21980:2;21969:9;21965:18;21956:6;21912:72;:::i;:::-;21549:442;;;;;;:::o;21997:180::-;22045:77;22042:1;22035:88;22142:4;22139:1;22132:15;22166:4;22163:1;22156:15"},"methodIdentifiers":{"MAX_FEE_BPS()":"d55be8c6","STABLE()":"54d9f653","balances(address)":"27e235e3","deposit(uint256)":"b6b55f25","depositFeeBps()":"ab879827","emergencyWithdraw(address,uint256)":"95ccea67","getUserDepositCount(address)":"1bae91a4","getUserDepositDays(address)":"9ab1af67","lastScoredDay(address)":"d68b29fe","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","permitDeposit(uint256,uint256,uint8,bytes32,bytes32)":"ce84daad","renounceOwnership()":"715018a6","rewardVault()":"3a2c6777","scoreRegistry()":"3eb8104a","setFeeBps(uint16)":"023b1fc9","setTreasury(address)":"f0f44260","totalDeposits()":"7d882097","transferOwnership(address)":"f2fde38b","treasury()":"61d027b3","unpause()":"3f4ba83a","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stablecoin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_scoreRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_depositFeeBps\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExcessiveFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoPermitSupport\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"netAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint40\",\"name\":\"dayIndex\",\"type\":\"uint40\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"depositFeeBps\",\"type\":\"uint16\"}],\"name\":\"FeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newScore\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"streakDays\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"freq30\",\"type\":\"uint8\"}],\"name\":\"ScoreUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_FEE_BPS\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STABLE\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositFeeBps\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserDepositCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserDepositDays\",\"outputs\":[{\"internalType\":\"uint40[]\",\"name\":\"\",\"type\":\"uint40[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastScoredDay\",\"outputs\":[{\"internalType\":\"uint40\",\"name\":\"\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permitDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardVault\",\"outputs\":[{\"internalType\":\"contract IRewardVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scoreRegistry\",\"outputs\":[{\"internalType\":\"contract IScoreRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_depositFeeBps\",\"type\":\"uint16\"}],\"name\":\"setFeeBps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Integrates with ScoreRegistry for SCS tracking and RewardVault for points\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_depositFeeBps\":\"Initial deposit fee in basis points\",\"_owner\":\"Address of the contract owner\",\"_rewardVault\":\"Address of the reward vault (can be zero)\",\"_scoreRegistry\":\"Address of the score registry\",\"_stablecoin\":\"Address of the stablecoin token\",\"_treasury\":\"Address of the treasury (can be zero)\"}},\"deposit(uint256)\":{\"params\":{\"amount\":\"Amount to deposit\"}},\"emergencyWithdraw(address,uint256)\":{\"params\":{\"amount\":\"Amount to withdraw\",\"token\":\"Token to withdraw\"}},\"getUserDepositCount(address)\":{\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"Number of unique deposit days\"}},\"getUserDepositDays(address)\":{\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"Array of deposit day indices\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permitDeposit(uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amount\":\"Amount to deposit\",\"deadline\":\"Permit deadline\",\"r\":\"Signature parameter\",\"s\":\"Signature parameter\",\"v\":\"Signature parameter\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setFeeBps(uint16)\":{\"params\":{\"_depositFeeBps\":\"Fee in basis points (0-100)\"}},\"setTreasury(address)\":{\"params\":{\"_treasury\":\"New treasury address\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256)\":{\"params\":{\"amount\":\"Amount to withdraw\"}}},\"title\":\"SavingsPool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"MAX_FEE_BPS()\":{\"notice\":\"Maximum fee in basis points (1% = 100 bps)\"},\"STABLE()\":{\"notice\":\"The stablecoin token used for deposits/withdrawals\"},\"balances(address)\":{\"notice\":\"User balances in the pool\"},\"constructor\":{\"notice\":\"Constructor\"},\"deposit(uint256)\":{\"notice\":\"Deposit stablecoin into the savings pool\"},\"depositFeeBps()\":{\"notice\":\"Deposit fee in basis points (0-100)\"},\"emergencyWithdraw(address,uint256)\":{\"notice\":\"Emergency withdraw for owner (only when paused)\"},\"getUserDepositCount(address)\":{\"notice\":\"Get user's deposit count\"},\"getUserDepositDays(address)\":{\"notice\":\"Get user's deposit days (view function)\"},\"lastScoredDay(address)\":{\"notice\":\"Last scored day for each user (for edge case handling)\"},\"pause()\":{\"notice\":\"Pause the contract (only owner)\"},\"permitDeposit(uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Deposit with EIP-2612 permit (gasless approval)\"},\"rewardVault()\":{\"notice\":\"Reward vault contract for points (can be zero address)\"},\"scoreRegistry()\":{\"notice\":\"Score registry contract for SCS calculations\"},\"setFeeBps(uint16)\":{\"notice\":\"Set deposit fee (only owner)\"},\"setTreasury(address)\":{\"notice\":\"Set treasury address (only owner)\"},\"totalDeposits()\":{\"notice\":\"Total deposits in the pool\"},\"treasury()\":{\"notice\":\"Treasury address for fees (can be zero address)\"},\"unpause()\":{\"notice\":\"Unpause the contract (only owner)\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw stablecoin from the savings pool\"}},\"notice\":\"Core MicroSave savings pool for stablecoin deposits and withdrawals\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SavingsPool.sol\":\"SavingsPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/SavingsPool.sol\":{\"keccak256\":\"0xe95c252475a8d59f2a47dbcd49cdd2d276349327a974f835777b72e4ff17a758\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22b93b676875016e12c6ed3b90525015f7a819158679df5b6dc200510918604e\",\"dweb:/ipfs/QmNtoZh5zUiohm7iDFZntpoXqzHe71tVfXnjCk4EZwhGz3\"]},\"contracts/interfaces/IRewardVault.sol\":{\"keccak256\":\"0xf38aab45dab48b7c7a79ff54afae0771a703e8199347b1c2ddff2526d00ea361\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ff2de5e6672df5a16e2fab2ae0f76043b5554748eafda9ea4a7fa0217fb911c\",\"dweb:/ipfs/QmZ7cN77QSpQUMZK83DMaY1FcLt5QPGfJfPsU7zcDSnM2y\"]},\"contracts/interfaces/ISavingsPool.sol\":{\"keccak256\":\"0xe85b4dbc8d88412ba415e944e59611c8ca20e5991c20eb87e5681aa029b0db1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c7e1f0f66f7b519e6e22e7288c0ad9b9e4308e9bab7e9e3e08087d677741229\",\"dweb:/ipfs/QmUA6zMD4kKR4yHAtMwgU4LJEsfF9AsjgBU6R5ZGHATpsU\"]},\"contracts/interfaces/IScoreRegistry.sol\":{\"keccak256\":\"0xbc63b9cfedf632c4e4b9ab8e0a0440381c46618ffd21b3c559fd0044883992fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2976f49c5f4f2a441442e392be12772f84901f0948c3dcf5ed6f8eb6fe86e110\",\"dweb:/ipfs/QmVAvfwQ5xv2PwLfRGPrU9DEAKzUBY8fVa7zLmZ6Un86n3\"]}},\"version\":1}"}},"contracts/ScoreRegistry.sol":{"ScoreRegistry":{"abi":[{"inputs":[{"internalType":"address","name":"_savingsPool","type":"address"},{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidUser","type":"error"},{"inputs":[],"name":"OnlyPool","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint16","name":"score","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"streak","type":"uint16"},{"indexed":false,"internalType":"uint8","name":"freq30","type":"uint8"}],"name":"ScoreSet","type":"event"},{"inputs":[],"name":"FREQ_WINDOW","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GRACE_PERIOD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_SCORE","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getUserFreq30","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserScore","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserStats","outputs":[{"internalType":"uint16","name":"userScore","type":"uint16"},{"internalType":"uint16","name":"userStreak","type":"uint16"},{"internalType":"uint8","name":"freq30","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserStreak","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lastScoredDay","outputs":[{"internalType":"uint40","name":"","type":"uint40"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"savingsPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"score","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"streakDays","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint40[]","name":"userDaysFromPool","type":"uint40[]"}],"name":"updateScore","outputs":[{"internalType":"uint16","name":"newScore","type":"uint16"},{"internalType":"uint16","name":"newStreak","type":"uint16"},{"internalType":"uint8","name":"freq30","type":"uint8"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8926":{"entryPoint":null,"id":8926,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":354,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":633,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":656,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":727,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":744,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":587,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":555,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":550,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":607,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1707:34","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:34","statements":[{"nodeType":"YulAssignment","src":"57:19:34","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:34","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:34"},"nodeType":"YulFunctionCall","src":"67:9:34"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:34"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:34","type":""}],"src":"7:75:34"},{"body":{"nodeType":"YulBlock","src":"177:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:34"},"nodeType":"YulFunctionCall","src":"187:12:34"},"nodeType":"YulExpressionStatement","src":"187:12:34"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:34"},{"body":{"nodeType":"YulBlock","src":"300:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:34"},"nodeType":"YulFunctionCall","src":"310:12:34"},"nodeType":"YulExpressionStatement","src":"310:12:34"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:34"},{"body":{"nodeType":"YulBlock","src":"379:81:34","statements":[{"nodeType":"YulAssignment","src":"389:65:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:34"},"nodeType":"YulFunctionCall","src":"400:54:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:34"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:34","type":""}],"src":"334:126:34"},{"body":{"nodeType":"YulBlock","src":"511:51:34","statements":[{"nodeType":"YulAssignment","src":"521:35:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:34"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:34"},"nodeType":"YulFunctionCall","src":"532:24:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:34"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:34","type":""}],"src":"466:96:34"},{"body":{"nodeType":"YulBlock","src":"611:79:34","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:34"},"nodeType":"YulFunctionCall","src":"670:12:34"},"nodeType":"YulExpressionStatement","src":"670:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:34"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:34"},"nodeType":"YulFunctionCall","src":"641:24:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:34"},"nodeType":"YulFunctionCall","src":"631:35:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:34"},"nodeType":"YulFunctionCall","src":"624:43:34"},"nodeType":"YulIf","src":"621:63:34"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:34","type":""}],"src":"568:122:34"},{"body":{"nodeType":"YulBlock","src":"759:80:34","statements":[{"nodeType":"YulAssignment","src":"769:22:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:34"},"nodeType":"YulFunctionCall","src":"778:13:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:34"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:34"},"nodeType":"YulFunctionCall","src":"800:33:34"},"nodeType":"YulExpressionStatement","src":"800:33:34"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:34","type":""}],"src":"696:143:34"},{"body":{"nodeType":"YulBlock","src":"939:413:34","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:34"},"nodeType":"YulFunctionCall","src":"987:79:34"},"nodeType":"YulExpressionStatement","src":"987:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:34"},"nodeType":"YulFunctionCall","src":"956:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:34","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:34"},"nodeType":"YulFunctionCall","src":"952:32:34"},"nodeType":"YulIf","src":"949:119:34"},{"nodeType":"YulBlock","src":"1078:128:34","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:34","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:34"},"nodeType":"YulFunctionCall","src":"1164:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:34"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:34"},"nodeType":"YulFunctionCall","src":"1132:64:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:34"}]}]},{"nodeType":"YulBlock","src":"1216:129:34","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:34","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:34","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:34"},"nodeType":"YulFunctionCall","src":"1303:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:34"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:34"},"nodeType":"YulFunctionCall","src":"1271:64:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:34"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:34","type":""}],"src":"845:507:34"},{"body":{"nodeType":"YulBlock","src":"1423:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1440:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1463:5:34"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1445:17:34"},"nodeType":"YulFunctionCall","src":"1445:24:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1433:6:34"},"nodeType":"YulFunctionCall","src":"1433:37:34"},"nodeType":"YulExpressionStatement","src":"1433:37:34"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1411:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1418:3:34","type":""}],"src":"1358:118:34"},{"body":{"nodeType":"YulBlock","src":"1580:124:34","statements":[{"nodeType":"YulAssignment","src":"1590:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1602:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1613:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1598:3:34"},"nodeType":"YulFunctionCall","src":"1598:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1590:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1670:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1683:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1694:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1679:3:34"},"nodeType":"YulFunctionCall","src":"1679:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1626:43:34"},"nodeType":"YulFunctionCall","src":"1626:71:34"},"nodeType":"YulExpressionStatement","src":"1626:71:34"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1552:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1564:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1575:4:34","type":""}],"src":"1482:222:34"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":34,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523480156200001157600080fd5b50604051620015ab380380620015ab833981810160405281019062000037919062000290565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a49190620002e8565b60405180910390fd5b620000be816200016260201b60201c565b50600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000126576040517ffd684c3b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050505062000305565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000258826200022b565b9050919050565b6200026a816200024b565b81146200027657600080fd5b50565b6000815190506200028a816200025f565b92915050565b60008060408385031215620002aa57620002a962000226565b5b6000620002ba8582860162000279565b9250506020620002cd8582860162000279565b9150509250929050565b620002e2816200024b565b82525050565b6000602082019050620002ff6000830184620002d7565b92915050565b60805161128362000328600039600081816103ff01526104a701526112836000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806378df39a711610097578063c1a287e211610066578063c1a287e2146102a0578063c57f2dfd146102be578063d68b29fe146102ee578063f2fde38b1461031e576100f5565b806378df39a7146101f05780638da5cb5b14610220578063950f2dae1461023e578063b34e0c4714610270576100f5565b80634e43603a116100d35780634e43603a146101665780636fa0e65314610198578063715018a6146101b6578063776f3843146101c0576100f5565b806327ff6223146100fa57806348fecad2146101185780634a9359da14610136575b600080fd5b61010261033a565b60405161010f9190610ca7565b60405180910390f35b61012061033f565b60405161012d9190610cdb565b60405180910390f35b610150600480360381019061014b9190610d5e565b610346565b60405161015d9190610da7565b60405180910390f35b610180600480360381019061017b9190610d5e565b61034d565b60405161018f93929190610dc2565b60405180910390f35b6101a06103fd565b6040516101ad9190610e08565b60405180910390f35b6101be610421565b005b6101da60048036038101906101d59190610d5e565b610435565b6040516101e79190610ca7565b60405180910390f35b61020a60048036038101906102059190610d5e565b610456565b6040516102179190610ca7565b60405180910390f35b610228610477565b6040516102359190610e08565b60405180910390f35b61025860048036038101906102539190610e88565b6104a0565b60405161026793929190610dc2565b60405180910390f35b61028a60048036038101906102859190610d5e565b610769565b6040516102979190610ca7565b60405180910390f35b6102a86107c0565b6040516102b59190610cdb565b60405180910390f35b6102d860048036038101906102d39190610d5e565b6107c7565b6040516102e59190610ca7565b60405180910390f35b61030860048036038101906103039190610d5e565b61081e565b6040516103159190610f08565b60405180910390f35b61033860048036038101906103339190610d5e565b610842565b005b606481565b62278d0081565b6000919050565b6000806000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff169250600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff169150600090509193909250565b7f000000000000000000000000000000000000000000000000000000000000000081565b6104296108c8565b610433600061094f565b565b60016020528060005260406000206000915054906101000a900461ffff1681565b60026020528060005260406000206000915054906101000a900461ffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461052a576040517f4b60273500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603610590576040517ffd684c3b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600062015180426105a19190610f81565b90506105ae868683610a13565b91506105bc87878784610b5c565b925060008260ff1660028561ffff166105d59190610fb2565b6105df9190610ff4565b9050606461ffff1681116105f357806105f6565b60645b945084600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548161ffff021916908361ffff16021790555083600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548161ffff021916908361ffff16021790555081600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548164ffffffffff021916908364ffffffffff1602179055508773ffffffffffffffffffffffffffffffffffffffff167fd4aa3a778f7de8988dd04fa0d6d79d3bc629ecfd224a29ed9300321606c5f80b86868660405161075693929190610dc2565b60405180910390a2505093509350939050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff169050919050565b6201fa4081565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff169050919050565b60036020528060005260406000206000915054906101000a900464ffffffffff1681565b61084a6108c8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108bc5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108b39190610e08565b60405180910390fd5b6108c58161094f565b50565b6108d0610c82565b73ffffffffffffffffffffffffffffffffffffffff166108ee610477565b73ffffffffffffffffffffffffffffffffffffffff161461094d57610911610c82565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109449190610e08565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808484905003610a285760009050610b55565b60008484600187879050610a3c9190611028565b818110610a4c57610a4b61105c565b5b9050602002016020810190610a6191906110b7565b90506000601d8264ffffffffff161015610a7c576000610a8a565b601d82610a8991906110e4565b5b905060005b86869050811015610b3b578164ffffffffff16878783818110610ab557610ab461105c565b5b9050602002016020810190610aca91906110b7565b64ffffffffff1610158015610b1457508264ffffffffff16878783818110610af557610af461105c565b5b9050602002016020810190610b0a91906110b7565b64ffffffffff1611155b15610b28578380610b249061111d565b9450505b8080610b3390611146565b915050610a8f565b5060ff8360ff1611610b4d5782610b50565b60ff5b925050505b9392505050565b6000808484905003610b715760009050610c7a565b60008484600187879050610b859190611028565b818110610b9557610b9461105c565b5b9050602002016020810190610baa91906110b7565b9050600191506000600182610bbf91906110e4565b90506000600287879050610bd39190611198565b90505b60008112610c5b576000878783818110610bf357610bf261105c565b5b9050602002016020810190610c0891906110b7565b90508264ffffffffff168164ffffffffff1603610c41578480610c2a906111db565b955050600181610c3a91906110e4565b9250610c47565b50610c5b565b508080610c5390611205565b915050610bd6565b5061ffff80168361ffff1611610c715782610c75565b61ffff5b925050505b949350505050565b600033905090565b600061ffff82169050919050565b610ca181610c8a565b82525050565b6000602082019050610cbc6000830184610c98565b92915050565b6000819050919050565b610cd581610cc2565b82525050565b6000602082019050610cf06000830184610ccc565b92915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d2b82610d00565b9050919050565b610d3b81610d20565b8114610d4657600080fd5b50565b600081359050610d5881610d32565b92915050565b600060208284031215610d7457610d73610cf6565b5b6000610d8284828501610d49565b91505092915050565b600060ff82169050919050565b610da181610d8b565b82525050565b6000602082019050610dbc6000830184610d98565b92915050565b6000606082019050610dd76000830186610c98565b610de46020830185610c98565b610df16040830184610d98565b949350505050565b610e0281610d20565b82525050565b6000602082019050610e1d6000830184610df9565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610e4857610e47610e23565b5b8235905067ffffffffffffffff811115610e6557610e64610e28565b5b602083019150836020820283011115610e8157610e80610e2d565b5b9250929050565b600080600060408486031215610ea157610ea0610cf6565b5b6000610eaf86828701610d49565b935050602084013567ffffffffffffffff811115610ed057610ecf610cfb565b5b610edc86828701610e32565b92509250509250925092565b600064ffffffffff82169050919050565b610f0281610ee8565b82525050565b6000602082019050610f1d6000830184610ef9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f8c82610cc2565b9150610f9783610cc2565b925082610fa757610fa6610f23565b5b828204905092915050565b6000610fbd82610cc2565b9150610fc883610cc2565b9250828202610fd681610cc2565b91508282048414831517610fed57610fec610f52565b5b5092915050565b6000610fff82610cc2565b915061100a83610cc2565b925082820190508082111561102257611021610f52565b5b92915050565b600061103382610cc2565b915061103e83610cc2565b925082820390508181111561105657611055610f52565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61109481610ee8565b811461109f57600080fd5b50565b6000813590506110b18161108b565b92915050565b6000602082840312156110cd576110cc610cf6565b5b60006110db848285016110a2565b91505092915050565b60006110ef82610ee8565b91506110fa83610ee8565b9250828203905064ffffffffff81111561111757611116610f52565b5b92915050565b600061112882610d8b565b915060ff820361113b5761113a610f52565b5b600182019050919050565b600061115182610cc2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361118357611182610f52565b5b600182019050919050565b6000819050919050565b60006111a38261118e565b91506111ae8361118e565b92508282039050818112600084121682821360008512151617156111d5576111d4610f52565b5b92915050565b60006111e682610c8a565b915061ffff82036111fa576111f9610f52565b5b600182019050919050565b60006112108261118e565b91507f8000000000000000000000000000000000000000000000000000000000000000820361124257611241610f52565b5b60018203905091905056fea264697066735822122058f1b7ee69e4350bebeb580379d120e62f5c997fa0a18b24353fd94dafd36aa864736f6c63430008140033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x15AB CODESIZE SUB DUP1 PUSH3 0x15AB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x290 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0x2E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBE DUP2 PUSH3 0x162 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x126 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFD684C3B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH3 0x305 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x258 DUP3 PUSH3 0x22B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x26A DUP2 PUSH3 0x24B JUMP JUMPDEST DUP2 EQ PUSH3 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x28A DUP2 PUSH3 0x25F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2AA JUMPI PUSH3 0x2A9 PUSH3 0x226 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2BA DUP6 DUP3 DUP7 ADD PUSH3 0x279 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x2CD DUP6 DUP3 DUP7 ADD PUSH3 0x279 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x2E2 DUP2 PUSH3 0x24B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2FF PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1283 PUSH3 0x328 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x3FF ADD MSTORE PUSH2 0x4A7 ADD MSTORE PUSH2 0x1283 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78DF39A7 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC1A287E2 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC1A287E2 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xC57F2DFD EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xD68B29FE EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x31E JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x78DF39A7 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x950F2DAE EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xB34E0C47 EQ PUSH2 0x270 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x4E43603A GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x4E43603A EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x6FA0E653 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x776F3843 EQ PUSH2 0x1C0 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x27FF6223 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x48FECAD2 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x4A9359DA EQ PUSH2 0x136 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x346 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xDA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH2 0x421 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x228 PUSH2 0x477 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0xE88 JUMP JUMPDEST PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x769 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A8 PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x308 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x303 SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x81E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x315 SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x338 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x333 SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x842 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH3 0x278D00 DUP2 JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP3 POP PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP2 POP PUSH1 0x0 SWAP1 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x429 PUSH2 0x8C8 JUMP JUMPDEST PUSH2 0x433 PUSH1 0x0 PUSH2 0x94F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH32 0x4B60273500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x590 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFD684C3B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x15180 TIMESTAMP PUSH2 0x5A1 SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP1 POP PUSH2 0x5AE DUP7 DUP7 DUP4 PUSH2 0xA13 JUMP JUMPDEST SWAP2 POP PUSH2 0x5BC DUP8 DUP8 DUP8 DUP5 PUSH2 0xB5C JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP3 PUSH1 0xFF AND PUSH1 0x2 DUP6 PUSH2 0xFFFF AND PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0x5DF SWAP2 SWAP1 PUSH2 0xFF4 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 PUSH2 0xFFFF AND DUP2 GT PUSH2 0x5F3 JUMPI DUP1 PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x64 JUMPDEST SWAP5 POP DUP5 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD4AA3A778F7DE8988DD04FA0D6D79D3BC629ECFD224A29ED9300321606C5F80B DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x756 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1FA40 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x84A PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8BC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B3 SWAP2 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C5 DUP2 PUSH2 0x94F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8D0 PUSH2 0xC82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8EE PUSH2 0x477 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x94D JUMPI PUSH2 0x911 PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x944 SWAP2 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP5 SWAP1 POP SUB PUSH2 0xA28 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x1 DUP8 DUP8 SWAP1 POP PUSH2 0xA3C SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0xA4C JUMPI PUSH2 0xA4B PUSH2 0x105C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA61 SWAP2 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1D DUP3 PUSH5 0xFFFFFFFFFF AND LT ISZERO PUSH2 0xA7C JUMPI PUSH1 0x0 PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x1D DUP3 PUSH2 0xA89 SWAP2 SWAP1 PUSH2 0x10E4 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 DUP7 SWAP1 POP DUP2 LT ISZERO PUSH2 0xB3B JUMPI DUP2 PUSH5 0xFFFFFFFFFF AND DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0xAB5 JUMPI PUSH2 0xAB4 PUSH2 0x105C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xACA SWAP2 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0xB14 JUMPI POP DUP3 PUSH5 0xFFFFFFFFFF AND DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0xAF5 JUMPI PUSH2 0xAF4 PUSH2 0x105C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB0A SWAP2 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0xB28 JUMPI DUP4 DUP1 PUSH2 0xB24 SWAP1 PUSH2 0x111D JUMP JUMPDEST SWAP5 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xB33 SWAP1 PUSH2 0x1146 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA8F JUMP JUMPDEST POP PUSH1 0xFF DUP4 PUSH1 0xFF AND GT PUSH2 0xB4D JUMPI DUP3 PUSH2 0xB50 JUMP JUMPDEST PUSH1 0xFF JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP5 SWAP1 POP SUB PUSH2 0xB71 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xC7A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x1 DUP8 DUP8 SWAP1 POP PUSH2 0xB85 SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0xB95 JUMPI PUSH2 0xB94 PUSH2 0x105C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xBAA SWAP2 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 SWAP2 POP PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0xBBF SWAP2 SWAP1 PUSH2 0x10E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP8 DUP8 SWAP1 POP PUSH2 0xBD3 SWAP2 SWAP1 PUSH2 0x1198 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 SLT PUSH2 0xC5B JUMPI PUSH1 0x0 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0xBF3 JUMPI PUSH2 0xBF2 PUSH2 0x105C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC08 SWAP2 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 POP DUP3 PUSH5 0xFFFFFFFFFF AND DUP2 PUSH5 0xFFFFFFFFFF AND SUB PUSH2 0xC41 JUMPI DUP5 DUP1 PUSH2 0xC2A SWAP1 PUSH2 0x11DB JUMP JUMPDEST SWAP6 POP POP PUSH1 0x1 DUP2 PUSH2 0xC3A SWAP2 SWAP1 PUSH2 0x10E4 JUMP JUMPDEST SWAP3 POP PUSH2 0xC47 JUMP JUMPDEST POP PUSH2 0xC5B JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0xC53 SWAP1 PUSH2 0x1205 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBD6 JUMP JUMPDEST POP PUSH2 0xFFFF DUP1 AND DUP4 PUSH2 0xFFFF AND GT PUSH2 0xC71 JUMPI DUP3 PUSH2 0xC75 JUMP JUMPDEST PUSH2 0xFFFF JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCA1 DUP2 PUSH2 0xC8A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCBC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD5 DUP2 PUSH2 0xCC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2B DUP3 PUSH2 0xD00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD3B DUP2 PUSH2 0xD20 JUMP JUMPDEST DUP2 EQ PUSH2 0xD46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD58 DUP2 PUSH2 0xD32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD74 JUMPI PUSH2 0xD73 PUSH2 0xCF6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD82 DUP5 DUP3 DUP6 ADD PUSH2 0xD49 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDA1 DUP2 PUSH2 0xD8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDBC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDD7 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xC98 JUMP JUMPDEST PUSH2 0xDE4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC98 JUMP JUMPDEST PUSH2 0xDF1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD98 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xE02 DUP2 PUSH2 0xD20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE1D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xE48 JUMPI PUSH2 0xE47 PUSH2 0xE23 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE65 JUMPI PUSH2 0xE64 PUSH2 0xE28 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xE81 JUMPI PUSH2 0xE80 PUSH2 0xE2D JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEA1 JUMPI PUSH2 0xEA0 PUSH2 0xCF6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEAF DUP7 DUP3 DUP8 ADD PUSH2 0xD49 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xED0 JUMPI PUSH2 0xECF PUSH2 0xCFB JUMP JUMPDEST JUMPDEST PUSH2 0xEDC DUP7 DUP3 DUP8 ADD PUSH2 0xE32 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH5 0xFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF02 DUP2 PUSH2 0xEE8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF1D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF8C DUP3 PUSH2 0xCC2 JUMP JUMPDEST SWAP2 POP PUSH2 0xF97 DUP4 PUSH2 0xCC2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFA7 JUMPI PUSH2 0xFA6 PUSH2 0xF23 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFBD DUP3 PUSH2 0xCC2 JUMP JUMPDEST SWAP2 POP PUSH2 0xFC8 DUP4 PUSH2 0xCC2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xFD6 DUP2 PUSH2 0xCC2 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xFED JUMPI PUSH2 0xFEC PUSH2 0xF52 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFF DUP3 PUSH2 0xCC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x100A DUP4 PUSH2 0xCC2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1022 JUMPI PUSH2 0x1021 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1033 DUP3 PUSH2 0xCC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x103E DUP4 PUSH2 0xCC2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1056 JUMPI PUSH2 0x1055 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1094 DUP2 PUSH2 0xEE8 JUMP JUMPDEST DUP2 EQ PUSH2 0x109F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10B1 DUP2 PUSH2 0x108B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10CD JUMPI PUSH2 0x10CC PUSH2 0xCF6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10DB DUP5 DUP3 DUP6 ADD PUSH2 0x10A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10EF DUP3 PUSH2 0xEE8 JUMP JUMPDEST SWAP2 POP PUSH2 0x10FA DUP4 PUSH2 0xEE8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH5 0xFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1117 JUMPI PUSH2 0x1116 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1128 DUP3 PUSH2 0xD8B JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x113B JUMPI PUSH2 0x113A PUSH2 0xF52 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1151 DUP3 PUSH2 0xCC2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1183 JUMPI PUSH2 0x1182 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A3 DUP3 PUSH2 0x118E JUMP JUMPDEST SWAP2 POP PUSH2 0x11AE DUP4 PUSH2 0x118E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 SLT PUSH1 0x0 DUP5 SLT AND DUP3 DUP3 SGT PUSH1 0x0 DUP6 SLT ISZERO AND OR ISZERO PUSH2 0x11D5 JUMPI PUSH2 0x11D4 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E6 DUP3 PUSH2 0xC8A JUMP JUMPDEST SWAP2 POP PUSH2 0xFFFF DUP3 SUB PUSH2 0x11FA JUMPI PUSH2 0x11F9 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1210 DUP3 PUSH2 0x118E JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 SUB PUSH2 0x1242 JUMPI PUSH2 0x1241 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC CALL 0xB7 0xEE PUSH10 0xE4350BEBEB580379D120 0xE6 0x2F 0x5C SWAP10 PUSH32 0xA0A18B24353FD94DAFD36AA864736F6C63430008140033000000000000000000 ","sourceMap":"457:6572:29:-:0;;;1572:171;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1630:6;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1676:1:29::1;1652:26;;:12;:26;;::::0;1648:52:::1;;1687:13;;;;;;;;;;;;;;1648:52;1724:12;1710:26;;;;;;;;::::0;::::1;1572:171:::0;;457:6572;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:34:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;457:6572:29:-;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@FREQ_WINDOW_8869":{"entryPoint":831,"id":8869,"parameterSlots":0,"returnSlots":0},"@GRACE_PERIOD_8865":{"entryPoint":1984,"id":8865,"parameterSlots":0,"returnSlots":0},"@MAX_SCORE_8861":{"entryPoint":826,"id":8861,"parameterSlots":0,"returnSlots":0},"@_calculateFrequency_9106":{"entryPoint":2579,"id":9106,"parameterSlots":3,"returnSlots":1},"@_calculateStreak_9204":{"entryPoint":2908,"id":9204,"parameterSlots":4,"returnSlots":1},"@_checkOwner_84":{"entryPoint":2248,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_1684":{"entryPoint":3202,"id":1684,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":2383,"id":146,"parameterSlots":1,"returnSlots":0},"@getUserFreq30_9241":{"entryPoint":838,"id":9241,"parameterSlots":1,"returnSlots":1},"@getUserScore_9217":{"entryPoint":1897,"id":9217,"parameterSlots":1,"returnSlots":1},"@getUserStats_9270":{"entryPoint":845,"id":9270,"parameterSlots":1,"returnSlots":3},"@getUserStreak_9230":{"entryPoint":1991,"id":9230,"parameterSlots":1,"returnSlots":1},"@lastScoredDay_8887":{"entryPoint":2078,"id":8887,"parameterSlots":0,"returnSlots":0},"@owner_67":{"entryPoint":1143,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1057,"id":98,"parameterSlots":0,"returnSlots":0},"@savingsPool_8872":{"entryPoint":1021,"id":8872,"parameterSlots":0,"returnSlots":0},"@score_8877":{"entryPoint":1077,"id":8877,"parameterSlots":0,"returnSlots":0},"@streakDays_8882":{"entryPoint":1110,"id":8882,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":2114,"id":126,"parameterSlots":1,"returnSlots":0},"@updateScore_9031":{"entryPoint":1184,"id":9031,"parameterSlots":3,"returnSlots":3},"abi_decode_t_address":{"entryPoint":3401,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint40_$dyn_calldata_ptr":{"entryPoint":3634,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint40":{"entryPoint":4258,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3422,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_array$_t_uint40_$dyn_calldata_ptr":{"entryPoint":3720,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint40":{"entryPoint":4279,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3577,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":3224,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3276,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint40_to_t_uint40_fromStack":{"entryPoint":3833,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3480,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3592,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":3239,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint16_t_uint8__to_t_uint16_t_uint16_t_uint8__fromStack_reversed":{"entryPoint":3522,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3291,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint40__to_t_uint40__fromStack_reversed":{"entryPoint":3848,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3495,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4084,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":3969,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":4018,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_int256":{"entryPoint":4504,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4136,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint40":{"entryPoint":4324,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3360,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":4494,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":3210,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3328,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3266,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint40":{"entryPoint":3816,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3467,"id":null,"parameterSlots":1,"returnSlots":1},"decrement_t_int256":{"entryPoint":4613,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint16":{"entryPoint":4571,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":4422,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint8":{"entryPoint":4381,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3922,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":3875,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4188,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":3624,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3619,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":3629,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3323,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3318,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3378,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint40":{"entryPoint":4235,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9032:34","statements":[{"body":{"nodeType":"YulBlock","src":"51:45:34","statements":[{"nodeType":"YulAssignment","src":"61:29:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"76:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"83:6:34","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"72:3:34"},"nodeType":"YulFunctionCall","src":"72:18:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"61:7:34"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"43:7:34","type":""}],"src":"7:89:34"},{"body":{"nodeType":"YulBlock","src":"165:52:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"182:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"204:5:34"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"187:16:34"},"nodeType":"YulFunctionCall","src":"187:23:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"175:6:34"},"nodeType":"YulFunctionCall","src":"175:36:34"},"nodeType":"YulExpressionStatement","src":"175:36:34"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"153:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"160:3:34","type":""}],"src":"102:115:34"},{"body":{"nodeType":"YulBlock","src":"319:122:34","statements":[{"nodeType":"YulAssignment","src":"329:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"341:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"352:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"337:3:34"},"nodeType":"YulFunctionCall","src":"337:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"329:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"420:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"431:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"416:3:34"},"nodeType":"YulFunctionCall","src":"416:17:34"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"365:41:34"},"nodeType":"YulFunctionCall","src":"365:69:34"},"nodeType":"YulExpressionStatement","src":"365:69:34"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"291:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"303:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"314:4:34","type":""}],"src":"223:218:34"},{"body":{"nodeType":"YulBlock","src":"492:32:34","statements":[{"nodeType":"YulAssignment","src":"502:16:34","value":{"name":"value","nodeType":"YulIdentifier","src":"513:5:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"502:7:34"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"474:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"484:7:34","type":""}],"src":"447:77:34"},{"body":{"nodeType":"YulBlock","src":"595:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"612:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"635:5:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"617:17:34"},"nodeType":"YulFunctionCall","src":"617:24:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"605:6:34"},"nodeType":"YulFunctionCall","src":"605:37:34"},"nodeType":"YulExpressionStatement","src":"605:37:34"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"583:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"590:3:34","type":""}],"src":"530:118:34"},{"body":{"nodeType":"YulBlock","src":"752:124:34","statements":[{"nodeType":"YulAssignment","src":"762:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"774:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"785:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"770:3:34"},"nodeType":"YulFunctionCall","src":"770:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"762:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"842:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"855:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"866:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"851:3:34"},"nodeType":"YulFunctionCall","src":"851:17:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"798:43:34"},"nodeType":"YulFunctionCall","src":"798:71:34"},"nodeType":"YulExpressionStatement","src":"798:71:34"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"724:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"736:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"747:4:34","type":""}],"src":"654:222:34"},{"body":{"nodeType":"YulBlock","src":"922:35:34","statements":[{"nodeType":"YulAssignment","src":"932:19:34","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"948:2:34","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"942:5:34"},"nodeType":"YulFunctionCall","src":"942:9:34"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"932:6:34"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"915:6:34","type":""}],"src":"882:75:34"},{"body":{"nodeType":"YulBlock","src":"1052:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1069:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1072:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1062:6:34"},"nodeType":"YulFunctionCall","src":"1062:12:34"},"nodeType":"YulExpressionStatement","src":"1062:12:34"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"963:117:34"},{"body":{"nodeType":"YulBlock","src":"1175:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1192:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1195:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1185:6:34"},"nodeType":"YulFunctionCall","src":"1185:12:34"},"nodeType":"YulExpressionStatement","src":"1185:12:34"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1086:117:34"},{"body":{"nodeType":"YulBlock","src":"1254:81:34","statements":[{"nodeType":"YulAssignment","src":"1264:65:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1279:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"1286:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1275:3:34"},"nodeType":"YulFunctionCall","src":"1275:54:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1264:7:34"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1236:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1246:7:34","type":""}],"src":"1209:126:34"},{"body":{"nodeType":"YulBlock","src":"1386:51:34","statements":[{"nodeType":"YulAssignment","src":"1396:35:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1425:5:34"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1407:17:34"},"nodeType":"YulFunctionCall","src":"1407:24:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1396:7:34"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1368:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1378:7:34","type":""}],"src":"1341:96:34"},{"body":{"nodeType":"YulBlock","src":"1486:79:34","statements":[{"body":{"nodeType":"YulBlock","src":"1543:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1552:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1555:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1545:6:34"},"nodeType":"YulFunctionCall","src":"1545:12:34"},"nodeType":"YulExpressionStatement","src":"1545:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1509:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1534:5:34"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1516:17:34"},"nodeType":"YulFunctionCall","src":"1516:24:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1506:2:34"},"nodeType":"YulFunctionCall","src":"1506:35:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1499:6:34"},"nodeType":"YulFunctionCall","src":"1499:43:34"},"nodeType":"YulIf","src":"1496:63:34"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1479:5:34","type":""}],"src":"1443:122:34"},{"body":{"nodeType":"YulBlock","src":"1623:87:34","statements":[{"nodeType":"YulAssignment","src":"1633:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1655:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1642:12:34"},"nodeType":"YulFunctionCall","src":"1642:20:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1633:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1698:5:34"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1671:26:34"},"nodeType":"YulFunctionCall","src":"1671:33:34"},"nodeType":"YulExpressionStatement","src":"1671:33:34"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1601:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"1609:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1617:5:34","type":""}],"src":"1571:139:34"},{"body":{"nodeType":"YulBlock","src":"1782:263:34","statements":[{"body":{"nodeType":"YulBlock","src":"1828:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1830:77:34"},"nodeType":"YulFunctionCall","src":"1830:79:34"},"nodeType":"YulExpressionStatement","src":"1830:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1803:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"1812:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1799:3:34"},"nodeType":"YulFunctionCall","src":"1799:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"1824:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1795:3:34"},"nodeType":"YulFunctionCall","src":"1795:32:34"},"nodeType":"YulIf","src":"1792:119:34"},{"nodeType":"YulBlock","src":"1921:117:34","statements":[{"nodeType":"YulVariableDeclaration","src":"1936:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"1950:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1940:6:34","type":""}]},{"nodeType":"YulAssignment","src":"1965:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"2011:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1996:3:34"},"nodeType":"YulFunctionCall","src":"1996:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2020:7:34"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1975:20:34"},"nodeType":"YulFunctionCall","src":"1975:53:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1965:6:34"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1752:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1763:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1775:6:34","type":""}],"src":"1716:329:34"},{"body":{"nodeType":"YulBlock","src":"2094:43:34","statements":[{"nodeType":"YulAssignment","src":"2104:27:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2119:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"2126:4:34","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2115:3:34"},"nodeType":"YulFunctionCall","src":"2115:16:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2104:7:34"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2076:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2086:7:34","type":""}],"src":"2051:86:34"},{"body":{"nodeType":"YulBlock","src":"2204:51:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2221:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2242:5:34"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"2226:15:34"},"nodeType":"YulFunctionCall","src":"2226:22:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2214:6:34"},"nodeType":"YulFunctionCall","src":"2214:35:34"},"nodeType":"YulExpressionStatement","src":"2214:35:34"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2192:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2199:3:34","type":""}],"src":"2143:112:34"},{"body":{"nodeType":"YulBlock","src":"2355:120:34","statements":[{"nodeType":"YulAssignment","src":"2365:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2377:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2388:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2373:3:34"},"nodeType":"YulFunctionCall","src":"2373:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2365:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2441:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2454:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2465:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2450:3:34"},"nodeType":"YulFunctionCall","src":"2450:17:34"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"2401:39:34"},"nodeType":"YulFunctionCall","src":"2401:67:34"},"nodeType":"YulExpressionStatement","src":"2401:67:34"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2327:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2339:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2350:4:34","type":""}],"src":"2261:214:34"},{"body":{"nodeType":"YulBlock","src":"2627:280:34","statements":[{"nodeType":"YulAssignment","src":"2637:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2649:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2660:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2645:3:34"},"nodeType":"YulFunctionCall","src":"2645:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2637:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2715:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2728:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2739:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2724:3:34"},"nodeType":"YulFunctionCall","src":"2724:17:34"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"2673:41:34"},"nodeType":"YulFunctionCall","src":"2673:69:34"},"nodeType":"YulExpressionStatement","src":"2673:69:34"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2794:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2807:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2818:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2803:3:34"},"nodeType":"YulFunctionCall","src":"2803:18:34"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"2752:41:34"},"nodeType":"YulFunctionCall","src":"2752:70:34"},"nodeType":"YulExpressionStatement","src":"2752:70:34"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2872:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2885:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"2896:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2881:3:34"},"nodeType":"YulFunctionCall","src":"2881:18:34"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"2832:39:34"},"nodeType":"YulFunctionCall","src":"2832:68:34"},"nodeType":"YulExpressionStatement","src":"2832:68:34"}]},"name":"abi_encode_tuple_t_uint16_t_uint16_t_uint8__to_t_uint16_t_uint16_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2583:9:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2595:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2603:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2611:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2622:4:34","type":""}],"src":"2481:426:34"},{"body":{"nodeType":"YulBlock","src":"2978:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2995:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3018:5:34"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3000:17:34"},"nodeType":"YulFunctionCall","src":"3000:24:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2988:6:34"},"nodeType":"YulFunctionCall","src":"2988:37:34"},"nodeType":"YulExpressionStatement","src":"2988:37:34"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2966:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2973:3:34","type":""}],"src":"2913:118:34"},{"body":{"nodeType":"YulBlock","src":"3135:124:34","statements":[{"nodeType":"YulAssignment","src":"3145:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3157:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"3168:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3153:3:34"},"nodeType":"YulFunctionCall","src":"3153:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3145:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3225:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3238:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"3249:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3234:3:34"},"nodeType":"YulFunctionCall","src":"3234:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3181:43:34"},"nodeType":"YulFunctionCall","src":"3181:71:34"},"nodeType":"YulExpressionStatement","src":"3181:71:34"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3107:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3119:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3130:4:34","type":""}],"src":"3037:222:34"},{"body":{"nodeType":"YulBlock","src":"3354:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3371:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3374:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3364:6:34"},"nodeType":"YulFunctionCall","src":"3364:12:34"},"nodeType":"YulExpressionStatement","src":"3364:12:34"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3265:117:34"},{"body":{"nodeType":"YulBlock","src":"3477:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3494:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3497:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3487:6:34"},"nodeType":"YulFunctionCall","src":"3487:12:34"},"nodeType":"YulExpressionStatement","src":"3487:12:34"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"3388:117:34"},{"body":{"nodeType":"YulBlock","src":"3600:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3617:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3620:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3610:6:34"},"nodeType":"YulFunctionCall","src":"3610:12:34"},"nodeType":"YulExpressionStatement","src":"3610:12:34"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"3511:117:34"},{"body":{"nodeType":"YulBlock","src":"3739:478:34","statements":[{"body":{"nodeType":"YulBlock","src":"3788:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3790:77:34"},"nodeType":"YulFunctionCall","src":"3790:79:34"},"nodeType":"YulExpressionStatement","src":"3790:79:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3767:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"3775:4:34","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3763:3:34"},"nodeType":"YulFunctionCall","src":"3763:17:34"},{"name":"end","nodeType":"YulIdentifier","src":"3782:3:34"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3759:3:34"},"nodeType":"YulFunctionCall","src":"3759:27:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3752:6:34"},"nodeType":"YulFunctionCall","src":"3752:35:34"},"nodeType":"YulIf","src":"3749:122:34"},{"nodeType":"YulAssignment","src":"3880:30:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3903:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3890:12:34"},"nodeType":"YulFunctionCall","src":"3890:20:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3880:6:34"}]},{"body":{"nodeType":"YulBlock","src":"3953:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"3955:77:34"},"nodeType":"YulFunctionCall","src":"3955:79:34"},"nodeType":"YulExpressionStatement","src":"3955:79:34"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3925:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"3933:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3922:2:34"},"nodeType":"YulFunctionCall","src":"3922:30:34"},"nodeType":"YulIf","src":"3919:117:34"},{"nodeType":"YulAssignment","src":"4045:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4061:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"4069:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4057:3:34"},"nodeType":"YulFunctionCall","src":"4057:17:34"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"4045:8:34"}]},{"body":{"nodeType":"YulBlock","src":"4128:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"4130:77:34"},"nodeType":"YulFunctionCall","src":"4130:79:34"},"nodeType":"YulExpressionStatement","src":"4130:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"4093:8:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4107:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"4115:4:34","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4103:3:34"},"nodeType":"YulFunctionCall","src":"4103:17:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4089:3:34"},"nodeType":"YulFunctionCall","src":"4089:32:34"},{"name":"end","nodeType":"YulIdentifier","src":"4123:3:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4086:2:34"},"nodeType":"YulFunctionCall","src":"4086:41:34"},"nodeType":"YulIf","src":"4083:128:34"}]},"name":"abi_decode_t_array$_t_uint40_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3706:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"3714:3:34","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"3722:8:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"3732:6:34","type":""}],"src":"3650:567:34"},{"body":{"nodeType":"YulBlock","src":"4340:585:34","statements":[{"body":{"nodeType":"YulBlock","src":"4386:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4388:77:34"},"nodeType":"YulFunctionCall","src":"4388:79:34"},"nodeType":"YulExpressionStatement","src":"4388:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4361:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"4370:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4357:3:34"},"nodeType":"YulFunctionCall","src":"4357:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"4382:2:34","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4353:3:34"},"nodeType":"YulFunctionCall","src":"4353:32:34"},"nodeType":"YulIf","src":"4350:119:34"},{"nodeType":"YulBlock","src":"4479:117:34","statements":[{"nodeType":"YulVariableDeclaration","src":"4494:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"4508:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4498:6:34","type":""}]},{"nodeType":"YulAssignment","src":"4523:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4558:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"4569:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:34"},"nodeType":"YulFunctionCall","src":"4554:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4578:7:34"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4533:20:34"},"nodeType":"YulFunctionCall","src":"4533:53:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4523:6:34"}]}]},{"nodeType":"YulBlock","src":"4606:312:34","statements":[{"nodeType":"YulVariableDeclaration","src":"4621:46:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4652:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"4663:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4648:3:34"},"nodeType":"YulFunctionCall","src":"4648:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4635:12:34"},"nodeType":"YulFunctionCall","src":"4635:32:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4625:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"4714:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4716:77:34"},"nodeType":"YulFunctionCall","src":"4716:79:34"},"nodeType":"YulExpressionStatement","src":"4716:79:34"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4686:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"4694:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4683:2:34"},"nodeType":"YulFunctionCall","src":"4683:30:34"},"nodeType":"YulIf","src":"4680:117:34"},{"nodeType":"YulAssignment","src":"4811:97:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4880:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"4891:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4876:3:34"},"nodeType":"YulFunctionCall","src":"4876:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4900:7:34"}],"functionName":{"name":"abi_decode_t_array$_t_uint40_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"4829:46:34"},"nodeType":"YulFunctionCall","src":"4829:79:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4811:6:34"},{"name":"value2","nodeType":"YulIdentifier","src":"4819:6:34"}]}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint40_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4294:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4305:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4317:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4325:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4333:6:34","type":""}],"src":"4223:702:34"},{"body":{"nodeType":"YulBlock","src":"4975:51:34","statements":[{"nodeType":"YulAssignment","src":"4985:35:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5000:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"5007:12:34","type":"","value":"0xffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4996:3:34"},"nodeType":"YulFunctionCall","src":"4996:24:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4985:7:34"}]}]},"name":"cleanup_t_uint40","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4957:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4967:7:34","type":""}],"src":"4931:95:34"},{"body":{"nodeType":"YulBlock","src":"5095:52:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5112:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5134:5:34"}],"functionName":{"name":"cleanup_t_uint40","nodeType":"YulIdentifier","src":"5117:16:34"},"nodeType":"YulFunctionCall","src":"5117:23:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5105:6:34"},"nodeType":"YulFunctionCall","src":"5105:36:34"},"nodeType":"YulExpressionStatement","src":"5105:36:34"}]},"name":"abi_encode_t_uint40_to_t_uint40_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5083:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5090:3:34","type":""}],"src":"5032:115:34"},{"body":{"nodeType":"YulBlock","src":"5249:122:34","statements":[{"nodeType":"YulAssignment","src":"5259:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5271:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"5282:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5267:3:34"},"nodeType":"YulFunctionCall","src":"5267:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5259:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5337:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5350:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"5361:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5346:3:34"},"nodeType":"YulFunctionCall","src":"5346:17:34"}],"functionName":{"name":"abi_encode_t_uint40_to_t_uint40_fromStack","nodeType":"YulIdentifier","src":"5295:41:34"},"nodeType":"YulFunctionCall","src":"5295:69:34"},"nodeType":"YulExpressionStatement","src":"5295:69:34"}]},"name":"abi_encode_tuple_t_uint40__to_t_uint40__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5221:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5233:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5244:4:34","type":""}],"src":"5153:218:34"},{"body":{"nodeType":"YulBlock","src":"5405:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5422:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5425:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5415:6:34"},"nodeType":"YulFunctionCall","src":"5415:88:34"},"nodeType":"YulExpressionStatement","src":"5415:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5519:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5522:4:34","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5512:6:34"},"nodeType":"YulFunctionCall","src":"5512:15:34"},"nodeType":"YulExpressionStatement","src":"5512:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5543:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5546:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5536:6:34"},"nodeType":"YulFunctionCall","src":"5536:15:34"},"nodeType":"YulExpressionStatement","src":"5536:15:34"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"5377:180:34"},{"body":{"nodeType":"YulBlock","src":"5591:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5608:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5611:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5601:6:34"},"nodeType":"YulFunctionCall","src":"5601:88:34"},"nodeType":"YulExpressionStatement","src":"5601:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5705:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5708:4:34","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5698:6:34"},"nodeType":"YulFunctionCall","src":"5698:15:34"},"nodeType":"YulExpressionStatement","src":"5698:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5729:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5732:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5722:6:34"},"nodeType":"YulFunctionCall","src":"5722:15:34"},"nodeType":"YulExpressionStatement","src":"5722:15:34"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5563:180:34"},{"body":{"nodeType":"YulBlock","src":"5791:143:34","statements":[{"nodeType":"YulAssignment","src":"5801:25:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5824:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5806:17:34"},"nodeType":"YulFunctionCall","src":"5806:20:34"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"5801:1:34"}]},{"nodeType":"YulAssignment","src":"5835:25:34","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5858:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5840:17:34"},"nodeType":"YulFunctionCall","src":"5840:20:34"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"5835:1:34"}]},{"body":{"nodeType":"YulBlock","src":"5882:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"5884:16:34"},"nodeType":"YulFunctionCall","src":"5884:18:34"},"nodeType":"YulExpressionStatement","src":"5884:18:34"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5879:1:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5872:6:34"},"nodeType":"YulFunctionCall","src":"5872:9:34"},"nodeType":"YulIf","src":"5869:35:34"},{"nodeType":"YulAssignment","src":"5914:14:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5923:1:34"},{"name":"y","nodeType":"YulIdentifier","src":"5926:1:34"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5919:3:34"},"nodeType":"YulFunctionCall","src":"5919:9:34"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"5914:1:34"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5780:1:34","type":""},{"name":"y","nodeType":"YulTypedName","src":"5783:1:34","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"5789:1:34","type":""}],"src":"5749:185:34"},{"body":{"nodeType":"YulBlock","src":"5988:362:34","statements":[{"nodeType":"YulAssignment","src":"5998:25:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6021:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6003:17:34"},"nodeType":"YulFunctionCall","src":"6003:20:34"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"5998:1:34"}]},{"nodeType":"YulAssignment","src":"6032:25:34","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6055:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6037:17:34"},"nodeType":"YulFunctionCall","src":"6037:20:34"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6032:1:34"}]},{"nodeType":"YulVariableDeclaration","src":"6066:28:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6089:1:34"},{"name":"y","nodeType":"YulIdentifier","src":"6092:1:34"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6085:3:34"},"nodeType":"YulFunctionCall","src":"6085:9:34"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"6070:11:34","type":""}]},{"nodeType":"YulAssignment","src":"6103:41:34","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"6132:11:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6114:17:34"},"nodeType":"YulFunctionCall","src":"6114:30:34"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"6103:7:34"}]},{"body":{"nodeType":"YulBlock","src":"6321:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6323:16:34"},"nodeType":"YulFunctionCall","src":"6323:18:34"},"nodeType":"YulExpressionStatement","src":"6323:18:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6254:1:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6247:6:34"},"nodeType":"YulFunctionCall","src":"6247:9:34"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6277:1:34"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"6284:7:34"},{"name":"x","nodeType":"YulIdentifier","src":"6293:1:34"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6280:3:34"},"nodeType":"YulFunctionCall","src":"6280:15:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6274:2:34"},"nodeType":"YulFunctionCall","src":"6274:22:34"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6227:2:34"},"nodeType":"YulFunctionCall","src":"6227:83:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6207:6:34"},"nodeType":"YulFunctionCall","src":"6207:113:34"},"nodeType":"YulIf","src":"6204:139:34"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5971:1:34","type":""},{"name":"y","nodeType":"YulTypedName","src":"5974:1:34","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"5980:7:34","type":""}],"src":"5940:410:34"},{"body":{"nodeType":"YulBlock","src":"6400:147:34","statements":[{"nodeType":"YulAssignment","src":"6410:25:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6433:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6415:17:34"},"nodeType":"YulFunctionCall","src":"6415:20:34"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6410:1:34"}]},{"nodeType":"YulAssignment","src":"6444:25:34","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6467:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6449:17:34"},"nodeType":"YulFunctionCall","src":"6449:20:34"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6444:1:34"}]},{"nodeType":"YulAssignment","src":"6478:16:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6489:1:34"},{"name":"y","nodeType":"YulIdentifier","src":"6492:1:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6485:3:34"},"nodeType":"YulFunctionCall","src":"6485:9:34"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6478:3:34"}]},{"body":{"nodeType":"YulBlock","src":"6518:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6520:16:34"},"nodeType":"YulFunctionCall","src":"6520:18:34"},"nodeType":"YulExpressionStatement","src":"6520:18:34"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6510:1:34"},{"name":"sum","nodeType":"YulIdentifier","src":"6513:3:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6507:2:34"},"nodeType":"YulFunctionCall","src":"6507:10:34"},"nodeType":"YulIf","src":"6504:36:34"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6387:1:34","type":""},{"name":"y","nodeType":"YulTypedName","src":"6390:1:34","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6396:3:34","type":""}],"src":"6356:191:34"},{"body":{"nodeType":"YulBlock","src":"6598:149:34","statements":[{"nodeType":"YulAssignment","src":"6608:25:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6631:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6613:17:34"},"nodeType":"YulFunctionCall","src":"6613:20:34"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6608:1:34"}]},{"nodeType":"YulAssignment","src":"6642:25:34","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6665:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6647:17:34"},"nodeType":"YulFunctionCall","src":"6647:20:34"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6642:1:34"}]},{"nodeType":"YulAssignment","src":"6676:17:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6688:1:34"},{"name":"y","nodeType":"YulIdentifier","src":"6691:1:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6684:3:34"},"nodeType":"YulFunctionCall","src":"6684:9:34"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"6676:4:34"}]},{"body":{"nodeType":"YulBlock","src":"6718:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6720:16:34"},"nodeType":"YulFunctionCall","src":"6720:18:34"},"nodeType":"YulExpressionStatement","src":"6720:18:34"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"6709:4:34"},{"name":"x","nodeType":"YulIdentifier","src":"6715:1:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6706:2:34"},"nodeType":"YulFunctionCall","src":"6706:11:34"},"nodeType":"YulIf","src":"6703:37:34"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6584:1:34","type":""},{"name":"y","nodeType":"YulTypedName","src":"6587:1:34","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"6593:4:34","type":""}],"src":"6553:194:34"},{"body":{"nodeType":"YulBlock","src":"6781:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6798:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6801:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6791:6:34"},"nodeType":"YulFunctionCall","src":"6791:88:34"},"nodeType":"YulExpressionStatement","src":"6791:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6895:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6898:4:34","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6888:6:34"},"nodeType":"YulFunctionCall","src":"6888:15:34"},"nodeType":"YulExpressionStatement","src":"6888:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6919:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6922:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6912:6:34"},"nodeType":"YulFunctionCall","src":"6912:15:34"},"nodeType":"YulExpressionStatement","src":"6912:15:34"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"6753:180:34"},{"body":{"nodeType":"YulBlock","src":"6981:78:34","statements":[{"body":{"nodeType":"YulBlock","src":"7037:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7046:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7049:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7039:6:34"},"nodeType":"YulFunctionCall","src":"7039:12:34"},"nodeType":"YulExpressionStatement","src":"7039:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7004:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7028:5:34"}],"functionName":{"name":"cleanup_t_uint40","nodeType":"YulIdentifier","src":"7011:16:34"},"nodeType":"YulFunctionCall","src":"7011:23:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7001:2:34"},"nodeType":"YulFunctionCall","src":"7001:34:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6994:6:34"},"nodeType":"YulFunctionCall","src":"6994:42:34"},"nodeType":"YulIf","src":"6991:62:34"}]},"name":"validator_revert_t_uint40","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6974:5:34","type":""}],"src":"6939:120:34"},{"body":{"nodeType":"YulBlock","src":"7116:86:34","statements":[{"nodeType":"YulAssignment","src":"7126:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7148:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7135:12:34"},"nodeType":"YulFunctionCall","src":"7135:20:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7126:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7190:5:34"}],"functionName":{"name":"validator_revert_t_uint40","nodeType":"YulIdentifier","src":"7164:25:34"},"nodeType":"YulFunctionCall","src":"7164:32:34"},"nodeType":"YulExpressionStatement","src":"7164:32:34"}]},"name":"abi_decode_t_uint40","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7094:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"7102:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7110:5:34","type":""}],"src":"7065:137:34"},{"body":{"nodeType":"YulBlock","src":"7273:262:34","statements":[{"body":{"nodeType":"YulBlock","src":"7319:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7321:77:34"},"nodeType":"YulFunctionCall","src":"7321:79:34"},"nodeType":"YulExpressionStatement","src":"7321:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7294:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"7303:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7290:3:34"},"nodeType":"YulFunctionCall","src":"7290:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"7315:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7286:3:34"},"nodeType":"YulFunctionCall","src":"7286:32:34"},"nodeType":"YulIf","src":"7283:119:34"},{"nodeType":"YulBlock","src":"7412:116:34","statements":[{"nodeType":"YulVariableDeclaration","src":"7427:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"7441:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7431:6:34","type":""}]},{"nodeType":"YulAssignment","src":"7456:62:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7490:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"7501:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7486:3:34"},"nodeType":"YulFunctionCall","src":"7486:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7510:7:34"}],"functionName":{"name":"abi_decode_t_uint40","nodeType":"YulIdentifier","src":"7466:19:34"},"nodeType":"YulFunctionCall","src":"7466:52:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7456:6:34"}]}]}]},"name":"abi_decode_tuple_t_uint40","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7243:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7254:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7266:6:34","type":""}],"src":"7208:327:34"},{"body":{"nodeType":"YulBlock","src":"7585:158:34","statements":[{"nodeType":"YulAssignment","src":"7595:24:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7617:1:34"}],"functionName":{"name":"cleanup_t_uint40","nodeType":"YulIdentifier","src":"7600:16:34"},"nodeType":"YulFunctionCall","src":"7600:19:34"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"7595:1:34"}]},{"nodeType":"YulAssignment","src":"7628:24:34","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7650:1:34"}],"functionName":{"name":"cleanup_t_uint40","nodeType":"YulIdentifier","src":"7633:16:34"},"nodeType":"YulFunctionCall","src":"7633:19:34"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7628:1:34"}]},{"nodeType":"YulAssignment","src":"7661:17:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7673:1:34"},{"name":"y","nodeType":"YulIdentifier","src":"7676:1:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7669:3:34"},"nodeType":"YulFunctionCall","src":"7669:9:34"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"7661:4:34"}]},{"body":{"nodeType":"YulBlock","src":"7714:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7716:16:34"},"nodeType":"YulFunctionCall","src":"7716:18:34"},"nodeType":"YulExpressionStatement","src":"7716:18:34"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"7694:4:34"},{"kind":"number","nodeType":"YulLiteral","src":"7700:12:34","type":"","value":"0xffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7691:2:34"},"nodeType":"YulFunctionCall","src":"7691:22:34"},"nodeType":"YulIf","src":"7688:48:34"}]},"name":"checked_sub_t_uint40","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7571:1:34","type":""},{"name":"y","nodeType":"YulTypedName","src":"7574:1:34","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"7580:4:34","type":""}],"src":"7541:202:34"},{"body":{"nodeType":"YulBlock","src":"7790:126:34","statements":[{"nodeType":"YulAssignment","src":"7800:31:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7825:5:34"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"7809:15:34"},"nodeType":"YulFunctionCall","src":"7809:22:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7800:5:34"}]},{"body":{"nodeType":"YulBlock","src":"7859:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7861:16:34"},"nodeType":"YulFunctionCall","src":"7861:18:34"},"nodeType":"YulExpressionStatement","src":"7861:18:34"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7846:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"7853:4:34","type":"","value":"0xff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7843:2:34"},"nodeType":"YulFunctionCall","src":"7843:15:34"},"nodeType":"YulIf","src":"7840:41:34"},{"nodeType":"YulAssignment","src":"7890:20:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7901:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"7908:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:34"},"nodeType":"YulFunctionCall","src":"7897:13:34"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7890:3:34"}]}]},"name":"increment_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7776:5:34","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7786:3:34","type":""}],"src":"7749:167:34"},{"body":{"nodeType":"YulBlock","src":"7965:190:34","statements":[{"nodeType":"YulAssignment","src":"7975:33:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8002:5:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7984:17:34"},"nodeType":"YulFunctionCall","src":"7984:24:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7975:5:34"}]},{"body":{"nodeType":"YulBlock","src":"8098:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8100:16:34"},"nodeType":"YulFunctionCall","src":"8100:18:34"},"nodeType":"YulExpressionStatement","src":"8100:18:34"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8023:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"8030:66:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8020:2:34"},"nodeType":"YulFunctionCall","src":"8020:77:34"},"nodeType":"YulIf","src":"8017:103:34"},{"nodeType":"YulAssignment","src":"8129:20:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8140:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"8147:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8136:3:34"},"nodeType":"YulFunctionCall","src":"8136:13:34"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8129:3:34"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7951:5:34","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7961:3:34","type":""}],"src":"7922:233:34"},{"body":{"nodeType":"YulBlock","src":"8205:32:34","statements":[{"nodeType":"YulAssignment","src":"8215:16:34","value":{"name":"value","nodeType":"YulIdentifier","src":"8226:5:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8215:7:34"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8187:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8197:7:34","type":""}],"src":"8161:76:34"},{"body":{"nodeType":"YulBlock","src":"8287:328:34","statements":[{"nodeType":"YulAssignment","src":"8297:24:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8319:1:34"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"8302:16:34"},"nodeType":"YulFunctionCall","src":"8302:19:34"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8297:1:34"}]},{"nodeType":"YulAssignment","src":"8330:24:34","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8352:1:34"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"8335:16:34"},"nodeType":"YulFunctionCall","src":"8335:19:34"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8330:1:34"}]},{"nodeType":"YulAssignment","src":"8363:17:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8375:1:34"},{"name":"y","nodeType":"YulIdentifier","src":"8378:1:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8371:3:34"},"nodeType":"YulFunctionCall","src":"8371:9:34"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"8363:4:34"}]},{"body":{"nodeType":"YulBlock","src":"8586:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8588:16:34"},"nodeType":"YulFunctionCall","src":"8588:18:34"},"nodeType":"YulExpressionStatement","src":"8588:18:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8512:1:34"},{"kind":"number","nodeType":"YulLiteral","src":"8515:1:34","type":"","value":"0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8508:3:34"},"nodeType":"YulFunctionCall","src":"8508:9:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8501:6:34"},"nodeType":"YulFunctionCall","src":"8501:17:34"},{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"8524:4:34"},{"name":"x","nodeType":"YulIdentifier","src":"8530:1:34"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"8520:3:34"},"nodeType":"YulFunctionCall","src":"8520:12:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8497:3:34"},"nodeType":"YulFunctionCall","src":"8497:36:34"},{"arguments":[{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8555:1:34"},{"kind":"number","nodeType":"YulLiteral","src":"8558:1:34","type":"","value":"0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8551:3:34"},"nodeType":"YulFunctionCall","src":"8551:9:34"},{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"8566:4:34"},{"name":"x","nodeType":"YulIdentifier","src":"8572:1:34"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8562:3:34"},"nodeType":"YulFunctionCall","src":"8562:12:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8547:3:34"},"nodeType":"YulFunctionCall","src":"8547:28:34"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8481:2:34"},"nodeType":"YulFunctionCall","src":"8481:104:34"},"nodeType":"YulIf","src":"8478:130:34"}]},"name":"checked_sub_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8273:1:34","type":""},{"name":"y","nodeType":"YulTypedName","src":"8276:1:34","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"8282:4:34","type":""}],"src":"8243:372:34"},{"body":{"nodeType":"YulBlock","src":"8663:129:34","statements":[{"nodeType":"YulAssignment","src":"8673:32:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8699:5:34"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"8682:16:34"},"nodeType":"YulFunctionCall","src":"8682:23:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8673:5:34"}]},{"body":{"nodeType":"YulBlock","src":"8735:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8737:16:34"},"nodeType":"YulFunctionCall","src":"8737:18:34"},"nodeType":"YulExpressionStatement","src":"8737:18:34"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8720:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"8727:6:34","type":"","value":"0xffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8717:2:34"},"nodeType":"YulFunctionCall","src":"8717:17:34"},"nodeType":"YulIf","src":"8714:43:34"},{"nodeType":"YulAssignment","src":"8766:20:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8777:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"8784:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8773:3:34"},"nodeType":"YulFunctionCall","src":"8773:13:34"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8766:3:34"}]}]},"name":"increment_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8649:5:34","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8659:3:34","type":""}],"src":"8621:171:34"},{"body":{"nodeType":"YulBlock","src":"8840:189:34","statements":[{"nodeType":"YulAssignment","src":"8850:32:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8876:5:34"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"8859:16:34"},"nodeType":"YulFunctionCall","src":"8859:23:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8850:5:34"}]},{"body":{"nodeType":"YulBlock","src":"8972:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8974:16:34"},"nodeType":"YulFunctionCall","src":"8974:18:34"},"nodeType":"YulExpressionStatement","src":"8974:18:34"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8897:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"8904:66:34","type":"","value":"0x8000000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8894:2:34"},"nodeType":"YulFunctionCall","src":"8894:77:34"},"nodeType":"YulIf","src":"8891:103:34"},{"nodeType":"YulAssignment","src":"9003:20:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9014:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"9021:1:34","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9010:3:34"},"nodeType":"YulFunctionCall","src":"9010:13:34"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9003:3:34"}]}]},"name":"decrement_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8826:5:34","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8836:3:34","type":""}],"src":"8798:231:34"}]},"contents":"{\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint16_t_uint8__to_t_uint16_t_uint16_t_uint8__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint40[]\n    function abi_decode_t_array$_t_uint40_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint40_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_array$_t_uint40_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint40(value) -> cleaned {\n        cleaned := and(value, 0xffffffffff)\n    }\n\n    function abi_encode_t_uint40_to_t_uint40_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint40(value))\n    }\n\n    function abi_encode_tuple_t_uint40__to_t_uint40__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint40_to_t_uint40_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_uint40(value) {\n        if iszero(eq(value, cleanup_t_uint40(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint40(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint40(value)\n    }\n\n    function abi_decode_tuple_t_uint40(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint40(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint40(x, y) -> diff {\n        x := cleanup_t_uint40(x)\n        y := cleanup_t_uint40(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffff) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function checked_sub_t_int256(x, y) -> diff {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        diff := sub(x, y)\n\n        // underflow, if y >= 0 and diff > x\n        // overflow, if y < 0 and diff < x\n        if or(\n            and(iszero(slt(y, 0)), sgt(diff, x)),\n            and(slt(y, 0), slt(diff, x))\n        ) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint16(value) -> ret {\n        value := cleanup_t_uint16(value)\n        if eq(value, 0xffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function decrement_t_int256(value) -> ret {\n        value := cleanup_t_int256(value)\n        if eq(value, 0x8000000000000000000000000000000000000000000000000000000000000000) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n}\n","id":34,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"8872":[{"length":32,"start":1023},{"length":32,"start":1191}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78DF39A7 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC1A287E2 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC1A287E2 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xC57F2DFD EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xD68B29FE EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x31E JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x78DF39A7 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x950F2DAE EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xB34E0C47 EQ PUSH2 0x270 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x4E43603A GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x4E43603A EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x6FA0E653 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x776F3843 EQ PUSH2 0x1C0 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x27FF6223 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x48FECAD2 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x4A9359DA EQ PUSH2 0x136 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x346 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xDA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH2 0x421 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x228 PUSH2 0x477 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0xE88 JUMP JUMPDEST PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x769 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A8 PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x308 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x303 SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x81E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x315 SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x338 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x333 SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x842 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH3 0x278D00 DUP2 JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP3 POP PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP2 POP PUSH1 0x0 SWAP1 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x429 PUSH2 0x8C8 JUMP JUMPDEST PUSH2 0x433 PUSH1 0x0 PUSH2 0x94F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x52A JUMPI PUSH1 0x40 MLOAD PUSH32 0x4B60273500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x590 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFD684C3B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x15180 TIMESTAMP PUSH2 0x5A1 SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST SWAP1 POP PUSH2 0x5AE DUP7 DUP7 DUP4 PUSH2 0xA13 JUMP JUMPDEST SWAP2 POP PUSH2 0x5BC DUP8 DUP8 DUP8 DUP5 PUSH2 0xB5C JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP3 PUSH1 0xFF AND PUSH1 0x2 DUP6 PUSH2 0xFFFF AND PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0x5DF SWAP2 SWAP1 PUSH2 0xFF4 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 PUSH2 0xFFFF AND DUP2 GT PUSH2 0x5F3 JUMPI DUP1 PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x64 JUMPDEST SWAP5 POP DUP5 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD4AA3A778F7DE8988DD04FA0D6D79D3BC629ECFD224A29ED9300321606C5F80B DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x756 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1FA40 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH5 0xFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x84A PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8BC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B3 SWAP2 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C5 DUP2 PUSH2 0x94F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8D0 PUSH2 0xC82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8EE PUSH2 0x477 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x94D JUMPI PUSH2 0x911 PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x944 SWAP2 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP5 SWAP1 POP SUB PUSH2 0xA28 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x1 DUP8 DUP8 SWAP1 POP PUSH2 0xA3C SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0xA4C JUMPI PUSH2 0xA4B PUSH2 0x105C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA61 SWAP2 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1D DUP3 PUSH5 0xFFFFFFFFFF AND LT ISZERO PUSH2 0xA7C JUMPI PUSH1 0x0 PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x1D DUP3 PUSH2 0xA89 SWAP2 SWAP1 PUSH2 0x10E4 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP7 DUP7 SWAP1 POP DUP2 LT ISZERO PUSH2 0xB3B JUMPI DUP2 PUSH5 0xFFFFFFFFFF AND DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0xAB5 JUMPI PUSH2 0xAB4 PUSH2 0x105C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xACA SWAP2 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0xB14 JUMPI POP DUP3 PUSH5 0xFFFFFFFFFF AND DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0xAF5 JUMPI PUSH2 0xAF4 PUSH2 0x105C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB0A SWAP2 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0xB28 JUMPI DUP4 DUP1 PUSH2 0xB24 SWAP1 PUSH2 0x111D JUMP JUMPDEST SWAP5 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xB33 SWAP1 PUSH2 0x1146 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA8F JUMP JUMPDEST POP PUSH1 0xFF DUP4 PUSH1 0xFF AND GT PUSH2 0xB4D JUMPI DUP3 PUSH2 0xB50 JUMP JUMPDEST PUSH1 0xFF JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP5 SWAP1 POP SUB PUSH2 0xB71 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xC7A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x1 DUP8 DUP8 SWAP1 POP PUSH2 0xB85 SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0xB95 JUMPI PUSH2 0xB94 PUSH2 0x105C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xBAA SWAP2 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 SWAP2 POP PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0xBBF SWAP2 SWAP1 PUSH2 0x10E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP8 DUP8 SWAP1 POP PUSH2 0xBD3 SWAP2 SWAP1 PUSH2 0x1198 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 SLT PUSH2 0xC5B JUMPI PUSH1 0x0 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0xBF3 JUMPI PUSH2 0xBF2 PUSH2 0x105C JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC08 SWAP2 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 POP DUP3 PUSH5 0xFFFFFFFFFF AND DUP2 PUSH5 0xFFFFFFFFFF AND SUB PUSH2 0xC41 JUMPI DUP5 DUP1 PUSH2 0xC2A SWAP1 PUSH2 0x11DB JUMP JUMPDEST SWAP6 POP POP PUSH1 0x1 DUP2 PUSH2 0xC3A SWAP2 SWAP1 PUSH2 0x10E4 JUMP JUMPDEST SWAP3 POP PUSH2 0xC47 JUMP JUMPDEST POP PUSH2 0xC5B JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0xC53 SWAP1 PUSH2 0x1205 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBD6 JUMP JUMPDEST POP PUSH2 0xFFFF DUP1 AND DUP4 PUSH2 0xFFFF AND GT PUSH2 0xC71 JUMPI DUP3 PUSH2 0xC75 JUMP JUMPDEST PUSH2 0xFFFF JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCA1 DUP2 PUSH2 0xC8A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCBC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD5 DUP2 PUSH2 0xCC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD2B DUP3 PUSH2 0xD00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD3B DUP2 PUSH2 0xD20 JUMP JUMPDEST DUP2 EQ PUSH2 0xD46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD58 DUP2 PUSH2 0xD32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD74 JUMPI PUSH2 0xD73 PUSH2 0xCF6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD82 DUP5 DUP3 DUP6 ADD PUSH2 0xD49 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDA1 DUP2 PUSH2 0xD8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDBC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDD7 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xC98 JUMP JUMPDEST PUSH2 0xDE4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC98 JUMP JUMPDEST PUSH2 0xDF1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD98 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xE02 DUP2 PUSH2 0xD20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE1D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xE48 JUMPI PUSH2 0xE47 PUSH2 0xE23 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE65 JUMPI PUSH2 0xE64 PUSH2 0xE28 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xE81 JUMPI PUSH2 0xE80 PUSH2 0xE2D JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEA1 JUMPI PUSH2 0xEA0 PUSH2 0xCF6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEAF DUP7 DUP3 DUP8 ADD PUSH2 0xD49 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xED0 JUMPI PUSH2 0xECF PUSH2 0xCFB JUMP JUMPDEST JUMPDEST PUSH2 0xEDC DUP7 DUP3 DUP8 ADD PUSH2 0xE32 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH5 0xFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF02 DUP2 PUSH2 0xEE8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF1D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF8C DUP3 PUSH2 0xCC2 JUMP JUMPDEST SWAP2 POP PUSH2 0xF97 DUP4 PUSH2 0xCC2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFA7 JUMPI PUSH2 0xFA6 PUSH2 0xF23 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFBD DUP3 PUSH2 0xCC2 JUMP JUMPDEST SWAP2 POP PUSH2 0xFC8 DUP4 PUSH2 0xCC2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xFD6 DUP2 PUSH2 0xCC2 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xFED JUMPI PUSH2 0xFEC PUSH2 0xF52 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFF DUP3 PUSH2 0xCC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x100A DUP4 PUSH2 0xCC2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1022 JUMPI PUSH2 0x1021 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1033 DUP3 PUSH2 0xCC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x103E DUP4 PUSH2 0xCC2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1056 JUMPI PUSH2 0x1055 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1094 DUP2 PUSH2 0xEE8 JUMP JUMPDEST DUP2 EQ PUSH2 0x109F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10B1 DUP2 PUSH2 0x108B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10CD JUMPI PUSH2 0x10CC PUSH2 0xCF6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10DB DUP5 DUP3 DUP6 ADD PUSH2 0x10A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10EF DUP3 PUSH2 0xEE8 JUMP JUMPDEST SWAP2 POP PUSH2 0x10FA DUP4 PUSH2 0xEE8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH5 0xFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1117 JUMPI PUSH2 0x1116 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1128 DUP3 PUSH2 0xD8B JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 SUB PUSH2 0x113B JUMPI PUSH2 0x113A PUSH2 0xF52 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1151 DUP3 PUSH2 0xCC2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1183 JUMPI PUSH2 0x1182 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A3 DUP3 PUSH2 0x118E JUMP JUMPDEST SWAP2 POP PUSH2 0x11AE DUP4 PUSH2 0x118E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 SLT PUSH1 0x0 DUP5 SLT AND DUP3 DUP3 SGT PUSH1 0x0 DUP6 SLT ISZERO AND OR ISZERO PUSH2 0x11D5 JUMPI PUSH2 0x11D4 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E6 DUP3 PUSH2 0xC8A JUMP JUMPDEST SWAP2 POP PUSH2 0xFFFF DUP3 SUB PUSH2 0x11FA JUMPI PUSH2 0x11F9 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1210 DUP3 PUSH2 0x118E JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 SUB PUSH2 0x1242 JUMPI PUSH2 0x1241 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC CALL 0xB7 0xEE PUSH10 0xE4350BEBEB580379D120 0xE6 0x2F 0x5C SWAP10 PUSH32 0xA0A18B24353FD94DAFD36AA864736F6C63430008140033000000000000000000 ","sourceMap":"457:6572:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;552:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;789:45;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6291:224;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6754:273;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;896:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;975:39:29;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1058:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2068:983:29;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;5756:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;676:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5991:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1178:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;552:38:29;587:3;552:38;:::o;789:45::-;827:7;789:45;:::o;6291:224::-;6357:5;6291:224;;;:::o;6754:273::-;6840:16;6858:17;6877:12;6918:5;:11;6924:4;6918:11;;;;;;;;;;;;;;;;;;;;;;;;;6906:23;;6952:10;:16;6963:4;6952:16;;;;;;;;;;;;;;;;;;;;;;;;;6939:29;;6987:1;6978:10;;6754:273;;;;;:::o;896:36::-;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;975:39:29:-;;;;;;;;;;;;;;;;;;;;;;:::o;1058:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2068:983:29:-;2190:15;2207:16;2225:12;1360:11;1346:25;;:10;:25;;;1342:48;;1380:10;;;;;;;;;;;;;;1342:48;2273:1:::1;2257:18;;:4;:18;;::::0;2253:44:::1;;2284:13;;;;;;;;;;;;;;2253:44;2316:12;2356:6;2338:15;:24;;;;:::i;:::-;2316:47;;2452:44;2472:16;;2490:5;2452:19;:44::i;:::-;2443:53;;2555:47;2572:4;2578:16;;2596:5;2555:16;:47::i;:::-;2543:59;;2681:23;2742:6;2734:15;;2729:1;2716:9;2708:18;;:22;;;;:::i;:::-;2707:42;;;;:::i;:::-;2681:68;;587:3;2770:27;;:15;:27;:65;;2819:15;2770:65;;;587:3;2770:65;2759:76;;2894:8;2880:5;:11;2886:4;2880:11;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;2931:9;2912:10;:16;2923:4;2912:16;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;2972:5;2950:13;:19;2964:4;2950:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;3010:4;3001:43;;;3016:8;3026:9;3037:6;3001:43;;;;;;;;:::i;:::-;;;;;;;;2243:808;;2068:983:::0;;;;;;;:::o;5756:102::-;5815:6;5840:5;:11;5846:4;5840:11;;;;;;;;;;;;;;;;;;;;;;;;;5833:18;;5756:102;;;:::o;676:47::-;715:8;676:47;:::o;5991:108::-;6051:6;6076:10;:16;6087:4;6076:16;;;;;;;;;;;;;;;;;;;;;;;;;6069:23;;5991:108;;;:::o;1178:47::-;;;;;;;;;;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3292:823:29:-;3412:10;3633:1;3614:8;;:15;;:20;3610:34;;3643:1;3636:8;;;;3610:34;3663:20;3686:8;;3713:1;3695:8;;:15;;:19;;;;:::i;:::-;3686:29;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;3663:52;;3725:16;3761:2;3744:13;:19;;;;:44;;3787:1;3744:44;;;3782:2;3766:13;:18;;;;:::i;:::-;3744:44;3725:63;;3829:9;3824:171;3848:8;;:15;;3844:1;:19;3824:171;;;3903:9;3888:24;;:8;;3897:1;3888:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:24;;;;:56;;;;;3931:13;3916:28;;:8;;3925:1;3916:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:28;;;;3888:56;3884:101;;;3964:6;;;;;:::i;:::-;;;;3884:101;3865:3;;;;;:::i;:::-;;;;3824:171;;;;4092:3;4085:4;:10;;;:23;;4104:4;4085:23;;;4098:3;4085:23;4078:30;;;;3292:823;;;;;;:::o;4296:1317::-;4433:13;4486:1;4467:8;;:15;;:20;4463:34;;4496:1;4489:8;;;;4463:34;4588:21;4612:8;;4639:1;4621:8;;:15;;:19;;;;:::i;:::-;4612:29;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;4588:53;;4901:1;4892:10;;4941:22;4983:1;4966:14;:18;;;;:::i;:::-;4941:43;;5052:8;5089:1;5070:8;;:15;;5063:27;;;;:::i;:::-;5052:38;;5047:411;5097:1;5092;:6;5047:411;;5119:17;5139:8;;5156:1;5139:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;5119:40;;5252:15;5238:29;;:10;:29;;;5234:214;;5287:8;;;;;:::i;:::-;;;;5344:1;5331:10;:14;;;;:::i;:::-;5313:32;;5234:214;;;5428:5;;;5234:214;5105:353;5100:3;;;;;:::i;:::-;;;;5047:411;;;;5562:16;5553:25;;:6;:25;;;:53;;5600:6;5553:53;;;5581:16;5553:53;5546:60;;;;4296:1317;;;;;;;:::o;656:96:12:-;709:7;735:10;728:17;;656:96;:::o;7:89:34:-;43:7;83:6;76:5;72:18;61:29;;7:89;;;:::o;102:115::-;187:23;204:5;187:23;:::i;:::-;182:3;175:36;102:115;;:::o;223:218::-;314:4;352:2;341:9;337:18;329:26;;365:69;431:1;420:9;416:17;407:6;365:69;:::i;:::-;223:218;;;;:::o;447:77::-;484:7;513:5;502:16;;447:77;;;:::o;530:118::-;617:24;635:5;617:24;:::i;:::-;612:3;605:37;530:118;;:::o;654:222::-;747:4;785:2;774:9;770:18;762:26;;798:71;866:1;855:9;851:17;842:6;798:71;:::i;:::-;654:222;;;;:::o;963:117::-;1072:1;1069;1062:12;1086:117;1195:1;1192;1185:12;1209:126;1246:7;1286:42;1279:5;1275:54;1264:65;;1209:126;;;:::o;1341:96::-;1378:7;1407:24;1425:5;1407:24;:::i;:::-;1396:35;;1341:96;;;:::o;1443:122::-;1516:24;1534:5;1516:24;:::i;:::-;1509:5;1506:35;1496:63;;1555:1;1552;1545:12;1496:63;1443:122;:::o;1571:139::-;1617:5;1655:6;1642:20;1633:29;;1671:33;1698:5;1671:33;:::i;:::-;1571:139;;;;:::o;1716:329::-;1775:6;1824:2;1812:9;1803:7;1799:23;1795:32;1792:119;;;1830:79;;:::i;:::-;1792:119;1950:1;1975:53;2020:7;2011:6;2000:9;1996:22;1975:53;:::i;:::-;1965:63;;1921:117;1716:329;;;;:::o;2051:86::-;2086:7;2126:4;2119:5;2115:16;2104:27;;2051:86;;;:::o;2143:112::-;2226:22;2242:5;2226:22;:::i;:::-;2221:3;2214:35;2143:112;;:::o;2261:214::-;2350:4;2388:2;2377:9;2373:18;2365:26;;2401:67;2465:1;2454:9;2450:17;2441:6;2401:67;:::i;:::-;2261:214;;;;:::o;2481:426::-;2622:4;2660:2;2649:9;2645:18;2637:26;;2673:69;2739:1;2728:9;2724:17;2715:6;2673:69;:::i;:::-;2752:70;2818:2;2807:9;2803:18;2794:6;2752:70;:::i;:::-;2832:68;2896:2;2885:9;2881:18;2872:6;2832:68;:::i;:::-;2481:426;;;;;;:::o;2913:118::-;3000:24;3018:5;3000:24;:::i;:::-;2995:3;2988:37;2913:118;;:::o;3037:222::-;3130:4;3168:2;3157:9;3153:18;3145:26;;3181:71;3249:1;3238:9;3234:17;3225:6;3181:71;:::i;:::-;3037:222;;;;:::o;3265:117::-;3374:1;3371;3364:12;3388:117;3497:1;3494;3487:12;3511:117;3620:1;3617;3610:12;3650:567;3722:8;3732:6;3782:3;3775:4;3767:6;3763:17;3759:27;3749:122;;3790:79;;:::i;:::-;3749:122;3903:6;3890:20;3880:30;;3933:18;3925:6;3922:30;3919:117;;;3955:79;;:::i;:::-;3919:117;4069:4;4061:6;4057:17;4045:29;;4123:3;4115:4;4107:6;4103:17;4093:8;4089:32;4086:41;4083:128;;;4130:79;;:::i;:::-;4083:128;3650:567;;;;;:::o;4223:702::-;4317:6;4325;4333;4382:2;4370:9;4361:7;4357:23;4353:32;4350:119;;;4388:79;;:::i;:::-;4350:119;4508:1;4533:53;4578:7;4569:6;4558:9;4554:22;4533:53;:::i;:::-;4523:63;;4479:117;4663:2;4652:9;4648:18;4635:32;4694:18;4686:6;4683:30;4680:117;;;4716:79;;:::i;:::-;4680:117;4829:79;4900:7;4891:6;4880:9;4876:22;4829:79;:::i;:::-;4811:97;;;;4606:312;4223:702;;;;;:::o;4931:95::-;4967:7;5007:12;5000:5;4996:24;4985:35;;4931:95;;;:::o;5032:115::-;5117:23;5134:5;5117:23;:::i;:::-;5112:3;5105:36;5032:115;;:::o;5153:218::-;5244:4;5282:2;5271:9;5267:18;5259:26;;5295:69;5361:1;5350:9;5346:17;5337:6;5295:69;:::i;:::-;5153:218;;;;:::o;5377:180::-;5425:77;5422:1;5415:88;5522:4;5519:1;5512:15;5546:4;5543:1;5536:15;5563:180;5611:77;5608:1;5601:88;5708:4;5705:1;5698:15;5732:4;5729:1;5722:15;5749:185;5789:1;5806:20;5824:1;5806:20;:::i;:::-;5801:25;;5840:20;5858:1;5840:20;:::i;:::-;5835:25;;5879:1;5869:35;;5884:18;;:::i;:::-;5869:35;5926:1;5923;5919:9;5914:14;;5749:185;;;;:::o;5940:410::-;5980:7;6003:20;6021:1;6003:20;:::i;:::-;5998:25;;6037:20;6055:1;6037:20;:::i;:::-;6032:25;;6092:1;6089;6085:9;6114:30;6132:11;6114:30;:::i;:::-;6103:41;;6293:1;6284:7;6280:15;6277:1;6274:22;6254:1;6247:9;6227:83;6204:139;;6323:18;;:::i;:::-;6204:139;5988:362;5940:410;;;;:::o;6356:191::-;6396:3;6415:20;6433:1;6415:20;:::i;:::-;6410:25;;6449:20;6467:1;6449:20;:::i;:::-;6444:25;;6492:1;6489;6485:9;6478:16;;6513:3;6510:1;6507:10;6504:36;;;6520:18;;:::i;:::-;6504:36;6356:191;;;;:::o;6553:194::-;6593:4;6613:20;6631:1;6613:20;:::i;:::-;6608:25;;6647:20;6665:1;6647:20;:::i;:::-;6642:25;;6691:1;6688;6684:9;6676:17;;6715:1;6709:4;6706:11;6703:37;;;6720:18;;:::i;:::-;6703:37;6553:194;;;;:::o;6753:180::-;6801:77;6798:1;6791:88;6898:4;6895:1;6888:15;6922:4;6919:1;6912:15;6939:120;7011:23;7028:5;7011:23;:::i;:::-;7004:5;7001:34;6991:62;;7049:1;7046;7039:12;6991:62;6939:120;:::o;7065:137::-;7110:5;7148:6;7135:20;7126:29;;7164:32;7190:5;7164:32;:::i;:::-;7065:137;;;;:::o;7208:327::-;7266:6;7315:2;7303:9;7294:7;7290:23;7286:32;7283:119;;;7321:79;;:::i;:::-;7283:119;7441:1;7466:52;7510:7;7501:6;7490:9;7486:22;7466:52;:::i;:::-;7456:62;;7412:116;7208:327;;;;:::o;7541:202::-;7580:4;7600:19;7617:1;7600:19;:::i;:::-;7595:24;;7633:19;7650:1;7633:19;:::i;:::-;7628:24;;7676:1;7673;7669:9;7661:17;;7700:12;7694:4;7691:22;7688:48;;;7716:18;;:::i;:::-;7688:48;7541:202;;;;:::o;7749:167::-;7786:3;7809:22;7825:5;7809:22;:::i;:::-;7800:31;;7853:4;7846:5;7843:15;7840:41;;7861:18;;:::i;:::-;7840:41;7908:1;7901:5;7897:13;7890:20;;7749:167;;;:::o;7922:233::-;7961:3;7984:24;8002:5;7984:24;:::i;:::-;7975:33;;8030:66;8023:5;8020:77;8017:103;;8100:18;;:::i;:::-;8017:103;8147:1;8140:5;8136:13;8129:20;;7922:233;;;:::o;8161:76::-;8197:7;8226:5;8215:16;;8161:76;;;:::o;8243:372::-;8282:4;8302:19;8319:1;8302:19;:::i;:::-;8297:24;;8335:19;8352:1;8335:19;:::i;:::-;8330:24;;8378:1;8375;8371:9;8363:17;;8572:1;8566:4;8562:12;8558:1;8555;8551:9;8547:28;8530:1;8524:4;8520:12;8515:1;8512;8508:9;8501:17;8497:36;8481:104;8478:130;;;8588:18;;:::i;:::-;8478:130;8243:372;;;;:::o;8621:171::-;8659:3;8682:23;8699:5;8682:23;:::i;:::-;8673:32;;8727:6;8720:5;8717:17;8714:43;;8737:18;;:::i;:::-;8714:43;8784:1;8777:5;8773:13;8766:20;;8621:171;;;:::o;8798:231::-;8836:3;8859:23;8876:5;8859:23;:::i;:::-;8850:32;;8904:66;8897:5;8894:77;8891:103;;8974:18;;:::i;:::-;8891:103;9021:1;9014:5;9010:13;9003:20;;8798:231;;;:::o"},"methodIdentifiers":{"FREQ_WINDOW()":"48fecad2","GRACE_PERIOD()":"c1a287e2","MAX_SCORE()":"27ff6223","getUserFreq30(address)":"4a9359da","getUserScore(address)":"b34e0c47","getUserStats(address)":"4e43603a","getUserStreak(address)":"c57f2dfd","lastScoredDay(address)":"d68b29fe","owner()":"8da5cb5b","renounceOwnership()":"715018a6","savingsPool()":"6fa0e653","score(address)":"776f3843","streakDays(address)":"78df39a7","transferOwnership(address)":"f2fde38b","updateScore(address,uint40[])":"950f2dae"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_savingsPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidUser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyPool\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"score\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"streak\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"freq30\",\"type\":\"uint8\"}],\"name\":\"ScoreSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FREQ_WINDOW\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GRACE_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SCORE\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getUserFreq30\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserScore\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserStats\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"userScore\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"userStreak\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"freq30\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserStreak\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastScoredDay\",\"outputs\":[{\"internalType\":\"uint40\",\"name\":\"\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"savingsPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"score\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"streakDays\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint40[]\",\"name\":\"userDaysFromPool\",\"type\":\"uint40[]\"}],\"name\":\"updateScore\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"newScore\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"newStreak\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"freq30\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Score formula: SCS = min(100, (streakDays * 2) + freq30)Streak: consecutive days with deposits (36h grace period)Frequency: unique deposit days in last 30 days\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_owner\":\"Address of the contract owner\",\"_savingsPool\":\"Address of the savings pool contract\"}},\"getUserFreq30(address)\":{\"details\":\"This is a view function that recalculates from pool data\",\"returns\":{\"_0\":\"Deposit frequency in last 30 days\"}},\"getUserScore(address)\":{\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"Current savings consistency score\"}},\"getUserStats(address)\":{\"params\":{\"user\":\"User address\"},\"returns\":{\"freq30\":\"Frequency in last 30 days (simplified)\",\"userScore\":\"Current score\",\"userStreak\":\"Current streak\"}},\"getUserStreak(address)\":{\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"Current streak in days\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateScore(address,uint40[])\":{\"params\":{\"user\":\"User address\",\"userDaysFromPool\":\"Array of deposit day indices from the pool\"},\"returns\":{\"freq30\":\"Frequency in last 30 days\",\"newScore\":\"Updated score (0-100)\",\"newStreak\":\"Current streak in days\"}}},\"title\":\"ScoreRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"FREQ_WINDOW()\":{\"notice\":\"Frequency calculation window (30 days)\"},\"GRACE_PERIOD()\":{\"notice\":\"Grace period for streak continuation (36 hours in seconds)\"},\"MAX_SCORE()\":{\"notice\":\"Maximum possible score\"},\"constructor\":{\"notice\":\"Constructor\"},\"getUserFreq30(address)\":{\"notice\":\"Get user's frequency in last 30 days\"},\"getUserScore(address)\":{\"notice\":\"Get user's current score\"},\"getUserStats(address)\":{\"notice\":\"Get comprehensive user stats\"},\"getUserStreak(address)\":{\"notice\":\"Get user's current streak\"},\"lastScoredDay(address)\":{\"notice\":\"Last scored day for each user (to handle edge cases)\"},\"savingsPool()\":{\"notice\":\"Address of the authorized savings pool\"},\"score(address)\":{\"notice\":\"User scores (0-100)\"},\"streakDays(address)\":{\"notice\":\"User streak days\"},\"updateScore(address,uint40[])\":{\"notice\":\"Update user's savings consistency score\"}},\"notice\":\"Calculates and stores Savings Consistency Score (SCS) for MicroSave users\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ScoreRegistry.sol\":\"ScoreRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/ScoreRegistry.sol\":{\"keccak256\":\"0x5f19a4a20e97f6ed668ca53090ac9894d41317c4825fde7265b87616b35b99fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06910409dbd196ced6d9dfdcf5a899168379d9019928e483cd62ebcc655c376b\",\"dweb:/ipfs/QmZwjvxt8TuLYdQqZgtwaDzwikpP4QAPK5cGphS5u17wDL\"]},\"contracts/interfaces/IScoreRegistry.sol\":{\"keccak256\":\"0xbc63b9cfedf632c4e4b9ab8e0a0440381c46618ffd21b3c559fd0044883992fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2976f49c5f4f2a441442e392be12772f84901f0948c3dcf5ed6f8eb6fe86e110\",\"dweb:/ipfs/QmVAvfwQ5xv2PwLfRGPrU9DEAKzUBY8fVa7zLmZ6Un86n3\"]}},\"version\":1}"}},"contracts/interfaces/IRewardVault.sol":{"IRewardVault":{"abi":[{"inputs":[],"name":"InsufficientPoints","type":"error"},{"inputs":[],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"OnlyPool","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint16","name":"streak","type":"uint16"}],"name":"PointsAwarded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"PointsClaimed","type":"event"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"claimPoints","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getPoints","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint16","name":"streak","type":"uint16"}],"name":"onDepositDay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"points","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"savingsPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"claimPoints(uint256)":"3ac795de","getPoints(address)":"ee204abb","onDepositDay(address,uint16)":"b0fb5664","points(address)":"358b8166","savingsPool()":"6fa0e653"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientPoints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyPool\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"streak\",\"type\":\"uint16\"}],\"name\":\"PointsAwarded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PointsClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"streak\",\"type\":\"uint16\"}],\"name\":\"onDepositDay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"points\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"savingsPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Manages point allocation and claiming for consistent savers\",\"kind\":\"dev\",\"methods\":{\"claimPoints(uint256)\":{\"params\":{\"amount\":\"Amount of points to claim\"}},\"getPoints(address)\":{\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"Current point balance\"}},\"onDepositDay(address,uint16)\":{\"params\":{\"streak\":\"Current streak days\",\"user\":\"User who made the deposit\"}}},\"title\":\"IRewardVault\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimPoints(uint256)\":{\"notice\":\"Claim accumulated points (burns them)\"},\"getPoints(address)\":{\"notice\":\"Get user's current point balance\"},\"onDepositDay(address,uint16)\":{\"notice\":\"Called by SavingsPool on each deposit day\"}},\"notice\":\"Interface for the MicroSave reward points system\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IRewardVault.sol\":\"IRewardVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IRewardVault.sol\":{\"keccak256\":\"0xf38aab45dab48b7c7a79ff54afae0771a703e8199347b1c2ddff2526d00ea361\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ff2de5e6672df5a16e2fab2ae0f76043b5554748eafda9ea4a7fa0217fb911c\",\"dweb:/ipfs/QmZ7cN77QSpQUMZK83DMaY1FcLt5QPGfJfPsU7zcDSnM2y\"]}},\"version\":1}"}},"contracts/interfaces/ISavingsPool.sol":{"ISavingsPool":{"abi":[{"inputs":[],"name":"ExcessiveFee","type":"error"},{"inputs":[],"name":"InsufficientAmount","type":"error"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidToken","type":"error"},{"inputs":[],"name":"NoPermitSupport","type":"error"},{"inputs":[],"name":"ZeroAddress","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"netAmount","type":"uint256"},{"indexed":false,"internalType":"uint40","name":"dayIndex","type":"uint40"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"depositFeeBps","type":"uint16"}],"name":"FeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint16","name":"newScore","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"streakDays","type":"uint16"},{"indexed":false,"internalType":"uint8","name":"freq30","type":"uint8"}],"name":"ScoreUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"treasury","type":"address"}],"name":"TreasuryUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[],"name":"STABLE","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"balances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"depositFeeBps","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permitDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardVault","outputs":[{"internalType":"contract IRewardVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"scoreRegistry","outputs":[{"internalType":"contract IScoreRegistry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"depositFeeBps","type":"uint16"}],"name":"setFeeBps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"treasury","type":"address"}],"name":"setTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalDeposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"STABLE()":"54d9f653","balances(address)":"27e235e3","deposit(uint256)":"b6b55f25","depositFeeBps()":"ab879827","permitDeposit(uint256,uint256,uint8,bytes32,bytes32)":"ce84daad","rewardVault()":"3a2c6777","scoreRegistry()":"3eb8104a","setFeeBps(uint16)":"023b1fc9","setTreasury(address)":"f0f44260","totalDeposits()":"7d882097","treasury()":"61d027b3","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ExcessiveFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoPermitSupport\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"netAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint40\",\"name\":\"dayIndex\",\"type\":\"uint40\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"depositFeeBps\",\"type\":\"uint16\"}],\"name\":\"FeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"newScore\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"streakDays\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"freq30\",\"type\":\"uint8\"}],\"name\":\"ScoreUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"STABLE\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositFeeBps\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permitDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardVault\",\"outputs\":[{\"internalType\":\"contract IRewardVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scoreRegistry\",\"outputs\":[{\"internalType\":\"contract IScoreRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"depositFeeBps\",\"type\":\"uint16\"}],\"name\":\"setFeeBps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Handles stablecoin deposits/withdrawals and integrates with scoring system\",\"kind\":\"dev\",\"methods\":{\"deposit(uint256)\":{\"params\":{\"amount\":\"Amount to deposit\"}},\"permitDeposit(uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amount\":\"Amount to deposit\",\"deadline\":\"Permit deadline\",\"r\":\"Signature parameter\",\"s\":\"Signature parameter\",\"v\":\"Signature parameter\"}},\"setFeeBps(uint16)\":{\"params\":{\"depositFeeBps\":\"Fee in basis points (0-100)\"}},\"setTreasury(address)\":{\"params\":{\"treasury\":\"New treasury address\"}},\"withdraw(uint256)\":{\"params\":{\"amount\":\"Amount to withdraw\"}}},\"title\":\"ISavingsPool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(uint256)\":{\"notice\":\"Deposit stablecoin into the savings pool\"},\"permitDeposit(uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Deposit with EIP-2612 permit (gasless approval)\"},\"setFeeBps(uint16)\":{\"notice\":\"Set deposit fee (only owner)\"},\"setTreasury(address)\":{\"notice\":\"Set treasury address (only owner)\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw stablecoin from the savings pool\"}},\"notice\":\"Interface for the core MicroSave savings pool contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISavingsPool.sol\":\"ISavingsPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"contracts/interfaces/IRewardVault.sol\":{\"keccak256\":\"0xf38aab45dab48b7c7a79ff54afae0771a703e8199347b1c2ddff2526d00ea361\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ff2de5e6672df5a16e2fab2ae0f76043b5554748eafda9ea4a7fa0217fb911c\",\"dweb:/ipfs/QmZ7cN77QSpQUMZK83DMaY1FcLt5QPGfJfPsU7zcDSnM2y\"]},\"contracts/interfaces/ISavingsPool.sol\":{\"keccak256\":\"0xe85b4dbc8d88412ba415e944e59611c8ca20e5991c20eb87e5681aa029b0db1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c7e1f0f66f7b519e6e22e7288c0ad9b9e4308e9bab7e9e3e08087d677741229\",\"dweb:/ipfs/QmUA6zMD4kKR4yHAtMwgU4LJEsfF9AsjgBU6R5ZGHATpsU\"]},\"contracts/interfaces/IScoreRegistry.sol\":{\"keccak256\":\"0xbc63b9cfedf632c4e4b9ab8e0a0440381c46618ffd21b3c559fd0044883992fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2976f49c5f4f2a441442e392be12772f84901f0948c3dcf5ed6f8eb6fe86e110\",\"dweb:/ipfs/QmVAvfwQ5xv2PwLfRGPrU9DEAKzUBY8fVa7zLmZ6Un86n3\"]}},\"version\":1}"}},"contracts/interfaces/IScoreRegistry.sol":{"IScoreRegistry":{"abi":[{"inputs":[],"name":"InvalidUser","type":"error"},{"inputs":[],"name":"OnlyPool","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint16","name":"score","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"streak","type":"uint16"},{"indexed":false,"internalType":"uint8","name":"freq30","type":"uint8"}],"name":"ScoreSet","type":"event"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserFreq30","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserScore","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserStats","outputs":[{"internalType":"uint16","name":"score","type":"uint16"},{"internalType":"uint16","name":"streak","type":"uint16"},{"internalType":"uint8","name":"freq30","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserStreak","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"savingsPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"score","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"streakDays","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint40[]","name":"userDaysFromPool","type":"uint40[]"}],"name":"updateScore","outputs":[{"internalType":"uint16","name":"newScore","type":"uint16"},{"internalType":"uint16","name":"newStreak","type":"uint16"},{"internalType":"uint8","name":"freq30","type":"uint8"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getUserFreq30(address)":"4a9359da","getUserScore(address)":"b34e0c47","getUserStats(address)":"4e43603a","getUserStreak(address)":"c57f2dfd","savingsPool()":"6fa0e653","score(address)":"776f3843","streakDays(address)":"78df39a7","updateScore(address,uint40[])":"950f2dae"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidUser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyPool\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"score\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"streak\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"freq30\",\"type\":\"uint8\"}],\"name\":\"ScoreSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserFreq30\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserScore\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserStats\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"score\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"streak\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"freq30\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserStreak\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"savingsPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"score\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"streakDays\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint40[]\",\"name\":\"userDaysFromPool\",\"type\":\"uint40[]\"}],\"name\":\"updateScore\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"newScore\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"newStreak\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"freq30\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Calculates and stores user scores based on deposit frequency and streaks\",\"kind\":\"dev\",\"methods\":{\"getUserFreq30(address)\":{\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"Deposit frequency in last 30 days\"}},\"getUserScore(address)\":{\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"Current savings consistency score\"}},\"getUserStats(address)\":{\"params\":{\"user\":\"User address\"},\"returns\":{\"freq30\":\"Frequency in last 30 days\",\"score\":\"Current score\",\"streak\":\"Current streak\"}},\"getUserStreak(address)\":{\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"Current streak in days\"}},\"updateScore(address,uint40[])\":{\"params\":{\"user\":\"User address\",\"userDaysFromPool\":\"Array of deposit day indices from the pool\"},\"returns\":{\"freq30\":\"Frequency in last 30 days\",\"newScore\":\"Updated score (0-100)\",\"newStreak\":\"Current streak in days\"}}},\"title\":\"IScoreRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getUserFreq30(address)\":{\"notice\":\"Get user's frequency in last 30 days\"},\"getUserScore(address)\":{\"notice\":\"Get user's current score\"},\"getUserStats(address)\":{\"notice\":\"Get comprehensive user stats\"},\"getUserStreak(address)\":{\"notice\":\"Get user's current streak\"},\"updateScore(address,uint40[])\":{\"notice\":\"Update user's savings consistency score\"}},\"notice\":\"Interface for the Savings Consistency Score (SCS) registry\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IScoreRegistry.sol\":\"IScoreRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IScoreRegistry.sol\":{\"keccak256\":\"0xbc63b9cfedf632c4e4b9ab8e0a0440381c46618ffd21b3c559fd0044883992fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2976f49c5f4f2a441442e392be12772f84901f0948c3dcf5ed6f8eb6fe86e110\",\"dweb:/ipfs/QmVAvfwQ5xv2PwLfRGPrU9DEAKzUBY8fVa7zLmZ6Un86n3\"]}},\"version\":1}"}},"contracts/mocks/MockERC20.sol":{"MockERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals_","type":"uint8"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"recipients","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"batchMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"faucet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1041":{"entryPoint":null,"id":1041,"parameterSlots":1,"returnSlots":0},"@_4187":{"entryPoint":null,"id":4187,"parameterSlots":2,"returnSlots":0},"@_451":{"entryPoint":null,"id":451,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_9589":{"entryPoint":null,"id":9589,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_4234":{"entryPoint":590,"id":4234,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":683,"id":146,"parameterSlots":1,"returnSlots":0},"@getStringSlot_2317":{"entryPoint":990,"id":2317,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_2157":{"entryPoint":502,"id":2157,"parameterSlots":2,"returnSlots":1},"@toShortString_2059":{"entryPoint":881,"id":2059,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1277,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1543,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1352,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8_fromMemory":{"entryPoint":1442,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_address_fromMemory":{"entryPoint":1566,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2560,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2616,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2760,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2633,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2577,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":2650,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2825,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1148,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1000,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1179,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":2872,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1853,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2861,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1742,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2743,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2174,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1497,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2606,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1465,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1989,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":1403,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2135,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":2911,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":2009,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2329,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1233,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1874,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1800,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2299,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1094,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1999,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2267,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":1753,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1047,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2049,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":2888,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1020,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1025,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1015,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1010,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1030,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1890,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2254,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2107,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1903,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2059,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1517,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":1416,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2102,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12971:34","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:34","statements":[{"nodeType":"YulAssignment","src":"57:19:34","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:34","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:34"},"nodeType":"YulFunctionCall","src":"67:9:34"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:34"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:34","type":""}],"src":"7:75:34"},{"body":{"nodeType":"YulBlock","src":"177:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:34"},"nodeType":"YulFunctionCall","src":"187:12:34"},"nodeType":"YulExpressionStatement","src":"187:12:34"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:34"},{"body":{"nodeType":"YulBlock","src":"300:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:34"},"nodeType":"YulFunctionCall","src":"310:12:34"},"nodeType":"YulExpressionStatement","src":"310:12:34"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:34"},{"body":{"nodeType":"YulBlock","src":"423:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:34"},"nodeType":"YulFunctionCall","src":"433:12:34"},"nodeType":"YulExpressionStatement","src":"433:12:34"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:34"},{"body":{"nodeType":"YulBlock","src":"546:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:34"},"nodeType":"YulFunctionCall","src":"556:12:34"},"nodeType":"YulExpressionStatement","src":"556:12:34"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:34"},{"body":{"nodeType":"YulBlock","src":"628:54:34","statements":[{"nodeType":"YulAssignment","src":"638:38:34","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:34","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:34"},"nodeType":"YulFunctionCall","src":"652:14:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:34","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:34"},"nodeType":"YulFunctionCall","src":"668:7:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:34"},"nodeType":"YulFunctionCall","src":"648:28:34"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:34"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:34","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:34","type":""}],"src":"580:102:34"},{"body":{"nodeType":"YulBlock","src":"716:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:34"},"nodeType":"YulFunctionCall","src":"726:88:34"},"nodeType":"YulExpressionStatement","src":"726:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:34","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:34"},"nodeType":"YulFunctionCall","src":"823:15:34"},"nodeType":"YulExpressionStatement","src":"823:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:34"},"nodeType":"YulFunctionCall","src":"847:15:34"},"nodeType":"YulExpressionStatement","src":"847:15:34"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:34"},{"body":{"nodeType":"YulBlock","src":"917:238:34","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:34","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:34"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:34"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:34"},"nodeType":"YulFunctionCall","src":"957:27:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:34"},"nodeType":"YulFunctionCall","src":"945:40:34"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:34"},"nodeType":"YulFunctionCall","src":"1098:18:34"},"nodeType":"YulExpressionStatement","src":"1098:18:34"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:34"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:34"},"nodeType":"YulFunctionCall","src":"1036:34:34"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:34"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:34"},"nodeType":"YulFunctionCall","src":"1072:22:34"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:34"},"nodeType":"YulFunctionCall","src":"1033:62:34"},"nodeType":"YulIf","src":"1030:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:34","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:34"},"nodeType":"YulFunctionCall","src":"1127:22:34"},"nodeType":"YulExpressionStatement","src":"1127:22:34"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:34","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:34","type":""}],"src":"874:281:34"},{"body":{"nodeType":"YulBlock","src":"1202:88:34","statements":[{"nodeType":"YulAssignment","src":"1212:30:34","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:34"},"nodeType":"YulFunctionCall","src":"1222:20:34"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:34"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:34"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:34"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:34"},"nodeType":"YulFunctionCall","src":"1251:33:34"},"nodeType":"YulExpressionStatement","src":"1251:33:34"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:34","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:34","type":""}],"src":"1161:129:34"},{"body":{"nodeType":"YulBlock","src":"1363:241:34","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:34"},"nodeType":"YulFunctionCall","src":"1470:18:34"},"nodeType":"YulExpressionStatement","src":"1470:18:34"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:34"},"nodeType":"YulFunctionCall","src":"1437:30:34"},"nodeType":"YulIf","src":"1434:56:34"},{"nodeType":"YulAssignment","src":"1500:37:34","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:34"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:34"},"nodeType":"YulFunctionCall","src":"1508:29:34"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:34"}]},{"nodeType":"YulAssignment","src":"1574:23:34","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:34"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:34"},"nodeType":"YulFunctionCall","src":"1582:15:34"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:34"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:34","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:34","type":""}],"src":"1296:308:34"},{"body":{"nodeType":"YulBlock","src":"1672:184:34","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:34","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:34","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:34"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:34"},"nodeType":"YulFunctionCall","src":"1772:11:34"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:34"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:34"},"nodeType":"YulFunctionCall","src":"1791:11:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:34"},"nodeType":"YulFunctionCall","src":"1785:18:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:34"},"nodeType":"YulFunctionCall","src":"1765:39:34"},"nodeType":"YulExpressionStatement","src":"1765:39:34"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:34"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:34"},"nodeType":"YulFunctionCall","src":"1709:13:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:34","statements":[{"nodeType":"YulAssignment","src":"1725:15:34","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:34"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:34"},"nodeType":"YulFunctionCall","src":"1730:10:34"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:34"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:34","statements":[]},"src":"1701:113:34"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:34"},"nodeType":"YulFunctionCall","src":"1830:16:34"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:34","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:34"},"nodeType":"YulFunctionCall","src":"1823:27:34"},"nodeType":"YulExpressionStatement","src":"1823:27:34"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:34","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:34","type":""}],"src":"1610:246:34"},{"body":{"nodeType":"YulBlock","src":"1957:339:34","statements":[{"nodeType":"YulAssignment","src":"1967:75:34","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:34"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:34"},"nodeType":"YulFunctionCall","src":"1992:49:34"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:34"},"nodeType":"YulFunctionCall","src":"1976:66:34"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:34"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:34"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:34"},"nodeType":"YulFunctionCall","src":"2051:21:34"},"nodeType":"YulExpressionStatement","src":"2051:21:34"},{"nodeType":"YulVariableDeclaration","src":"2081:27:34","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:34"},"nodeType":"YulFunctionCall","src":"2092:16:34"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:34"},"nodeType":"YulFunctionCall","src":"2148:79:34"},"nodeType":"YulExpressionStatement","src":"2148:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:34"},"nodeType":"YulFunctionCall","src":"2123:16:34"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:34"},"nodeType":"YulFunctionCall","src":"2120:25:34"},"nodeType":"YulIf","src":"2117:112:34"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:34"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:34"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:34"},"nodeType":"YulFunctionCall","src":"2238:52:34"},"nodeType":"YulExpressionStatement","src":"2238:52:34"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:34","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:34","type":""}],"src":"1862:434:34"},{"body":{"nodeType":"YulBlock","src":"2389:282:34","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:34"},"nodeType":"YulFunctionCall","src":"2440:79:34"},"nodeType":"YulExpressionStatement","src":"2440:79:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:34","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:34"},"nodeType":"YulFunctionCall","src":"2413:17:34"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:34"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:34"},"nodeType":"YulFunctionCall","src":"2409:27:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:34"},"nodeType":"YulFunctionCall","src":"2402:35:34"},"nodeType":"YulIf","src":"2399:122:34"},{"nodeType":"YulVariableDeclaration","src":"2530:27:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:34"},"nodeType":"YulFunctionCall","src":"2544:13:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:34","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:34","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:34"},"nodeType":"YulFunctionCall","src":"2634:17:34"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:34"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:34"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:34"},"nodeType":"YulFunctionCall","src":"2575:90:34"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:34"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:34","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:34","type":""}],"src":"2316:355:34"},{"body":{"nodeType":"YulBlock","src":"2720:43:34","statements":[{"nodeType":"YulAssignment","src":"2730:27:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2745:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"2752:4:34","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2741:3:34"},"nodeType":"YulFunctionCall","src":"2741:16:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2730:7:34"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2702:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2712:7:34","type":""}],"src":"2677:86:34"},{"body":{"nodeType":"YulBlock","src":"2810:77:34","statements":[{"body":{"nodeType":"YulBlock","src":"2865:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2874:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2877:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2867:6:34"},"nodeType":"YulFunctionCall","src":"2867:12:34"},"nodeType":"YulExpressionStatement","src":"2867:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2833:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2856:5:34"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"2840:15:34"},"nodeType":"YulFunctionCall","src":"2840:22:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2830:2:34"},"nodeType":"YulFunctionCall","src":"2830:33:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2823:6:34"},"nodeType":"YulFunctionCall","src":"2823:41:34"},"nodeType":"YulIf","src":"2820:61:34"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2803:5:34","type":""}],"src":"2769:118:34"},{"body":{"nodeType":"YulBlock","src":"2954:78:34","statements":[{"nodeType":"YulAssignment","src":"2964:22:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2973:5:34"},"nodeType":"YulFunctionCall","src":"2973:13:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2964:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3020:5:34"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"2995:24:34"},"nodeType":"YulFunctionCall","src":"2995:31:34"},"nodeType":"YulExpressionStatement","src":"2995:31:34"}]},"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2932:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"2940:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2948:5:34","type":""}],"src":"2893:139:34"},{"body":{"nodeType":"YulBlock","src":"3083:81:34","statements":[{"nodeType":"YulAssignment","src":"3093:65:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3108:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"3115:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3104:3:34"},"nodeType":"YulFunctionCall","src":"3104:54:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3093:7:34"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3065:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3075:7:34","type":""}],"src":"3038:126:34"},{"body":{"nodeType":"YulBlock","src":"3215:51:34","statements":[{"nodeType":"YulAssignment","src":"3225:35:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3254:5:34"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3236:17:34"},"nodeType":"YulFunctionCall","src":"3236:24:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3225:7:34"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3197:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3207:7:34","type":""}],"src":"3170:96:34"},{"body":{"nodeType":"YulBlock","src":"3315:79:34","statements":[{"body":{"nodeType":"YulBlock","src":"3372:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3381:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3384:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3374:6:34"},"nodeType":"YulFunctionCall","src":"3374:12:34"},"nodeType":"YulExpressionStatement","src":"3374:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3338:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3363:5:34"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3345:17:34"},"nodeType":"YulFunctionCall","src":"3345:24:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3335:2:34"},"nodeType":"YulFunctionCall","src":"3335:35:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3328:6:34"},"nodeType":"YulFunctionCall","src":"3328:43:34"},"nodeType":"YulIf","src":"3325:63:34"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3308:5:34","type":""}],"src":"3272:122:34"},{"body":{"nodeType":"YulBlock","src":"3463:80:34","statements":[{"nodeType":"YulAssignment","src":"3473:22:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3488:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3482:5:34"},"nodeType":"YulFunctionCall","src":"3482:13:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3473:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3531:5:34"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3504:26:34"},"nodeType":"YulFunctionCall","src":"3504:33:34"},"nodeType":"YulExpressionStatement","src":"3504:33:34"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3441:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"3449:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3457:5:34","type":""}],"src":"3400:143:34"},{"body":{"nodeType":"YulBlock","src":"3695:1016:34","statements":[{"body":{"nodeType":"YulBlock","src":"3742:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3744:77:34"},"nodeType":"YulFunctionCall","src":"3744:79:34"},"nodeType":"YulExpressionStatement","src":"3744:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3716:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"3725:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3712:3:34"},"nodeType":"YulFunctionCall","src":"3712:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"3737:3:34","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3708:3:34"},"nodeType":"YulFunctionCall","src":"3708:33:34"},"nodeType":"YulIf","src":"3705:120:34"},{"nodeType":"YulBlock","src":"3835:291:34","statements":[{"nodeType":"YulVariableDeclaration","src":"3850:38:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3874:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"3885:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3870:3:34"},"nodeType":"YulFunctionCall","src":"3870:17:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3864:5:34"},"nodeType":"YulFunctionCall","src":"3864:24:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3854:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"3935:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3937:77:34"},"nodeType":"YulFunctionCall","src":"3937:79:34"},"nodeType":"YulExpressionStatement","src":"3937:79:34"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3907:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"3915:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3904:2:34"},"nodeType":"YulFunctionCall","src":"3904:30:34"},"nodeType":"YulIf","src":"3901:117:34"},{"nodeType":"YulAssignment","src":"4032:84:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4088:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"4099:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4084:3:34"},"nodeType":"YulFunctionCall","src":"4084:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4108:7:34"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4042:41:34"},"nodeType":"YulFunctionCall","src":"4042:74:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4032:6:34"}]}]},{"nodeType":"YulBlock","src":"4136:292:34","statements":[{"nodeType":"YulVariableDeclaration","src":"4151:39:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4175:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"4186:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4171:3:34"},"nodeType":"YulFunctionCall","src":"4171:18:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4165:5:34"},"nodeType":"YulFunctionCall","src":"4165:25:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4155:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"4237:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4239:77:34"},"nodeType":"YulFunctionCall","src":"4239:79:34"},"nodeType":"YulExpressionStatement","src":"4239:79:34"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4209:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"4217:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4206:2:34"},"nodeType":"YulFunctionCall","src":"4206:30:34"},"nodeType":"YulIf","src":"4203:117:34"},{"nodeType":"YulAssignment","src":"4334:84:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4390:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"4401:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4386:3:34"},"nodeType":"YulFunctionCall","src":"4386:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4410:7:34"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4344:41:34"},"nodeType":"YulFunctionCall","src":"4344:74:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4334:6:34"}]}]},{"nodeType":"YulBlock","src":"4438:127:34","statements":[{"nodeType":"YulVariableDeclaration","src":"4453:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"4467:2:34","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4457:6:34","type":""}]},{"nodeType":"YulAssignment","src":"4483:72:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4527:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"4538:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4523:3:34"},"nodeType":"YulFunctionCall","src":"4523:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4547:7:34"}],"functionName":{"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulIdentifier","src":"4493:29:34"},"nodeType":"YulFunctionCall","src":"4493:62:34"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4483:6:34"}]}]},{"nodeType":"YulBlock","src":"4575:129:34","statements":[{"nodeType":"YulVariableDeclaration","src":"4590:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"4604:2:34","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4594:6:34","type":""}]},{"nodeType":"YulAssignment","src":"4620:74:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4666:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"4677:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4662:3:34"},"nodeType":"YulFunctionCall","src":"4662:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4686:7:34"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"4630:31:34"},"nodeType":"YulFunctionCall","src":"4630:64:34"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4620:6:34"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3641:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3652:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3664:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3672:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3680:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3688:6:34","type":""}],"src":"3549:1162:34"},{"body":{"nodeType":"YulBlock","src":"4776:40:34","statements":[{"nodeType":"YulAssignment","src":"4787:22:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4803:5:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4797:5:34"},"nodeType":"YulFunctionCall","src":"4797:12:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4787:6:34"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4759:5:34","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4769:6:34","type":""}],"src":"4717:99:34"},{"body":{"nodeType":"YulBlock","src":"4850:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4867:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4870:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4860:6:34"},"nodeType":"YulFunctionCall","src":"4860:88:34"},"nodeType":"YulExpressionStatement","src":"4860:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4964:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4967:4:34","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4957:6:34"},"nodeType":"YulFunctionCall","src":"4957:15:34"},"nodeType":"YulExpressionStatement","src":"4957:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4988:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4991:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4981:6:34"},"nodeType":"YulFunctionCall","src":"4981:15:34"},"nodeType":"YulExpressionStatement","src":"4981:15:34"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"4822:180:34"},{"body":{"nodeType":"YulBlock","src":"5059:269:34","statements":[{"nodeType":"YulAssignment","src":"5069:22:34","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5083:4:34"},{"kind":"number","nodeType":"YulLiteral","src":"5089:1:34","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5079:3:34"},"nodeType":"YulFunctionCall","src":"5079:12:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5069:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"5100:38:34","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5130:4:34"},{"kind":"number","nodeType":"YulLiteral","src":"5136:1:34","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5126:3:34"},"nodeType":"YulFunctionCall","src":"5126:12:34"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5104:18:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"5177:51:34","statements":[{"nodeType":"YulAssignment","src":"5191:27:34","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5205:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"5213:4:34","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5201:3:34"},"nodeType":"YulFunctionCall","src":"5201:17:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5191:6:34"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5157:18:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5150:6:34"},"nodeType":"YulFunctionCall","src":"5150:26:34"},"nodeType":"YulIf","src":"5147:81:34"},{"body":{"nodeType":"YulBlock","src":"5280:42:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"5294:16:34"},"nodeType":"YulFunctionCall","src":"5294:18:34"},"nodeType":"YulExpressionStatement","src":"5294:18:34"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5244:18:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5267:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"5275:2:34","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5264:2:34"},"nodeType":"YulFunctionCall","src":"5264:14:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5241:2:34"},"nodeType":"YulFunctionCall","src":"5241:38:34"},"nodeType":"YulIf","src":"5238:84:34"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5043:4:34","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5052:6:34","type":""}],"src":"5008:320:34"},{"body":{"nodeType":"YulBlock","src":"5388:87:34","statements":[{"nodeType":"YulAssignment","src":"5398:11:34","value":{"name":"ptr","nodeType":"YulIdentifier","src":"5406:3:34"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5398:4:34"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5426:1:34","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"5429:3:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5419:6:34"},"nodeType":"YulFunctionCall","src":"5419:14:34"},"nodeType":"YulExpressionStatement","src":"5419:14:34"},{"nodeType":"YulAssignment","src":"5442:26:34","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5460:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5463:4:34","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5450:9:34"},"nodeType":"YulFunctionCall","src":"5450:18:34"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5442:4:34"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"5375:3:34","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"5383:4:34","type":""}],"src":"5334:141:34"},{"body":{"nodeType":"YulBlock","src":"5525:49:34","statements":[{"nodeType":"YulAssignment","src":"5535:33:34","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5553:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"5560:2:34","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5549:3:34"},"nodeType":"YulFunctionCall","src":"5549:14:34"},{"kind":"number","nodeType":"YulLiteral","src":"5565:2:34","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5545:3:34"},"nodeType":"YulFunctionCall","src":"5545:23:34"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5535:6:34"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5508:5:34","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5518:6:34","type":""}],"src":"5481:93:34"},{"body":{"nodeType":"YulBlock","src":"5633:54:34","statements":[{"nodeType":"YulAssignment","src":"5643:37:34","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"5668:4:34"},{"name":"value","nodeType":"YulIdentifier","src":"5674:5:34"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5664:3:34"},"nodeType":"YulFunctionCall","src":"5664:16:34"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"5643:8:34"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"5608:4:34","type":""},{"name":"value","nodeType":"YulTypedName","src":"5614:5:34","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"5624:8:34","type":""}],"src":"5580:107:34"},{"body":{"nodeType":"YulBlock","src":"5769:317:34","statements":[{"nodeType":"YulVariableDeclaration","src":"5779:35:34","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"5800:10:34"},{"kind":"number","nodeType":"YulLiteral","src":"5812:1:34","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5796:3:34"},"nodeType":"YulFunctionCall","src":"5796:18:34"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"5783:9:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5823:109:34","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5854:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"5865:66:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5835:18:34"},"nodeType":"YulFunctionCall","src":"5835:97:34"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"5827:4:34","type":""}]},{"nodeType":"YulAssignment","src":"5941:51:34","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5972:9:34"},{"name":"toInsert","nodeType":"YulIdentifier","src":"5983:8:34"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5953:18:34"},"nodeType":"YulFunctionCall","src":"5953:39:34"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5941:8:34"}]},{"nodeType":"YulAssignment","src":"6001:30:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6014:5:34"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"6025:4:34"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6021:3:34"},"nodeType":"YulFunctionCall","src":"6021:9:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6010:3:34"},"nodeType":"YulFunctionCall","src":"6010:21:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6001:5:34"}]},{"nodeType":"YulAssignment","src":"6040:40:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6053:5:34"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"6064:8:34"},{"name":"mask","nodeType":"YulIdentifier","src":"6074:4:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6060:3:34"},"nodeType":"YulFunctionCall","src":"6060:19:34"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6050:2:34"},"nodeType":"YulFunctionCall","src":"6050:30:34"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6040:6:34"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5730:5:34","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"5737:10:34","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"5749:8:34","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5762:6:34","type":""}],"src":"5693:393:34"},{"body":{"nodeType":"YulBlock","src":"6137:32:34","statements":[{"nodeType":"YulAssignment","src":"6147:16:34","value":{"name":"value","nodeType":"YulIdentifier","src":"6158:5:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6147:7:34"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6119:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6129:7:34","type":""}],"src":"6092:77:34"},{"body":{"nodeType":"YulBlock","src":"6207:28:34","statements":[{"nodeType":"YulAssignment","src":"6217:12:34","value":{"name":"value","nodeType":"YulIdentifier","src":"6224:5:34"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6217:3:34"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6193:5:34","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6203:3:34","type":""}],"src":"6175:60:34"},{"body":{"nodeType":"YulBlock","src":"6301:82:34","statements":[{"nodeType":"YulAssignment","src":"6311:66:34","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6369:5:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6351:17:34"},"nodeType":"YulFunctionCall","src":"6351:24:34"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"6342:8:34"},"nodeType":"YulFunctionCall","src":"6342:34:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6324:17:34"},"nodeType":"YulFunctionCall","src":"6324:53:34"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"6311:9:34"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6281:5:34","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"6291:9:34","type":""}],"src":"6241:142:34"},{"body":{"nodeType":"YulBlock","src":"6436:28:34","statements":[{"nodeType":"YulAssignment","src":"6446:12:34","value":{"name":"value","nodeType":"YulIdentifier","src":"6453:5:34"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6446:3:34"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6422:5:34","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6432:3:34","type":""}],"src":"6389:75:34"},{"body":{"nodeType":"YulBlock","src":"6546:193:34","statements":[{"nodeType":"YulVariableDeclaration","src":"6556:63:34","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"6611:7:34"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6580:30:34"},"nodeType":"YulFunctionCall","src":"6580:39:34"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"6560:16:34","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6635:4:34"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6675:4:34"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6669:5:34"},"nodeType":"YulFunctionCall","src":"6669:11:34"},{"name":"offset","nodeType":"YulIdentifier","src":"6682:6:34"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"6714:16:34"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"6690:23:34"},"nodeType":"YulFunctionCall","src":"6690:41:34"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"6641:27:34"},"nodeType":"YulFunctionCall","src":"6641:91:34"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6628:6:34"},"nodeType":"YulFunctionCall","src":"6628:105:34"},"nodeType":"YulExpressionStatement","src":"6628:105:34"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6523:4:34","type":""},{"name":"offset","nodeType":"YulTypedName","src":"6529:6:34","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"6537:7:34","type":""}],"src":"6470:269:34"},{"body":{"nodeType":"YulBlock","src":"6794:24:34","statements":[{"nodeType":"YulAssignment","src":"6804:8:34","value":{"kind":"number","nodeType":"YulLiteral","src":"6811:1:34","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6804:3:34"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6790:3:34","type":""}],"src":"6745:73:34"},{"body":{"nodeType":"YulBlock","src":"6877:136:34","statements":[{"nodeType":"YulVariableDeclaration","src":"6887:46:34","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"6901:30:34"},"nodeType":"YulFunctionCall","src":"6901:32:34"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"6891:6:34","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6986:4:34"},{"name":"offset","nodeType":"YulIdentifier","src":"6992:6:34"},{"name":"zero_0","nodeType":"YulIdentifier","src":"7000:6:34"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6942:43:34"},"nodeType":"YulFunctionCall","src":"6942:65:34"},"nodeType":"YulExpressionStatement","src":"6942:65:34"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6863:4:34","type":""},{"name":"offset","nodeType":"YulTypedName","src":"6869:6:34","type":""}],"src":"6824:189:34"},{"body":{"nodeType":"YulBlock","src":"7069:136:34","statements":[{"body":{"nodeType":"YulBlock","src":"7136:63:34","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"7180:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"7187:1:34","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"7150:29:34"},"nodeType":"YulFunctionCall","src":"7150:39:34"},"nodeType":"YulExpressionStatement","src":"7150:39:34"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"7089:5:34"},{"name":"end","nodeType":"YulIdentifier","src":"7096:3:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7086:2:34"},"nodeType":"YulFunctionCall","src":"7086:14:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7101:26:34","statements":[{"nodeType":"YulAssignment","src":"7103:22:34","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"7116:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"7123:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7112:3:34"},"nodeType":"YulFunctionCall","src":"7112:13:34"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"7103:5:34"}]}]},"pre":{"nodeType":"YulBlock","src":"7083:2:34","statements":[]},"src":"7079:120:34"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"7057:5:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"7064:3:34","type":""}],"src":"7019:186:34"},{"body":{"nodeType":"YulBlock","src":"7290:464:34","statements":[{"body":{"nodeType":"YulBlock","src":"7316:431:34","statements":[{"nodeType":"YulVariableDeclaration","src":"7330:54:34","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7378:5:34"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7346:31:34"},"nodeType":"YulFunctionCall","src":"7346:38:34"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"7334:8:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7397:63:34","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"7420:8:34"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"7448:10:34"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"7430:17:34"},"nodeType":"YulFunctionCall","src":"7430:29:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7416:3:34"},"nodeType":"YulFunctionCall","src":"7416:44:34"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"7401:11:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"7617:27:34","statements":[{"nodeType":"YulAssignment","src":"7619:23:34","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"7634:8:34"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"7619:11:34"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"7601:10:34"},{"kind":"number","nodeType":"YulLiteral","src":"7613:2:34","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7598:2:34"},"nodeType":"YulFunctionCall","src":"7598:18:34"},"nodeType":"YulIf","src":"7595:49:34"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"7686:11:34"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"7703:8:34"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"7731:3:34"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"7713:17:34"},"nodeType":"YulFunctionCall","src":"7713:22:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7699:3:34"},"nodeType":"YulFunctionCall","src":"7699:37:34"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"7657:28:34"},"nodeType":"YulFunctionCall","src":"7657:80:34"},"nodeType":"YulExpressionStatement","src":"7657:80:34"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"7307:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"7312:2:34","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7304:2:34"},"nodeType":"YulFunctionCall","src":"7304:11:34"},"nodeType":"YulIf","src":"7301:446:34"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"7266:5:34","type":""},{"name":"len","nodeType":"YulTypedName","src":"7273:3:34","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"7278:10:34","type":""}],"src":"7211:543:34"},{"body":{"nodeType":"YulBlock","src":"7823:54:34","statements":[{"nodeType":"YulAssignment","src":"7833:37:34","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"7858:4:34"},{"name":"value","nodeType":"YulIdentifier","src":"7864:5:34"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7854:3:34"},"nodeType":"YulFunctionCall","src":"7854:16:34"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"7833:8:34"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"7798:4:34","type":""},{"name":"value","nodeType":"YulTypedName","src":"7804:5:34","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"7814:8:34","type":""}],"src":"7760:117:34"},{"body":{"nodeType":"YulBlock","src":"7934:118:34","statements":[{"nodeType":"YulVariableDeclaration","src":"7944:68:34","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7993:1:34","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"7996:5:34"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7989:3:34"},"nodeType":"YulFunctionCall","src":"7989:13:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8008:1:34","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8004:3:34"},"nodeType":"YulFunctionCall","src":"8004:6:34"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"7960:28:34"},"nodeType":"YulFunctionCall","src":"7960:51:34"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7956:3:34"},"nodeType":"YulFunctionCall","src":"7956:56:34"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7948:4:34","type":""}]},{"nodeType":"YulAssignment","src":"8021:25:34","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8035:4:34"},{"name":"mask","nodeType":"YulIdentifier","src":"8041:4:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8031:3:34"},"nodeType":"YulFunctionCall","src":"8031:15:34"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8021:6:34"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7911:4:34","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"7917:5:34","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7927:6:34","type":""}],"src":"7883:169:34"},{"body":{"nodeType":"YulBlock","src":"8138:214:34","statements":[{"nodeType":"YulAssignment","src":"8271:37:34","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8298:4:34"},{"name":"len","nodeType":"YulIdentifier","src":"8304:3:34"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8279:18:34"},"nodeType":"YulFunctionCall","src":"8279:29:34"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8271:4:34"}]},{"nodeType":"YulAssignment","src":"8317:29:34","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8328:4:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8338:1:34","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"8341:3:34"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8334:3:34"},"nodeType":"YulFunctionCall","src":"8334:11:34"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8325:2:34"},"nodeType":"YulFunctionCall","src":"8325:21:34"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"8317:4:34"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8119:4:34","type":""},{"name":"len","nodeType":"YulTypedName","src":"8125:3:34","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"8133:4:34","type":""}],"src":"8057:295:34"},{"body":{"nodeType":"YulBlock","src":"8449:1303:34","statements":[{"nodeType":"YulVariableDeclaration","src":"8460:51:34","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8507:3:34"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8474:32:34"},"nodeType":"YulFunctionCall","src":"8474:37:34"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"8464:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"8596:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8598:16:34"},"nodeType":"YulFunctionCall","src":"8598:18:34"},"nodeType":"YulExpressionStatement","src":"8598:18:34"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8568:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"8576:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8565:2:34"},"nodeType":"YulFunctionCall","src":"8565:30:34"},"nodeType":"YulIf","src":"8562:56:34"},{"nodeType":"YulVariableDeclaration","src":"8628:52:34","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8674:4:34"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8668:5:34"},"nodeType":"YulFunctionCall","src":"8668:11:34"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"8642:25:34"},"nodeType":"YulFunctionCall","src":"8642:38:34"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"8632:6:34","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8773:4:34"},{"name":"oldLen","nodeType":"YulIdentifier","src":"8779:6:34"},{"name":"newLen","nodeType":"YulIdentifier","src":"8787:6:34"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"8727:45:34"},"nodeType":"YulFunctionCall","src":"8727:67:34"},"nodeType":"YulExpressionStatement","src":"8727:67:34"},{"nodeType":"YulVariableDeclaration","src":"8804:18:34","value":{"kind":"number","nodeType":"YulLiteral","src":"8821:1:34","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"8808:9:34","type":""}]},{"nodeType":"YulAssignment","src":"8832:17:34","value":{"kind":"number","nodeType":"YulLiteral","src":"8845:4:34","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8832:9:34"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"8896:611:34","statements":[{"nodeType":"YulVariableDeclaration","src":"8910:37:34","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8929:6:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8941:4:34","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8937:3:34"},"nodeType":"YulFunctionCall","src":"8937:9:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8925:3:34"},"nodeType":"YulFunctionCall","src":"8925:22:34"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"8914:7:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8961:51:34","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9007:4:34"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"8975:31:34"},"nodeType":"YulFunctionCall","src":"8975:37:34"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"8965:6:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9025:10:34","value":{"kind":"number","nodeType":"YulLiteral","src":"9034:1:34","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9029:1:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"9093:163:34","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9118:6:34"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9136:3:34"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9141:9:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9132:3:34"},"nodeType":"YulFunctionCall","src":"9132:19:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9126:5:34"},"nodeType":"YulFunctionCall","src":"9126:26:34"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9111:6:34"},"nodeType":"YulFunctionCall","src":"9111:42:34"},"nodeType":"YulExpressionStatement","src":"9111:42:34"},{"nodeType":"YulAssignment","src":"9170:24:34","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9184:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"9192:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9180:3:34"},"nodeType":"YulFunctionCall","src":"9180:14:34"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9170:6:34"}]},{"nodeType":"YulAssignment","src":"9211:31:34","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9228:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"9239:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9224:3:34"},"nodeType":"YulFunctionCall","src":"9224:18:34"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9211:9:34"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9059:1:34"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"9062:7:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9056:2:34"},"nodeType":"YulFunctionCall","src":"9056:14:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9071:21:34","statements":[{"nodeType":"YulAssignment","src":"9073:17:34","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9082:1:34"},{"kind":"number","nodeType":"YulLiteral","src":"9085:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9078:3:34"},"nodeType":"YulFunctionCall","src":"9078:12:34"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9073:1:34"}]}]},"pre":{"nodeType":"YulBlock","src":"9052:3:34","statements":[]},"src":"9048:208:34"},{"body":{"nodeType":"YulBlock","src":"9292:156:34","statements":[{"nodeType":"YulVariableDeclaration","src":"9310:43:34","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9337:3:34"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9342:9:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9333:3:34"},"nodeType":"YulFunctionCall","src":"9333:19:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9327:5:34"},"nodeType":"YulFunctionCall","src":"9327:26:34"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"9314:9:34","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9377:6:34"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"9404:9:34"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9419:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"9427:4:34","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9415:3:34"},"nodeType":"YulFunctionCall","src":"9415:17:34"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"9385:18:34"},"nodeType":"YulFunctionCall","src":"9385:48:34"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9370:6:34"},"nodeType":"YulFunctionCall","src":"9370:64:34"},"nodeType":"YulExpressionStatement","src":"9370:64:34"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"9275:7:34"},{"name":"newLen","nodeType":"YulIdentifier","src":"9284:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9272:2:34"},"nodeType":"YulFunctionCall","src":"9272:19:34"},"nodeType":"YulIf","src":"9269:179:34"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9468:4:34"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9482:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"9490:1:34","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9478:3:34"},"nodeType":"YulFunctionCall","src":"9478:14:34"},{"kind":"number","nodeType":"YulLiteral","src":"9494:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9474:3:34"},"nodeType":"YulFunctionCall","src":"9474:22:34"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9461:6:34"},"nodeType":"YulFunctionCall","src":"9461:36:34"},"nodeType":"YulExpressionStatement","src":"9461:36:34"}]},"nodeType":"YulCase","src":"8889:618:34","value":{"kind":"number","nodeType":"YulLiteral","src":"8894:1:34","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"9524:222:34","statements":[{"nodeType":"YulVariableDeclaration","src":"9538:14:34","value":{"kind":"number","nodeType":"YulLiteral","src":"9551:1:34","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9542:5:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"9575:67:34","statements":[{"nodeType":"YulAssignment","src":"9593:35:34","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9612:3:34"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9617:9:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9608:3:34"},"nodeType":"YulFunctionCall","src":"9608:19:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9602:5:34"},"nodeType":"YulFunctionCall","src":"9602:26:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9593:5:34"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"9568:6:34"},"nodeType":"YulIf","src":"9565:77:34"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9662:4:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9721:5:34"},{"name":"newLen","nodeType":"YulIdentifier","src":"9728:6:34"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"9668:52:34"},"nodeType":"YulFunctionCall","src":"9668:67:34"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9655:6:34"},"nodeType":"YulFunctionCall","src":"9655:81:34"},"nodeType":"YulExpressionStatement","src":"9655:81:34"}]},"nodeType":"YulCase","src":"9516:230:34","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8869:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"8877:2:34","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8866:2:34"},"nodeType":"YulFunctionCall","src":"8866:14:34"},"nodeType":"YulSwitch","src":"8859:887:34"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"8438:4:34","type":""},{"name":"src","nodeType":"YulTypedName","src":"8444:3:34","type":""}],"src":"8357:1395:34"},{"body":{"nodeType":"YulBlock","src":"9823:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9840:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9863:5:34"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9845:17:34"},"nodeType":"YulFunctionCall","src":"9845:24:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9833:6:34"},"nodeType":"YulFunctionCall","src":"9833:37:34"},"nodeType":"YulExpressionStatement","src":"9833:37:34"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9811:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9818:3:34","type":""}],"src":"9758:118:34"},{"body":{"nodeType":"YulBlock","src":"9980:124:34","statements":[{"nodeType":"YulAssignment","src":"9990:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10002:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"10013:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9998:3:34"},"nodeType":"YulFunctionCall","src":"9998:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9990:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10070:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10083:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"10094:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10079:3:34"},"nodeType":"YulFunctionCall","src":"10079:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10026:43:34"},"nodeType":"YulFunctionCall","src":"10026:71:34"},"nodeType":"YulExpressionStatement","src":"10026:71:34"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9952:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9964:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9975:4:34","type":""}],"src":"9882:222:34"},{"body":{"nodeType":"YulBlock","src":"10155:32:34","statements":[{"nodeType":"YulAssignment","src":"10165:16:34","value":{"name":"value","nodeType":"YulIdentifier","src":"10176:5:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10165:7:34"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10137:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10147:7:34","type":""}],"src":"10110:77:34"},{"body":{"nodeType":"YulBlock","src":"10258:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10275:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10298:5:34"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"10280:17:34"},"nodeType":"YulFunctionCall","src":"10280:24:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10268:6:34"},"nodeType":"YulFunctionCall","src":"10268:37:34"},"nodeType":"YulExpressionStatement","src":"10268:37:34"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10246:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10253:3:34","type":""}],"src":"10193:118:34"},{"body":{"nodeType":"YulBlock","src":"10382:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10399:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10422:5:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10404:17:34"},"nodeType":"YulFunctionCall","src":"10404:24:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10392:6:34"},"nodeType":"YulFunctionCall","src":"10392:37:34"},"nodeType":"YulExpressionStatement","src":"10392:37:34"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10370:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10377:3:34","type":""}],"src":"10317:118:34"},{"body":{"nodeType":"YulBlock","src":"10651:454:34","statements":[{"nodeType":"YulAssignment","src":"10661:27:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10673:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"10684:3:34","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10669:3:34"},"nodeType":"YulFunctionCall","src":"10669:19:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10661:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10742:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10755:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"10766:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10751:3:34"},"nodeType":"YulFunctionCall","src":"10751:17:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"10698:43:34"},"nodeType":"YulFunctionCall","src":"10698:71:34"},"nodeType":"YulExpressionStatement","src":"10698:71:34"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10823:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10836:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"10847:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10832:3:34"},"nodeType":"YulFunctionCall","src":"10832:18:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"10779:43:34"},"nodeType":"YulFunctionCall","src":"10779:72:34"},"nodeType":"YulExpressionStatement","src":"10779:72:34"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10905:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10918:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"10929:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10914:3:34"},"nodeType":"YulFunctionCall","src":"10914:18:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"10861:43:34"},"nodeType":"YulFunctionCall","src":"10861:72:34"},"nodeType":"YulExpressionStatement","src":"10861:72:34"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10987:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11000:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"11011:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10996:3:34"},"nodeType":"YulFunctionCall","src":"10996:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10943:43:34"},"nodeType":"YulFunctionCall","src":"10943:72:34"},"nodeType":"YulExpressionStatement","src":"10943:72:34"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"11069:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11082:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"11093:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11078:3:34"},"nodeType":"YulFunctionCall","src":"11078:19:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11025:43:34"},"nodeType":"YulFunctionCall","src":"11025:73:34"},"nodeType":"YulExpressionStatement","src":"11025:73:34"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10591:9:34","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10603:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10611:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10619:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10627:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10635:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10646:4:34","type":""}],"src":"10441:664:34"},{"body":{"nodeType":"YulBlock","src":"11207:73:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11224:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"11229:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11217:6:34"},"nodeType":"YulFunctionCall","src":"11217:19:34"},"nodeType":"YulExpressionStatement","src":"11217:19:34"},{"nodeType":"YulAssignment","src":"11245:29:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11264:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"11269:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11260:3:34"},"nodeType":"YulFunctionCall","src":"11260:14:34"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11245:11:34"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11179:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"11184:6:34","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11195:11:34","type":""}],"src":"11111:169:34"},{"body":{"nodeType":"YulBlock","src":"11378:285:34","statements":[{"nodeType":"YulVariableDeclaration","src":"11388:53:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11435:5:34"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11402:32:34"},"nodeType":"YulFunctionCall","src":"11402:39:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11392:6:34","type":""}]},{"nodeType":"YulAssignment","src":"11450:78:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11516:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"11521:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11457:58:34"},"nodeType":"YulFunctionCall","src":"11457:71:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11450:3:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11576:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"11583:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11572:3:34"},"nodeType":"YulFunctionCall","src":"11572:16:34"},{"name":"pos","nodeType":"YulIdentifier","src":"11590:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"11595:6:34"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11537:34:34"},"nodeType":"YulFunctionCall","src":"11537:65:34"},"nodeType":"YulExpressionStatement","src":"11537:65:34"},{"nodeType":"YulAssignment","src":"11611:46:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11622:3:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11649:6:34"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"11627:21:34"},"nodeType":"YulFunctionCall","src":"11627:29:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11618:3:34"},"nodeType":"YulFunctionCall","src":"11618:39:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11611:3:34"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11359:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11366:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11374:3:34","type":""}],"src":"11286:377:34"},{"body":{"nodeType":"YulBlock","src":"11787:195:34","statements":[{"nodeType":"YulAssignment","src":"11797:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11809:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"11820:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11805:3:34"},"nodeType":"YulFunctionCall","src":"11805:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11797:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11844:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"11855:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11840:3:34"},"nodeType":"YulFunctionCall","src":"11840:17:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11863:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"11869:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11859:3:34"},"nodeType":"YulFunctionCall","src":"11859:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11833:6:34"},"nodeType":"YulFunctionCall","src":"11833:47:34"},"nodeType":"YulExpressionStatement","src":"11833:47:34"},{"nodeType":"YulAssignment","src":"11889:86:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11961:6:34"},{"name":"tail","nodeType":"YulIdentifier","src":"11970:4:34"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11897:63:34"},"nodeType":"YulFunctionCall","src":"11897:78:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11889:4:34"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11759:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11771:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11782:4:34","type":""}],"src":"11669:313:34"},{"body":{"nodeType":"YulBlock","src":"12046:40:34","statements":[{"nodeType":"YulAssignment","src":"12057:22:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12073:5:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12067:5:34"},"nodeType":"YulFunctionCall","src":"12067:12:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12057:6:34"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12029:5:34","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12039:6:34","type":""}],"src":"11988:98:34"},{"body":{"nodeType":"YulBlock","src":"12148:60:34","statements":[{"nodeType":"YulAssignment","src":"12158:11:34","value":{"name":"ptr","nodeType":"YulIdentifier","src":"12166:3:34"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12158:4:34"}]},{"nodeType":"YulAssignment","src":"12179:22:34","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"12191:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"12196:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12187:3:34"},"nodeType":"YulFunctionCall","src":"12187:14:34"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12179:4:34"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12135:3:34","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"12143:4:34","type":""}],"src":"12092:116:34"},{"body":{"nodeType":"YulBlock","src":"12269:99:34","statements":[{"nodeType":"YulVariableDeclaration","src":"12280:42:34","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"12317:3:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12311:5:34"},"nodeType":"YulFunctionCall","src":"12311:10:34"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"12293:17:34"},"nodeType":"YulFunctionCall","src":"12293:29:34"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12284:5:34","type":""}]},{"nodeType":"YulAssignment","src":"12332:29:34","value":{"name":"value","nodeType":"YulIdentifier","src":"12356:5:34"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"12332:11:34"}]}]},"name":"read_from_memoryt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12249:3:34","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"12257:11:34","type":""}],"src":"12214:154:34"},{"body":{"nodeType":"YulBlock","src":"12464:504:34","statements":[{"nodeType":"YulVariableDeclaration","src":"12475:52:34","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"12521:5:34"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12489:31:34"},"nodeType":"YulFunctionCall","src":"12489:38:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12479:6:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12536:21:34","value":{"name":"array","nodeType":"YulIdentifier","src":"12552:5:34"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"12540:8:34","type":""}]},{"nodeType":"YulAssignment","src":"12567:52:34","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"12613:5:34"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12579:33:34"},"nodeType":"YulFunctionCall","src":"12579:40:34"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"12567:8:34"}]},{"nodeType":"YulAssignment","src":"12629:44:34","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"12664:8:34"}],"functionName":{"name":"read_from_memoryt_bytes32","nodeType":"YulIdentifier","src":"12638:25:34"},"nodeType":"YulFunctionCall","src":"12638:35:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12629:5:34"}]},{"body":{"nodeType":"YulBlock","src":"12701:260:34","statements":[{"nodeType":"YulAssignment","src":"12715:236:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12745:5:34"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12812:1:34","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12819:2:34","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"12823:6:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12815:3:34"},"nodeType":"YulFunctionCall","src":"12815:15:34"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12808:3:34"},"nodeType":"YulFunctionCall","src":"12808:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"12853:66:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"12768:18:34"},"nodeType":"YulFunctionCall","src":"12768:169:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12724:3:34"},"nodeType":"YulFunctionCall","src":"12724:227:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12715:5:34"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12689:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"12697:2:34","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12686:2:34"},"nodeType":"YulFunctionCall","src":"12686:14:34"},"nodeType":"YulIf","src":"12683:278:34"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"12448:5:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12458:5:34","type":""}],"src":"12374:594:34"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n}\n","id":34,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101606040523480156200001257600080fd5b5060405162002fc238038062002fc283398181016040528101906200003891906200061e565b8084806040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152508787816003908162000084919062000919565b50806004908162000096919062000919565b505050620000af600583620001f660201b90919060201c565b6101208181525050620000cd600682620001f660201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a081815250506200010c6200024e60201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620001bf5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001b6919062000a11565b60405180910390fd5b620001d081620002ab60201b60201c565b5081600860146101000a81548160ff021916908360ff1602179055505050505062000bcf565b60006020835110156200021c5762000214836200037160201b60201c565b905062000248565b826200022e83620003de60201b60201c565b60000190816200023f919062000919565b5060ff60001b90505b92915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e0516101005146306040516020016200029095949392919062000a5a565b60405160208183030381529060405280519060200120905090565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080829050601f81511115620003c157826040517f305a27a9000000000000000000000000000000000000000000000000000000008152600401620003b8919062000b09565b60405180910390fd5b805181620003cf9062000b5f565b60001c1760001b915050919050565b6000819050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620004518262000406565b810181811067ffffffffffffffff8211171562000473576200047262000417565b5b80604052505050565b600062000488620003e8565b905062000496828262000446565b919050565b600067ffffffffffffffff821115620004b957620004b862000417565b5b620004c48262000406565b9050602081019050919050565b60005b83811015620004f1578082015181840152602081019050620004d4565b60008484015250505050565b6000620005146200050e846200049b565b6200047c565b90508281526020810184848401111562000533576200053262000401565b5b62000540848285620004d1565b509392505050565b600082601f83011262000560576200055f620003fc565b5b815162000572848260208601620004fd565b91505092915050565b600060ff82169050919050565b62000593816200057b565b81146200059f57600080fd5b50565b600081519050620005b38162000588565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005e682620005b9565b9050919050565b620005f881620005d9565b81146200060457600080fd5b50565b6000815190506200061881620005ed565b92915050565b600080600080608085870312156200063b576200063a620003f2565b5b600085015167ffffffffffffffff8111156200065c576200065b620003f7565b5b6200066a8782880162000548565b945050602085015167ffffffffffffffff8111156200068e576200068d620003f7565b5b6200069c8782880162000548565b9350506040620006af87828801620005a2565b9250506060620006c28782880162000607565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200072157607f821691505b602082108103620007375762000736620006d9565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620007a17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000762565b620007ad868362000762565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620007fa620007f4620007ee84620007c5565b620007cf565b620007c5565b9050919050565b6000819050919050565b6200081683620007d9565b6200082e620008258262000801565b8484546200076f565b825550505050565b600090565b6200084562000836565b620008528184846200080b565b505050565b5b818110156200087a576200086e6000826200083b565b60018101905062000858565b5050565b601f821115620008c95762000893816200073d565b6200089e8462000752565b81016020851015620008ae578190505b620008c6620008bd8562000752565b83018262000857565b50505b505050565b600082821c905092915050565b6000620008ee60001984600802620008ce565b1980831691505092915050565b6000620009098383620008db565b9150826002028217905092915050565b6200092482620006ce565b67ffffffffffffffff81111562000940576200093f62000417565b5b6200094c825462000708565b620009598282856200087e565b600060209050601f8311600181146200099157600084156200097c578287015190505b620009888582620008fb565b865550620009f8565b601f198416620009a1866200073d565b60005b82811015620009cb57848901518255600182019150602085019450602081019050620009a4565b86831015620009eb5784890151620009e7601f891682620008db565b8355505b6001600288020188555050505b505050505050565b62000a0b81620005d9565b82525050565b600060208201905062000a28600083018462000a00565b92915050565b6000819050919050565b62000a438162000a2e565b82525050565b62000a5481620007c5565b82525050565b600060a08201905062000a71600083018862000a38565b62000a80602083018762000a38565b62000a8f604083018662000a38565b62000a9e606083018562000a49565b62000aad608083018462000a00565b9695505050505050565b600082825260208201905092915050565b600062000ad582620006ce565b62000ae1818562000ab7565b935062000af3818560208601620004d1565b62000afe8162000406565b840191505092915050565b6000602082019050818103600083015262000b25818462000ac8565b905092915050565b600081519050919050565b6000819050602082019050919050565b600062000b56825162000a2e565b80915050919050565b600062000b6c8262000b2d565b8262000b788462000b38565b905062000b858162000b48565b9250602082101562000bc85762000bc37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080262000762565b831692505b5050919050565b60805160a05160c05160e05161010051610120516101405161239862000c2a6000396000610eec01526000610eb1015260006114830152600061146201526000610bdd01526000610c3301526000610c5c01526123986000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063715018a6116100ad5780639dc29fac116100715780639dc29fac14610327578063a9059cbb14610343578063d505accf14610373578063dd62ed3e1461038f578063f2fde38b146103bf5761012c565b8063715018a61461028d5780637ecebe001461029757806384b0196e146102c75780638da5cb5b146102eb57806395d89b41146103095761012c565b80633644e515116100f45780633644e515146101eb57806340c10f19146102095780635791589714610225578063685731071461024157806370a082311461025d5761012c565b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017f57806323b872dd1461019d578063313ce567146101cd575b600080fd5b6101396103db565b6040516101469190611970565b60405180910390f35b61016960048036038101906101649190611a30565b61046d565b6040516101769190611a8b565b60405180910390f35b610187610490565b6040516101949190611ab5565b60405180910390f35b6101b760048036038101906101b29190611ad0565b61049a565b6040516101c49190611a8b565b60405180910390f35b6101d56104c9565b6040516101e29190611b3f565b60405180910390f35b6101f36104e0565b6040516102009190611b73565b60405180910390f35b610223600480360381019061021e9190611a30565b6104ef565b005b61023f600480360381019061023a9190611b8e565b610505565b005b61025b60048036038101906102569190611c76565b610512565b005b61027760048036038101906102729190611cf7565b6105d4565b6040516102849190611ab5565b60405180910390f35b61029561061c565b005b6102b160048036038101906102ac9190611cf7565b610630565b6040516102be9190611ab5565b60405180910390f35b6102cf610642565b6040516102e29796959493929190611e2c565b60405180910390f35b6102f36106ec565b6040516103009190611eb0565b60405180910390f35b610311610716565b60405161031e9190611970565b60405180910390f35b610341600480360381019061033c9190611a30565b6107a8565b005b61035d60048036038101906103589190611a30565b6107be565b60405161036a9190611a8b565b60405180910390f35b61038d60048036038101906103889190611f23565b6107e1565b005b6103a960048036038101906103a49190611fc5565b610929565b6040516103b69190611ab5565b60405180910390f35b6103d960048036038101906103d49190611cf7565b6109b0565b005b6060600380546103ea90612034565b80601f016020809104026020016040519081016040528092919081815260200182805461041690612034565b80156104635780601f1061043857610100808354040283529160200191610463565b820191906000526020600020905b81548152906001019060200180831161044657829003601f168201915b5050505050905090565b600080610478610a36565b9050610485818585610a3e565b600191505092915050565b6000600254905090565b6000806104a5610a36565b90506104b2858285610a50565b6104bd858585610ae5565b60019150509392505050565b6000600860149054906101000a900460ff16905090565b60006104ea610bd9565b905090565b6104f7610c90565b6105018282610d17565b5050565b61050f3382610d17565b50565b61051a610c90565b818190508484905014610562576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610559906120b1565b60405180910390fd5b60005b848490508110156105cd576105ba858583818110610586576105856120d1565b5b905060200201602081019061059b9190611cf7565b8484848181106105ae576105ad6120d1565b5b90506020020135610d17565b80806105c59061212f565b915050610565565b5050505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610624610c90565b61062e6000610d99565b565b600061063b82610e5f565b9050919050565b600060608060008060006060610656610ea8565b61065e610ee3565b46306000801b600067ffffffffffffffff81111561067f5761067e612177565b5b6040519080825280602002602001820160405280156106ad5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461072590612034565b80601f016020809104026020016040519081016040528092919081815260200182805461075190612034565b801561079e5780601f106107735761010080835404028352916020019161079e565b820191906000526020600020905b81548152906001019060200180831161078157829003601f168201915b5050505050905090565b6107b0610c90565b6107ba8282610f1e565b5050565b6000806107c9610a36565b90506107d6818585610ae5565b600191505092915050565b8342111561082657836040517f6279130200000000000000000000000000000000000000000000000000000000815260040161081d9190611ab5565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886108558c610fa0565b8960405160200161086b969594939291906121a6565b604051602081830303815290604052805190602001209050600061088e82610ff7565b9050600061089e82878787611011565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461091257808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610909929190612207565b60405180910390fd5b61091d8a8a8a610a3e565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6109b8610c90565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a2a5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a219190611eb0565b60405180910390fd5b610a3381610d99565b50565b600033905090565b610a4b8383836001611041565b505050565b6000610a5c8484610929565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610adf5781811015610acf578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610ac693929190612230565b60405180910390fd5b610ade84848484036000611041565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b575760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b4e9190611eb0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bc95760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bc09190611eb0565b60405180910390fd5b610bd4838383611218565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610c5557507f000000000000000000000000000000000000000000000000000000000000000046145b15610c82577f00000000000000000000000000000000000000000000000000000000000000009050610c8d565b610c8a61143d565b90505b90565b610c98610a36565b73ffffffffffffffffffffffffffffffffffffffff16610cb66106ec565b73ffffffffffffffffffffffffffffffffffffffff1614610d1557610cd9610a36565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d0c9190611eb0565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d895760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d809190611eb0565b60405180910390fd5b610d9560008383611218565b5050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060610ede60057f00000000000000000000000000000000000000000000000000000000000000006114d390919063ffffffff16565b905090565b6060610f1960067f00000000000000000000000000000000000000000000000000000000000000006114d390919063ffffffff16565b905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f905760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610f879190611eb0565b60405180910390fd5b610f9c82600083611218565b5050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b600061100a611004610bd9565b83611583565b9050919050565b600080600080611023888888886115c4565b92509250925061103382826116b8565b829350505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036110b35760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016110aa9190611eb0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111255760006040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161111c9190611eb0565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611212578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516112099190611ab5565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361126a57806002600082825461125e9190612267565b9250508190555061133d565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156112f6578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016112ed93929190612230565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361138657806002600082825403925050819055506113d3565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516114309190611ab5565b60405180910390a3505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000046306040516020016114b895949392919061229b565b60405160208183030381529060405280519060200120905090565b606060ff60001b83146114f0576114e98361181c565b905061157d565b8180546114fc90612034565b80601f016020809104026020016040519081016040528092919081815260200182805461152890612034565b80156115755780601f1061154a57610100808354040283529160200191611575565b820191906000526020600020905b81548152906001019060200180831161155857829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156116045760006003859250925092506116ae565b60006001888888886040516000815260200160405260405161162994939291906122ee565b6020604051602081039080840390855afa15801561164b573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361169f57600060016000801b935093509350506116ae565b8060008060001b935093509350505b9450945094915050565b600060038111156116cc576116cb612333565b5b8260038111156116df576116de612333565b5b031561181857600160038111156116f9576116f8612333565b5b82600381111561170c5761170b612333565b5b03611743576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600381111561175757611756612333565b5b82600381111561176a57611769612333565b5b036117af578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016117a69190611ab5565b60405180910390fd5b6003808111156117c2576117c1612333565b5b8260038111156117d5576117d4612333565b5b0361181757806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161180e9190611b73565b60405180910390fd5b5b5050565b6060600061182983611890565b90506000602067ffffffffffffffff81111561184857611847612177565b5b6040519080825280601f01601f19166020018201604052801561187a5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060ff8360001c169050601f8111156118d7576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561191a5780820151818401526020810190506118ff565b60008484015250505050565b6000601f19601f8301169050919050565b6000611942826118e0565b61194c81856118eb565b935061195c8185602086016118fc565b61196581611926565b840191505092915050565b6000602082019050818103600083015261198a8184611937565b905092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119c78261199c565b9050919050565b6119d7816119bc565b81146119e257600080fd5b50565b6000813590506119f4816119ce565b92915050565b6000819050919050565b611a0d816119fa565b8114611a1857600080fd5b50565b600081359050611a2a81611a04565b92915050565b60008060408385031215611a4757611a46611992565b5b6000611a55858286016119e5565b9250506020611a6685828601611a1b565b9150509250929050565b60008115159050919050565b611a8581611a70565b82525050565b6000602082019050611aa06000830184611a7c565b92915050565b611aaf816119fa565b82525050565b6000602082019050611aca6000830184611aa6565b92915050565b600080600060608486031215611ae957611ae8611992565b5b6000611af7868287016119e5565b9350506020611b08868287016119e5565b9250506040611b1986828701611a1b565b9150509250925092565b600060ff82169050919050565b611b3981611b23565b82525050565b6000602082019050611b546000830184611b30565b92915050565b6000819050919050565b611b6d81611b5a565b82525050565b6000602082019050611b886000830184611b64565b92915050565b600060208284031215611ba457611ba3611992565b5b6000611bb284828501611a1b565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611be057611bdf611bbb565b5b8235905067ffffffffffffffff811115611bfd57611bfc611bc0565b5b602083019150836020820283011115611c1957611c18611bc5565b5b9250929050565b60008083601f840112611c3657611c35611bbb565b5b8235905067ffffffffffffffff811115611c5357611c52611bc0565b5b602083019150836020820283011115611c6f57611c6e611bc5565b5b9250929050565b60008060008060408587031215611c9057611c8f611992565b5b600085013567ffffffffffffffff811115611cae57611cad611997565b5b611cba87828801611bca565b9450945050602085013567ffffffffffffffff811115611cdd57611cdc611997565b5b611ce987828801611c20565b925092505092959194509250565b600060208284031215611d0d57611d0c611992565b5b6000611d1b848285016119e5565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611d5981611d24565b82525050565b611d68816119bc565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611da3816119fa565b82525050565b6000611db58383611d9a565b60208301905092915050565b6000602082019050919050565b6000611dd982611d6e565b611de38185611d79565b9350611dee83611d8a565b8060005b83811015611e1f578151611e068882611da9565b9750611e1183611dc1565b925050600181019050611df2565b5085935050505092915050565b600060e082019050611e41600083018a611d50565b8181036020830152611e538189611937565b90508181036040830152611e678188611937565b9050611e766060830187611aa6565b611e836080830186611d5f565b611e9060a0830185611b64565b81810360c0830152611ea28184611dce565b905098975050505050505050565b6000602082019050611ec56000830184611d5f565b92915050565b611ed481611b23565b8114611edf57600080fd5b50565b600081359050611ef181611ecb565b92915050565b611f0081611b5a565b8114611f0b57600080fd5b50565b600081359050611f1d81611ef7565b92915050565b600080600080600080600060e0888a031215611f4257611f41611992565b5b6000611f508a828b016119e5565b9750506020611f618a828b016119e5565b9650506040611f728a828b01611a1b565b9550506060611f838a828b01611a1b565b9450506080611f948a828b01611ee2565b93505060a0611fa58a828b01611f0e565b92505060c0611fb68a828b01611f0e565b91505092959891949750929550565b60008060408385031215611fdc57611fdb611992565b5b6000611fea858286016119e5565b9250506020611ffb858286016119e5565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061204c57607f821691505b60208210810361205f5761205e612005565b5b50919050565b7f417272617973206c656e677468206d69736d6174636800000000000000000000600082015250565b600061209b6016836118eb565b91506120a682612065565b602082019050919050565b600060208201905081810360008301526120ca8161208e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061213a826119fa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361216c5761216b612100565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060c0820190506121bb6000830189611b64565b6121c86020830188611d5f565b6121d56040830187611d5f565b6121e26060830186611aa6565b6121ef6080830185611aa6565b6121fc60a0830184611aa6565b979650505050505050565b600060408201905061221c6000830185611d5f565b6122296020830184611d5f565b9392505050565b60006060820190506122456000830186611d5f565b6122526020830185611aa6565b61225f6040830184611aa6565b949350505050565b6000612272826119fa565b915061227d836119fa565b925082820190508082111561229557612294612100565b5b92915050565b600060a0820190506122b06000830188611b64565b6122bd6020830187611b64565b6122ca6040830186611b64565b6122d76060830185611aa6565b6122e46080830184611d5f565b9695505050505050565b60006080820190506123036000830187611b64565b6123106020830186611b30565b61231d6040830185611b64565b61232a6060830184611b64565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220355ede51d9e83c36dae66a2125f7e04b9d00445fd78bb5f81745ae34ea97cf4664736f6c63430008140033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2FC2 CODESIZE SUB DUP1 PUSH3 0x2FC2 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x61E JUMP JUMPDEST DUP1 DUP5 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP8 DUP8 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x84 SWAP2 SWAP1 PUSH3 0x919 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x96 SWAP2 SWAP1 PUSH3 0x919 JUMP JUMPDEST POP POP POP PUSH3 0xAF PUSH1 0x5 DUP4 PUSH3 0x1F6 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0xCD PUSH1 0x6 DUP3 PUSH3 0x1F6 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x10C PUSH3 0x24E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1BF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1B6 SWAP2 SWAP1 PUSH3 0xA11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1D0 DUP2 PUSH3 0x2AB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x8 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH3 0xBCF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x21C JUMPI PUSH3 0x214 DUP4 PUSH3 0x371 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x248 JUMP JUMPDEST DUP3 PUSH3 0x22E DUP4 PUSH3 0x3DE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH3 0x23F SWAP2 SWAP1 PUSH3 0x919 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x290 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xA5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x3C1 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3B8 SWAP2 SWAP1 PUSH3 0xB09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x3CF SWAP1 PUSH3 0xB5F JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x451 DUP3 PUSH3 0x406 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x473 JUMPI PUSH3 0x472 PUSH3 0x417 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x488 PUSH3 0x3E8 JUMP JUMPDEST SWAP1 POP PUSH3 0x496 DUP3 DUP3 PUSH3 0x446 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x4B9 JUMPI PUSH3 0x4B8 PUSH3 0x417 JUMP JUMPDEST JUMPDEST PUSH3 0x4C4 DUP3 PUSH3 0x406 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x4F1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x4D4 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x514 PUSH3 0x50E DUP5 PUSH3 0x49B JUMP JUMPDEST PUSH3 0x47C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x533 JUMPI PUSH3 0x532 PUSH3 0x401 JUMP JUMPDEST JUMPDEST PUSH3 0x540 DUP5 DUP3 DUP6 PUSH3 0x4D1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x560 JUMPI PUSH3 0x55F PUSH3 0x3FC JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x572 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x4FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x593 DUP2 PUSH3 0x57B JUMP JUMPDEST DUP2 EQ PUSH3 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x5B3 DUP2 PUSH3 0x588 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5E6 DUP3 PUSH3 0x5B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5F8 DUP2 PUSH3 0x5D9 JUMP JUMPDEST DUP2 EQ PUSH3 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x618 DUP2 PUSH3 0x5ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x63B JUMPI PUSH3 0x63A PUSH3 0x3F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x65C JUMPI PUSH3 0x65B PUSH3 0x3F7 JUMP JUMPDEST JUMPDEST PUSH3 0x66A DUP8 DUP3 DUP9 ADD PUSH3 0x548 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x68E JUMPI PUSH3 0x68D PUSH3 0x3F7 JUMP JUMPDEST JUMPDEST PUSH3 0x69C DUP8 DUP3 DUP9 ADD PUSH3 0x548 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x6AF DUP8 DUP3 DUP9 ADD PUSH3 0x5A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x6C2 DUP8 DUP3 DUP9 ADD PUSH3 0x607 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x721 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x737 JUMPI PUSH3 0x736 PUSH3 0x6D9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x7A1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x762 JUMP JUMPDEST PUSH3 0x7AD DUP7 DUP4 PUSH3 0x762 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7FA PUSH3 0x7F4 PUSH3 0x7EE DUP5 PUSH3 0x7C5 JUMP JUMPDEST PUSH3 0x7CF JUMP JUMPDEST PUSH3 0x7C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x816 DUP4 PUSH3 0x7D9 JUMP JUMPDEST PUSH3 0x82E PUSH3 0x825 DUP3 PUSH3 0x801 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x76F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x845 PUSH3 0x836 JUMP JUMPDEST PUSH3 0x852 DUP2 DUP5 DUP5 PUSH3 0x80B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x87A JUMPI PUSH3 0x86E PUSH1 0x0 DUP3 PUSH3 0x83B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x858 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x8C9 JUMPI PUSH3 0x893 DUP2 PUSH3 0x73D JUMP JUMPDEST PUSH3 0x89E DUP5 PUSH3 0x752 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x8AE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x8C6 PUSH3 0x8BD DUP6 PUSH3 0x752 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x857 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8EE PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x8CE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x909 DUP4 DUP4 PUSH3 0x8DB JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x924 DUP3 PUSH3 0x6CE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x940 JUMPI PUSH3 0x93F PUSH3 0x417 JUMP JUMPDEST JUMPDEST PUSH3 0x94C DUP3 SLOAD PUSH3 0x708 JUMP JUMPDEST PUSH3 0x959 DUP3 DUP3 DUP6 PUSH3 0x87E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x991 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x97C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x988 DUP6 DUP3 PUSH3 0x8FB JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x9F8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x9A1 DUP7 PUSH3 0x73D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x9CB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x9A4 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x9EB JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x9E7 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x8DB JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xA0B DUP2 PUSH3 0x5D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xA28 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xA00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xA43 DUP2 PUSH3 0xA2E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0xA54 DUP2 PUSH3 0x7C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0xA71 PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0xA38 JUMP JUMPDEST PUSH3 0xA80 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0xA38 JUMP JUMPDEST PUSH3 0xA8F PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0xA38 JUMP JUMPDEST PUSH3 0xA9E PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0xA49 JUMP JUMPDEST PUSH3 0xAAD PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0xA00 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xAD5 DUP3 PUSH3 0x6CE JUMP JUMPDEST PUSH3 0xAE1 DUP2 DUP6 PUSH3 0xAB7 JUMP JUMPDEST SWAP4 POP PUSH3 0xAF3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x4D1 JUMP JUMPDEST PUSH3 0xAFE DUP2 PUSH3 0x406 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xB25 DUP2 DUP5 PUSH3 0xAC8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB56 DUP3 MLOAD PUSH3 0xA2E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB6C DUP3 PUSH3 0xB2D JUMP JUMPDEST DUP3 PUSH3 0xB78 DUP5 PUSH3 0xB38 JUMP JUMPDEST SWAP1 POP PUSH3 0xB85 DUP2 PUSH3 0xB48 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0xBC8 JUMPI PUSH3 0xBC3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x762 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x2398 PUSH3 0xC2A PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0xEEC ADD MSTORE PUSH1 0x0 PUSH2 0xEB1 ADD MSTORE PUSH1 0x0 PUSH2 0x1483 ADD MSTORE PUSH1 0x0 PUSH2 0x1462 ADD MSTORE PUSH1 0x0 PUSH2 0xBDD ADD MSTORE PUSH1 0x0 PUSH2 0xC33 ADD MSTORE PUSH1 0x0 PUSH2 0xC5C ADD MSTORE PUSH2 0x2398 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BF JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x309 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x57915897 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x68573107 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x25D JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0x46D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1A8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1A8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1B3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0x4EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x1B8E JUMP JUMPDEST PUSH2 0x505 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1C76 JUMP JUMPDEST PUSH2 0x512 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH2 0x61C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH2 0x642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F3 PUSH2 0x6EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x311 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x1970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x1A8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH2 0x7E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x1FC5 JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0x9B0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3EA SWAP1 PUSH2 0x2034 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x416 SWAP1 PUSH2 0x2034 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x463 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x438 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x463 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x446 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x478 PUSH2 0xA36 JUMP JUMPDEST SWAP1 POP PUSH2 0x485 DUP2 DUP6 DUP6 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4A5 PUSH2 0xA36 JUMP JUMPDEST SWAP1 POP PUSH2 0x4B2 DUP6 DUP3 DUP6 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x4BD DUP6 DUP6 DUP6 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EA PUSH2 0xBD9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4F7 PUSH2 0xC90 JUMP JUMPDEST PUSH2 0x501 DUP3 DUP3 PUSH2 0xD17 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x50F CALLER DUP3 PUSH2 0xD17 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x51A PUSH2 0xC90 JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x559 SWAP1 PUSH2 0x20B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x5CD JUMPI PUSH2 0x5BA DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x586 JUMPI PUSH2 0x585 PUSH2 0x20D1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x59B SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x5AE JUMPI PUSH2 0x5AD PUSH2 0x20D1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0xD17 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x5C5 SWAP1 PUSH2 0x212F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x565 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x624 PUSH2 0xC90 JUMP JUMPDEST PUSH2 0x62E PUSH1 0x0 PUSH2 0xD99 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x63B DUP3 PUSH2 0xE5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x656 PUSH2 0xEA8 JUMP JUMPDEST PUSH2 0x65E PUSH2 0xEE3 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x67F JUMPI PUSH2 0x67E PUSH2 0x2177 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6AD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x725 SWAP1 PUSH2 0x2034 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x751 SWAP1 PUSH2 0x2034 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x79E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x773 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x79E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x781 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7B0 PUSH2 0xC90 JUMP JUMPDEST PUSH2 0x7BA DUP3 DUP3 PUSH2 0xF1E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7C9 PUSH2 0xA36 JUMP JUMPDEST SWAP1 POP PUSH2 0x7D6 DUP2 DUP6 DUP6 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x826 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81D SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x855 DUP13 PUSH2 0xFA0 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x86B SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x88E DUP3 PUSH2 0xFF7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x89E DUP3 DUP8 DUP8 DUP8 PUSH2 0x1011 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x912 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x909 SWAP3 SWAP2 SWAP1 PUSH2 0x2207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x91D DUP11 DUP11 DUP11 PUSH2 0xA3E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9B8 PUSH2 0xC90 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA21 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA33 DUP2 PUSH2 0xD99 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA4B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1041 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA5C DUP5 DUP5 PUSH2 0x929 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xADF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xACF JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2230 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xADE DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1041 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB57 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4E SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC9 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC0 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBD4 DUP4 DUP4 DUP4 PUSH2 0x1218 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xC55 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xC82 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xC8D JUMP JUMPDEST PUSH2 0xC8A PUSH2 0x143D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC98 PUSH2 0xA36 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCB6 PUSH2 0x6EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD15 JUMPI PUSH2 0xCD9 PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0C SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD89 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD80 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD95 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1218 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEDE PUSH1 0x5 PUSH32 0x0 PUSH2 0x14D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF19 PUSH1 0x6 PUSH32 0x0 PUSH2 0x14D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF90 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF87 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF9C DUP3 PUSH1 0x0 DUP4 PUSH2 0x1218 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100A PUSH2 0x1004 PUSH2 0xBD9 JUMP JUMPDEST DUP4 PUSH2 0x1583 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1023 DUP9 DUP9 DUP9 DUP9 PUSH2 0x15C4 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1033 DUP3 DUP3 PUSH2 0x16B8 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10B3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AA SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1125 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111C SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1212 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1209 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x126A JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x125E SWAP2 SWAP1 PUSH2 0x2267 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x133D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x12F6 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2230 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1386 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x13D3 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1430 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14B8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x229B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x14F0 JUMPI PUSH2 0x14E9 DUP4 PUSH2 0x181C JUMP JUMPDEST SWAP1 POP PUSH2 0x157D JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x14FC SWAP1 PUSH2 0x2034 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1528 SWAP1 PUSH2 0x2034 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1575 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x154A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1575 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1558 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1604 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1629 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22EE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x164B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x169F JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x16AE JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16CC JUMPI PUSH2 0x16CB PUSH2 0x2333 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16DF JUMPI PUSH2 0x16DE PUSH2 0x2333 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1818 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16F9 JUMPI PUSH2 0x16F8 PUSH2 0x2333 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x170C JUMPI PUSH2 0x170B PUSH2 0x2333 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1743 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1757 JUMPI PUSH2 0x1756 PUSH2 0x2333 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x176A JUMPI PUSH2 0x1769 PUSH2 0x2333 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x17AF JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A6 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x17C2 JUMPI PUSH2 0x17C1 PUSH2 0x2333 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x17D5 JUMPI PUSH2 0x17D4 PUSH2 0x2333 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1817 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x180E SWAP2 SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1829 DUP4 PUSH2 0x1890 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1848 JUMPI PUSH2 0x1847 PUSH2 0x2177 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x187A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x18D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x191A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18FF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1942 DUP3 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x194C DUP2 DUP6 PUSH2 0x18EB JUMP JUMPDEST SWAP4 POP PUSH2 0x195C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18FC JUMP JUMPDEST PUSH2 0x1965 DUP2 PUSH2 0x1926 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x198A DUP2 DUP5 PUSH2 0x1937 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C7 DUP3 PUSH2 0x199C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19D7 DUP2 PUSH2 0x19BC JUMP JUMPDEST DUP2 EQ PUSH2 0x19E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19F4 DUP2 PUSH2 0x19CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0D DUP2 PUSH2 0x19FA JUMP JUMPDEST DUP2 EQ PUSH2 0x1A18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A2A DUP2 PUSH2 0x1A04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A47 JUMPI PUSH2 0x1A46 PUSH2 0x1992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A55 DUP6 DUP3 DUP7 ADD PUSH2 0x19E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A66 DUP6 DUP3 DUP7 ADD PUSH2 0x1A1B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A85 DUP2 PUSH2 0x1A70 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AA0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AAF DUP2 PUSH2 0x19FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ACA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AE9 JUMPI PUSH2 0x1AE8 PUSH2 0x1992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF7 DUP7 DUP3 DUP8 ADD PUSH2 0x19E5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B08 DUP7 DUP3 DUP8 ADD PUSH2 0x19E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B19 DUP7 DUP3 DUP8 ADD PUSH2 0x1A1B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B39 DUP2 PUSH2 0x1B23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B54 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B6D DUP2 PUSH2 0x1B5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B88 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BA4 JUMPI PUSH2 0x1BA3 PUSH2 0x1992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BB2 DUP5 DUP3 DUP6 ADD PUSH2 0x1A1B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1BE0 JUMPI PUSH2 0x1BDF PUSH2 0x1BBB JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BFD JUMPI PUSH2 0x1BFC PUSH2 0x1BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1C19 JUMPI PUSH2 0x1C18 PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1C36 JUMPI PUSH2 0x1C35 PUSH2 0x1BBB JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C53 JUMPI PUSH2 0x1C52 PUSH2 0x1BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1C6F JUMPI PUSH2 0x1C6E PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C90 JUMPI PUSH2 0x1C8F PUSH2 0x1992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CAE JUMPI PUSH2 0x1CAD PUSH2 0x1997 JUMP JUMPDEST JUMPDEST PUSH2 0x1CBA DUP8 DUP3 DUP9 ADD PUSH2 0x1BCA JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CDD JUMPI PUSH2 0x1CDC PUSH2 0x1997 JUMP JUMPDEST JUMPDEST PUSH2 0x1CE9 DUP8 DUP3 DUP9 ADD PUSH2 0x1C20 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0D JUMPI PUSH2 0x1D0C PUSH2 0x1992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D1B DUP5 DUP3 DUP6 ADD PUSH2 0x19E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D59 DUP2 PUSH2 0x1D24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D68 DUP2 PUSH2 0x19BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA3 DUP2 PUSH2 0x19FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB5 DUP4 DUP4 PUSH2 0x1D9A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD9 DUP3 PUSH2 0x1D6E JUMP JUMPDEST PUSH2 0x1DE3 DUP2 DUP6 PUSH2 0x1D79 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DEE DUP4 PUSH2 0x1D8A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E1F JUMPI DUP2 MLOAD PUSH2 0x1E06 DUP9 DUP3 PUSH2 0x1DA9 JUMP JUMPDEST SWAP8 POP PUSH2 0x1E11 DUP4 PUSH2 0x1DC1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1DF2 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1E41 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1D50 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1E53 DUP2 DUP10 PUSH2 0x1937 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1E67 DUP2 DUP9 PUSH2 0x1937 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E76 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1AA6 JUMP JUMPDEST PUSH2 0x1E83 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0x1E90 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1B64 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1EA2 DUP2 DUP5 PUSH2 0x1DCE JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EC5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ED4 DUP2 PUSH2 0x1B23 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EF1 DUP2 PUSH2 0x1ECB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F00 DUP2 PUSH2 0x1B5A JUMP JUMPDEST DUP2 EQ PUSH2 0x1F0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F1D DUP2 PUSH2 0x1EF7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1F42 JUMPI PUSH2 0x1F41 PUSH2 0x1992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F50 DUP11 DUP3 DUP12 ADD PUSH2 0x19E5 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1F61 DUP11 DUP3 DUP12 ADD PUSH2 0x19E5 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1F72 DUP11 DUP3 DUP12 ADD PUSH2 0x1A1B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1F83 DUP11 DUP3 DUP12 ADD PUSH2 0x1A1B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1F94 DUP11 DUP3 DUP12 ADD PUSH2 0x1EE2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1FA5 DUP11 DUP3 DUP12 ADD PUSH2 0x1F0E JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1FB6 DUP11 DUP3 DUP12 ADD PUSH2 0x1F0E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FDC JUMPI PUSH2 0x1FDB PUSH2 0x1992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FEA DUP6 DUP3 DUP7 ADD PUSH2 0x19E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FFB DUP6 DUP3 DUP7 ADD PUSH2 0x19E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x204C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x205F JUMPI PUSH2 0x205E PUSH2 0x2005 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x417272617973206C656E677468206D69736D6174636800000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209B PUSH1 0x16 DUP4 PUSH2 0x18EB JUMP JUMPDEST SWAP2 POP PUSH2 0x20A6 DUP3 PUSH2 0x2065 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20CA DUP2 PUSH2 0x208E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x213A DUP3 PUSH2 0x19FA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x216C JUMPI PUSH2 0x216B PUSH2 0x2100 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x21BB PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1B64 JUMP JUMPDEST PUSH2 0x21C8 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0x21D5 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0x21E2 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1AA6 JUMP JUMPDEST PUSH2 0x21EF PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1AA6 JUMP JUMPDEST PUSH2 0x21FC PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1AA6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x221C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0x2229 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D5F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2245 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0x2252 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AA6 JUMP JUMPDEST PUSH2 0x225F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AA6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2272 DUP3 PUSH2 0x19FA JUMP JUMPDEST SWAP2 POP PUSH2 0x227D DUP4 PUSH2 0x19FA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2295 JUMPI PUSH2 0x2294 PUSH2 0x2100 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x22B0 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1B64 JUMP JUMPDEST PUSH2 0x22BD PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1B64 JUMP JUMPDEST PUSH2 0x22CA PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B64 JUMP JUMPDEST PUSH2 0x22D7 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1AA6 JUMP JUMPDEST PUSH2 0x22E4 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1D5F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2303 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1B64 JUMP JUMPDEST PUSH2 0x2310 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B30 JUMP JUMPDEST PUSH2 0x231D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B64 JUMP JUMPDEST PUSH2 0x232A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1B64 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0x5E 0xDE MLOAD 0xD9 0xE8 EXTCODECOPY CALLDATASIZE 0xDA 0xE6 PUSH11 0x2125F7E04B9D00445FD78B 0xB5 0xF8 OR GASLIMIT 0xAE CALLVALUE 0xEA SWAP8 0xCF CHAINID PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"396:1857:33:-:0;;;660:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;830:5;816:4;1616::8;3428:431:21;;;;;;;;;;;;;;;;;790:4:33;796:6;1656:5:6;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;3501:45:21;3532:13;3501:4;:30;;;;:45;;;;:::i;:::-;3493:53;;;;;;3567:51;3601:16;3567:7;:33;;;;:51;;;;:::i;:::-;3556:62;;;;;;3658:4;3642:22;;;;;;3628:36;;;;;;3707:7;3691:25;;;;;;3674:42;;;;;;3744:13;3727:30;;;;;;3792:23;:21;;;:23;;:::i;:::-;3767:48;;;;;;3847:4;3825:27;;;;;;;;;;3428:431;;1577:52:8;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;859:9:33::3;847;;:21;;;;;;;;;;;;;;;;;;660:215:::0;;;;396:1857;;2887:340:17;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;;;:20;;:::i;:::-;3050:27;;;;3006:215;3149:5;3108:32;3134:5;3108:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3192:17;;3168:42;;2887:340;;;;;:::o;4213:179:21:-;4268:7;2079:95;4326:11;;4339:14;;4355:13;4378:4;4304:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1708:286:17:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3468:175:18:-;3536:20;3617:10;3607:20;;3468:175;;;:::o;7:75:34:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:86::-;2712:7;2752:4;2745:5;2741:16;2730:27;;2677:86;;;:::o;2769:118::-;2840:22;2856:5;2840:22;:::i;:::-;2833:5;2830:33;2820:61;;2877:1;2874;2867:12;2820:61;2769:118;:::o;2893:139::-;2948:5;2979:6;2973:13;2964:22;;2995:31;3020:5;2995:31;:::i;:::-;2893:139;;;;:::o;3038:126::-;3075:7;3115:42;3108:5;3104:54;3093:65;;3038:126;;;:::o;3170:96::-;3207:7;3236:24;3254:5;3236:24;:::i;:::-;3225:35;;3170:96;;;:::o;3272:122::-;3345:24;3363:5;3345:24;:::i;:::-;3338:5;3335:35;3325:63;;3384:1;3381;3374:12;3325:63;3272:122;:::o;3400:143::-;3457:5;3488:6;3482:13;3473:22;;3504:33;3531:5;3504:33;:::i;:::-;3400:143;;;;:::o;3549:1162::-;3664:6;3672;3680;3688;3737:3;3725:9;3716:7;3712:23;3708:33;3705:120;;;3744:79;;:::i;:::-;3705:120;3885:1;3874:9;3870:17;3864:24;3915:18;3907:6;3904:30;3901:117;;;3937:79;;:::i;:::-;3901:117;4042:74;4108:7;4099:6;4088:9;4084:22;4042:74;:::i;:::-;4032:84;;3835:291;4186:2;4175:9;4171:18;4165:25;4217:18;4209:6;4206:30;4203:117;;;4239:79;;:::i;:::-;4203:117;4344:74;4410:7;4401:6;4390:9;4386:22;4344:74;:::i;:::-;4334:84;;4136:292;4467:2;4493:62;4547:7;4538:6;4527:9;4523:22;4493:62;:::i;:::-;4483:72;;4438:127;4604:2;4630:64;4686:7;4677:6;4666:9;4662:22;4630:64;:::i;:::-;4620:74;;4575:129;3549:1162;;;;;;;:::o;4717:99::-;4769:6;4803:5;4797:12;4787:22;;4717:99;;;:::o;4822:180::-;4870:77;4867:1;4860:88;4967:4;4964:1;4957:15;4991:4;4988:1;4981:15;5008:320;5052:6;5089:1;5083:4;5079:12;5069:22;;5136:1;5130:4;5126:12;5157:18;5147:81;;5213:4;5205:6;5201:17;5191:27;;5147:81;5275:2;5267:6;5264:14;5244:18;5241:38;5238:84;;5294:18;;:::i;:::-;5238:84;5059:269;5008:320;;;:::o;5334:141::-;5383:4;5406:3;5398:11;;5429:3;5426:1;5419:14;5463:4;5460:1;5450:18;5442:26;;5334:141;;;:::o;5481:93::-;5518:6;5565:2;5560;5553:5;5549:14;5545:23;5535:33;;5481:93;;;:::o;5580:107::-;5624:8;5674:5;5668:4;5664:16;5643:37;;5580:107;;;;:::o;5693:393::-;5762:6;5812:1;5800:10;5796:18;5835:97;5865:66;5854:9;5835:97;:::i;:::-;5953:39;5983:8;5972:9;5953:39;:::i;:::-;5941:51;;6025:4;6021:9;6014:5;6010:21;6001:30;;6074:4;6064:8;6060:19;6053:5;6050:30;6040:40;;5769:317;;5693:393;;;;;:::o;6092:77::-;6129:7;6158:5;6147:16;;6092:77;;;:::o;6175:60::-;6203:3;6224:5;6217:12;;6175:60;;;:::o;6241:142::-;6291:9;6324:53;6342:34;6351:24;6369:5;6351:24;:::i;:::-;6342:34;:::i;:::-;6324:53;:::i;:::-;6311:66;;6241:142;;;:::o;6389:75::-;6432:3;6453:5;6446:12;;6389:75;;;:::o;6470:269::-;6580:39;6611:7;6580:39;:::i;:::-;6641:91;6690:41;6714:16;6690:41;:::i;:::-;6682:6;6675:4;6669:11;6641:91;:::i;:::-;6635:4;6628:105;6546:193;6470:269;;;:::o;6745:73::-;6790:3;6745:73;:::o;6824:189::-;6901:32;;:::i;:::-;6942:65;7000:6;6992;6986:4;6942:65;:::i;:::-;6877:136;6824:189;;:::o;7019:186::-;7079:120;7096:3;7089:5;7086:14;7079:120;;;7150:39;7187:1;7180:5;7150:39;:::i;:::-;7123:1;7116:5;7112:13;7103:22;;7079:120;;;7019:186;;:::o;7211:543::-;7312:2;7307:3;7304:11;7301:446;;;7346:38;7378:5;7346:38;:::i;:::-;7430:29;7448:10;7430:29;:::i;:::-;7420:8;7416:44;7613:2;7601:10;7598:18;7595:49;;;7634:8;7619:23;;7595:49;7657:80;7713:22;7731:3;7713:22;:::i;:::-;7703:8;7699:37;7686:11;7657:80;:::i;:::-;7316:431;;7301:446;7211:543;;;:::o;7760:117::-;7814:8;7864:5;7858:4;7854:16;7833:37;;7760:117;;;;:::o;7883:169::-;7927:6;7960:51;8008:1;8004:6;7996:5;7993:1;7989:13;7960:51;:::i;:::-;7956:56;8041:4;8035;8031:15;8021:25;;7934:118;7883:169;;;;:::o;8057:295::-;8133:4;8279:29;8304:3;8298:4;8279:29;:::i;:::-;8271:37;;8341:3;8338:1;8334:11;8328:4;8325:21;8317:29;;8057:295;;;;:::o;8357:1395::-;8474:37;8507:3;8474:37;:::i;:::-;8576:18;8568:6;8565:30;8562:56;;;8598:18;;:::i;:::-;8562:56;8642:38;8674:4;8668:11;8642:38;:::i;:::-;8727:67;8787:6;8779;8773:4;8727:67;:::i;:::-;8821:1;8845:4;8832:17;;8877:2;8869:6;8866:14;8894:1;8889:618;;;;9551:1;9568:6;9565:77;;;9617:9;9612:3;9608:19;9602:26;9593:35;;9565:77;9668:67;9728:6;9721:5;9668:67;:::i;:::-;9662:4;9655:81;9524:222;8859:887;;8889:618;8941:4;8937:9;8929:6;8925:22;8975:37;9007:4;8975:37;:::i;:::-;9034:1;9048:208;9062:7;9059:1;9056:14;9048:208;;;9141:9;9136:3;9132:19;9126:26;9118:6;9111:42;9192:1;9184:6;9180:14;9170:24;;9239:2;9228:9;9224:18;9211:31;;9085:4;9082:1;9078:12;9073:17;;9048:208;;;9284:6;9275:7;9272:19;9269:179;;;9342:9;9337:3;9333:19;9327:26;9385:48;9427:4;9419:6;9415:17;9404:9;9385:48;:::i;:::-;9377:6;9370:64;9292:156;9269:179;9494:1;9490;9482:6;9478:14;9474:22;9468:4;9461:36;8896:611;;;8859:887;;8449:1303;;;8357:1395;;:::o;9758:118::-;9845:24;9863:5;9845:24;:::i;:::-;9840:3;9833:37;9758:118;;:::o;9882:222::-;9975:4;10013:2;10002:9;9998:18;9990:26;;10026:71;10094:1;10083:9;10079:17;10070:6;10026:71;:::i;:::-;9882:222;;;;:::o;10110:77::-;10147:7;10176:5;10165:16;;10110:77;;;:::o;10193:118::-;10280:24;10298:5;10280:24;:::i;:::-;10275:3;10268:37;10193:118;;:::o;10317:::-;10404:24;10422:5;10404:24;:::i;:::-;10399:3;10392:37;10317:118;;:::o;10441:664::-;10646:4;10684:3;10673:9;10669:19;10661:27;;10698:71;10766:1;10755:9;10751:17;10742:6;10698:71;:::i;:::-;10779:72;10847:2;10836:9;10832:18;10823:6;10779:72;:::i;:::-;10861;10929:2;10918:9;10914:18;10905:6;10861:72;:::i;:::-;10943;11011:2;11000:9;10996:18;10987:6;10943:72;:::i;:::-;11025:73;11093:3;11082:9;11078:19;11069:6;11025:73;:::i;:::-;10441:664;;;;;;;;:::o;11111:169::-;11195:11;11229:6;11224:3;11217:19;11269:4;11264:3;11260:14;11245:29;;11111:169;;;;:::o;11286:377::-;11374:3;11402:39;11435:5;11402:39;:::i;:::-;11457:71;11521:6;11516:3;11457:71;:::i;:::-;11450:78;;11537:65;11595:6;11590:3;11583:4;11576:5;11572:16;11537:65;:::i;:::-;11627:29;11649:6;11627:29;:::i;:::-;11622:3;11618:39;11611:46;;11378:285;11286:377;;;;:::o;11669:313::-;11782:4;11820:2;11809:9;11805:18;11797:26;;11869:9;11863:4;11859:20;11855:1;11844:9;11840:17;11833:47;11897:78;11970:4;11961:6;11897:78;:::i;:::-;11889:86;;11669:313;;;;:::o;11988:98::-;12039:6;12073:5;12067:12;12057:22;;11988:98;;;:::o;12092:116::-;12143:4;12166:3;12158:11;;12196:4;12191:3;12187:14;12179:22;;12092:116;;;:::o;12214:154::-;12257:11;12293:29;12317:3;12311:10;12293:29;:::i;:::-;12356:5;12332:29;;12269:99;12214:154;;;:::o;12374:594::-;12458:5;12489:38;12521:5;12489:38;:::i;:::-;12552:5;12579:40;12613:5;12579:40;:::i;:::-;12567:52;;12638:35;12664:8;12638:35;:::i;:::-;12629:44;;12697:2;12689:6;12686:14;12683:278;;;12768:169;12853:66;12823:6;12819:2;12815:15;12812:1;12808:23;12768:169;:::i;:::-;12745:5;12724:227;12715:236;;12683:278;12464:504;;12374:594;;;:::o;396:1857:33:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1145":{"entryPoint":1248,"id":1145,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_4304":{"entryPoint":3752,"id":4304,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_4316":{"entryPoint":3811,"id":4316,"parameterSlots":0,"returnSlots":1},"@_approve_805":{"entryPoint":2622,"id":805,"parameterSlots":3,"returnSlots":0},"@_approve_865":{"entryPoint":4161,"id":865,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_4234":{"entryPoint":5181,"id":4234,"parameterSlots":0,"returnSlots":1},"@_burn_787":{"entryPoint":3870,"id":787,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":3216,"id":84,"parameterSlots":0,"returnSlots":0},"@_domainSeparatorV4_4213":{"entryPoint":3033,"id":4213,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_4250":{"entryPoint":4087,"id":4250,"parameterSlots":1,"returnSlots":1},"@_mint_754":{"entryPoint":3351,"id":754,"parameterSlots":2,"returnSlots":0},"@_msgSender_1684":{"entryPoint":2614,"id":1684,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_913":{"entryPoint":2640,"id":913,"parameterSlots":3,"returnSlots":0},"@_throwError_4089":{"entryPoint":5816,"id":4089,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":3481,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_644":{"entryPoint":2789,"id":644,"parameterSlots":3,"returnSlots":0},"@_update_721":{"entryPoint":4632,"id":721,"parameterSlots":3,"returnSlots":0},"@_useNonce_1744":{"entryPoint":4000,"id":1744,"parameterSlots":1,"returnSlots":1},"@allowance_541":{"entryPoint":2345,"id":541,"parameterSlots":2,"returnSlots":1},"@approve_565":{"entryPoint":1133,"id":565,"parameterSlots":2,"returnSlots":1},"@balanceOf_500":{"entryPoint":1492,"id":500,"parameterSlots":1,"returnSlots":1},"@batchMint_9659":{"entryPoint":1298,"id":9659,"parameterSlots":4,"returnSlots":0},"@burn_9675":{"entryPoint":1960,"id":9675,"parameterSlots":2,"returnSlots":0},"@byteLength_2117":{"entryPoint":6288,"id":2117,"parameterSlots":1,"returnSlots":1},"@decimals_9599":{"entryPoint":1225,"id":9599,"parameterSlots":0,"returnSlots":1},"@eip712Domain_4292":{"entryPoint":1602,"id":4292,"parameterSlots":0,"returnSlots":7},"@faucet_9688":{"entryPoint":1285,"id":9688,"parameterSlots":1,"returnSlots":0},"@mint_9615":{"entryPoint":1263,"id":9615,"parameterSlots":2,"returnSlots":0},"@name_460":{"entryPoint":987,"id":460,"parameterSlots":0,"returnSlots":1},"@nonces_1135":{"entryPoint":1584,"id":1135,"parameterSlots":1,"returnSlots":1},"@nonces_1729":{"entryPoint":3679,"id":1729,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":1772,"id":67,"parameterSlots":0,"returnSlots":1},"@permit_1118":{"entryPoint":2017,"id":1118,"parameterSlots":7,"returnSlots":0},"@recover_4040":{"entryPoint":4113,"id":4040,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1564,"id":98,"parameterSlots":0,"returnSlots":0},"@symbol_469":{"entryPoint":1814,"id":469,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_2184":{"entryPoint":5331,"id":2184,"parameterSlots":2,"returnSlots":1},"@toString_2085":{"entryPoint":6172,"id":2085,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_4402":{"entryPoint":5507,"id":4402,"parameterSlots":2,"returnSlots":1},"@totalSupply_487":{"entryPoint":1168,"id":487,"parameterSlots":0,"returnSlots":1},"@transferFrom_597":{"entryPoint":1178,"id":597,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":2480,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_524":{"entryPoint":1982,"id":524,"parameterSlots":2,"returnSlots":1},"@tryRecover_4004":{"entryPoint":5572,"id":4004,"parameterSlots":4,"returnSlots":3},"abi_decode_t_address":{"entryPoint":6629,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":7114,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":7200,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes32":{"entryPoint":7950,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6683,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":7906,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7415,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":8133,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6864,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":7971,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6704,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":7286,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256":{"entryPoint":7054,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":7593,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7519,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":7630,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6780,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":7504,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":7012,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6455,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c_to_t_string_memory_ptr_fromStack":{"entryPoint":8334,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":7578,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6822,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":6960,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7856,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":8711,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":8752,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6795,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7724,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":7027,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":8614,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":8859,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":8942,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6512,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8369,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6837,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":6975,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7562,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7534,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":6368,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7617,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":7545,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6379,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8807,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6588,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6768,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":7460,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":7002,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6556,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6650,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":6947,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":6396,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8244,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":8495,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8448,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":9011,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8197,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":8401,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8567,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":7104,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7099,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":7109,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":6551,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6546,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6438,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c":{"entryPoint":8293,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6606,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":7927,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6660,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":7883,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:19607:34","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:34","statements":[{"nodeType":"YulAssignment","src":"77:22:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:34"},"nodeType":"YulFunctionCall","src":"87:12:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:34"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:34","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:34","type":""}],"src":"7:99:34"},{"body":{"nodeType":"YulBlock","src":"208:73:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:34"},"nodeType":"YulFunctionCall","src":"218:19:34"},"nodeType":"YulExpressionStatement","src":"218:19:34"},{"nodeType":"YulAssignment","src":"246:29:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:34"},"nodeType":"YulFunctionCall","src":"261:14:34"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:34"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:34","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:34","type":""}],"src":"112:169:34"},{"body":{"nodeType":"YulBlock","src":"349:184:34","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:34","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:34","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:34"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:34"},"nodeType":"YulFunctionCall","src":"449:11:34"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:34"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:34"},"nodeType":"YulFunctionCall","src":"468:11:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:34"},"nodeType":"YulFunctionCall","src":"462:18:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:34"},"nodeType":"YulFunctionCall","src":"442:39:34"},"nodeType":"YulExpressionStatement","src":"442:39:34"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:34"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:34"},"nodeType":"YulFunctionCall","src":"386:13:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:34","statements":[{"nodeType":"YulAssignment","src":"402:15:34","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:34"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:34"},"nodeType":"YulFunctionCall","src":"407:10:34"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:34"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:34","statements":[]},"src":"378:113:34"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:34"},"nodeType":"YulFunctionCall","src":"507:16:34"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:34","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:34"},"nodeType":"YulFunctionCall","src":"500:27:34"},"nodeType":"YulExpressionStatement","src":"500:27:34"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:34","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:34","type":""}],"src":"287:246:34"},{"body":{"nodeType":"YulBlock","src":"587:54:34","statements":[{"nodeType":"YulAssignment","src":"597:38:34","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:34","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:34"},"nodeType":"YulFunctionCall","src":"611:14:34"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:34","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:34"},"nodeType":"YulFunctionCall","src":"627:7:34"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:34"},"nodeType":"YulFunctionCall","src":"607:28:34"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:34"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:34","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:34","type":""}],"src":"539:102:34"},{"body":{"nodeType":"YulBlock","src":"739:285:34","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:34"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:34"},"nodeType":"YulFunctionCall","src":"763:39:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:34","type":""}]},{"nodeType":"YulAssignment","src":"811:78:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:34"},"nodeType":"YulFunctionCall","src":"818:71:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:34"},"nodeType":"YulFunctionCall","src":"933:16:34"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:34"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:34"},"nodeType":"YulFunctionCall","src":"898:65:34"},"nodeType":"YulExpressionStatement","src":"898:65:34"},{"nodeType":"YulAssignment","src":"972:46:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:34"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:34"},"nodeType":"YulFunctionCall","src":"988:29:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:34"},"nodeType":"YulFunctionCall","src":"979:39:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:34"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:34","type":""}],"src":"647:377:34"},{"body":{"nodeType":"YulBlock","src":"1148:195:34","statements":[{"nodeType":"YulAssignment","src":"1158:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:34"},"nodeType":"YulFunctionCall","src":"1166:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:34"},"nodeType":"YulFunctionCall","src":"1201:17:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:34"},"nodeType":"YulFunctionCall","src":"1220:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:34"},"nodeType":"YulFunctionCall","src":"1194:47:34"},"nodeType":"YulExpressionStatement","src":"1194:47:34"},{"nodeType":"YulAssignment","src":"1250:86:34","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:34"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:34"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:34"},"nodeType":"YulFunctionCall","src":"1258:78:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:34"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:34","type":""}],"src":"1030:313:34"},{"body":{"nodeType":"YulBlock","src":"1389:35:34","statements":[{"nodeType":"YulAssignment","src":"1399:19:34","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:34","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:34"},"nodeType":"YulFunctionCall","src":"1409:9:34"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:34"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:34","type":""}],"src":"1349:75:34"},{"body":{"nodeType":"YulBlock","src":"1519:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:34"},"nodeType":"YulFunctionCall","src":"1529:12:34"},"nodeType":"YulExpressionStatement","src":"1529:12:34"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:34"},{"body":{"nodeType":"YulBlock","src":"1642:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:34"},"nodeType":"YulFunctionCall","src":"1652:12:34"},"nodeType":"YulExpressionStatement","src":"1652:12:34"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:34"},{"body":{"nodeType":"YulBlock","src":"1721:81:34","statements":[{"nodeType":"YulAssignment","src":"1731:65:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:34"},"nodeType":"YulFunctionCall","src":"1742:54:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:34"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:34","type":""}],"src":"1676:126:34"},{"body":{"nodeType":"YulBlock","src":"1853:51:34","statements":[{"nodeType":"YulAssignment","src":"1863:35:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:34"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:34"},"nodeType":"YulFunctionCall","src":"1874:24:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:34"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:34","type":""}],"src":"1808:96:34"},{"body":{"nodeType":"YulBlock","src":"1953:79:34","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:34"},"nodeType":"YulFunctionCall","src":"2012:12:34"},"nodeType":"YulExpressionStatement","src":"2012:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:34"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:34"},"nodeType":"YulFunctionCall","src":"1983:24:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:34"},"nodeType":"YulFunctionCall","src":"1973:35:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:34"},"nodeType":"YulFunctionCall","src":"1966:43:34"},"nodeType":"YulIf","src":"1963:63:34"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:34","type":""}],"src":"1910:122:34"},{"body":{"nodeType":"YulBlock","src":"2090:87:34","statements":[{"nodeType":"YulAssignment","src":"2100:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:34"},"nodeType":"YulFunctionCall","src":"2109:20:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:34"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:34"},"nodeType":"YulFunctionCall","src":"2138:33:34"},"nodeType":"YulExpressionStatement","src":"2138:33:34"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:34","type":""}],"src":"2038:139:34"},{"body":{"nodeType":"YulBlock","src":"2228:32:34","statements":[{"nodeType":"YulAssignment","src":"2238:16:34","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:34"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:34","type":""}],"src":"2183:77:34"},{"body":{"nodeType":"YulBlock","src":"2309:79:34","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:34"},"nodeType":"YulFunctionCall","src":"2368:12:34"},"nodeType":"YulExpressionStatement","src":"2368:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:34"},"nodeType":"YulFunctionCall","src":"2339:24:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:34"},"nodeType":"YulFunctionCall","src":"2329:35:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:34"},"nodeType":"YulFunctionCall","src":"2322:43:34"},"nodeType":"YulIf","src":"2319:63:34"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:34","type":""}],"src":"2266:122:34"},{"body":{"nodeType":"YulBlock","src":"2446:87:34","statements":[{"nodeType":"YulAssignment","src":"2456:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:34"},"nodeType":"YulFunctionCall","src":"2465:20:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:34"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:34"},"nodeType":"YulFunctionCall","src":"2494:33:34"},"nodeType":"YulExpressionStatement","src":"2494:33:34"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:34","type":""}],"src":"2394:139:34"},{"body":{"nodeType":"YulBlock","src":"2622:391:34","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:34"},"nodeType":"YulFunctionCall","src":"2670:79:34"},"nodeType":"YulExpressionStatement","src":"2670:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:34"},"nodeType":"YulFunctionCall","src":"2639:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:34","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:34"},"nodeType":"YulFunctionCall","src":"2635:32:34"},"nodeType":"YulIf","src":"2632:119:34"},{"nodeType":"YulBlock","src":"2761:117:34","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:34","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:34"},"nodeType":"YulFunctionCall","src":"2836:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:34"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:34"},"nodeType":"YulFunctionCall","src":"2815:53:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:34"}]}]},{"nodeType":"YulBlock","src":"2888:118:34","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:34","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:34","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:34"},"nodeType":"YulFunctionCall","src":"2964:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:34"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:34"},"nodeType":"YulFunctionCall","src":"2943:53:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:34"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:34","type":""}],"src":"2539:474:34"},{"body":{"nodeType":"YulBlock","src":"3061:48:34","statements":[{"nodeType":"YulAssignment","src":"3071:32:34","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:34"},"nodeType":"YulFunctionCall","src":"3089:13:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:34"},"nodeType":"YulFunctionCall","src":"3082:21:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:34"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:34","type":""}],"src":"3019:90:34"},{"body":{"nodeType":"YulBlock","src":"3174:50:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:34"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:34"},"nodeType":"YulFunctionCall","src":"3196:21:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:34"},"nodeType":"YulFunctionCall","src":"3184:34:34"},"nodeType":"YulExpressionStatement","src":"3184:34:34"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:34","type":""}],"src":"3115:109:34"},{"body":{"nodeType":"YulBlock","src":"3322:118:34","statements":[{"nodeType":"YulAssignment","src":"3332:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:34"},"nodeType":"YulFunctionCall","src":"3340:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:34"},"nodeType":"YulFunctionCall","src":"3415:17:34"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:34"},"nodeType":"YulFunctionCall","src":"3368:65:34"},"nodeType":"YulExpressionStatement","src":"3368:65:34"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:34","type":""}],"src":"3230:210:34"},{"body":{"nodeType":"YulBlock","src":"3511:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:34"},"nodeType":"YulFunctionCall","src":"3533:24:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:34"},"nodeType":"YulFunctionCall","src":"3521:37:34"},"nodeType":"YulExpressionStatement","src":"3521:37:34"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:34","type":""}],"src":"3446:118:34"},{"body":{"nodeType":"YulBlock","src":"3668:124:34","statements":[{"nodeType":"YulAssignment","src":"3678:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:34"},"nodeType":"YulFunctionCall","src":"3686:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:34"},"nodeType":"YulFunctionCall","src":"3767:17:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:34"},"nodeType":"YulFunctionCall","src":"3714:71:34"},"nodeType":"YulExpressionStatement","src":"3714:71:34"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:34","type":""}],"src":"3570:222:34"},{"body":{"nodeType":"YulBlock","src":"3898:519:34","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:34"},"nodeType":"YulFunctionCall","src":"3946:79:34"},"nodeType":"YulExpressionStatement","src":"3946:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:34"},"nodeType":"YulFunctionCall","src":"3915:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:34","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:34"},"nodeType":"YulFunctionCall","src":"3911:32:34"},"nodeType":"YulIf","src":"3908:119:34"},{"nodeType":"YulBlock","src":"4037:117:34","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:34","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:34"},"nodeType":"YulFunctionCall","src":"4112:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:34"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:34"},"nodeType":"YulFunctionCall","src":"4091:53:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:34"}]}]},{"nodeType":"YulBlock","src":"4164:118:34","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:34","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:34","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:34"},"nodeType":"YulFunctionCall","src":"4240:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:34"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:34"},"nodeType":"YulFunctionCall","src":"4219:53:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:34"}]}]},{"nodeType":"YulBlock","src":"4292:118:34","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:34","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:34","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:34"},"nodeType":"YulFunctionCall","src":"4368:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:34"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:34"},"nodeType":"YulFunctionCall","src":"4347:53:34"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:34"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:34","type":""}],"src":"3798:619:34"},{"body":{"nodeType":"YulBlock","src":"4466:43:34","statements":[{"nodeType":"YulAssignment","src":"4476:27:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:34","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:34"},"nodeType":"YulFunctionCall","src":"4487:16:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:34"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:34","type":""}],"src":"4423:86:34"},{"body":{"nodeType":"YulBlock","src":"4576:51:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:34"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:34"},"nodeType":"YulFunctionCall","src":"4598:22:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:34"},"nodeType":"YulFunctionCall","src":"4586:35:34"},"nodeType":"YulExpressionStatement","src":"4586:35:34"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:34","type":""}],"src":"4515:112:34"},{"body":{"nodeType":"YulBlock","src":"4727:120:34","statements":[{"nodeType":"YulAssignment","src":"4737:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:34"},"nodeType":"YulFunctionCall","src":"4745:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:34"},"nodeType":"YulFunctionCall","src":"4822:17:34"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:34"},"nodeType":"YulFunctionCall","src":"4773:67:34"},"nodeType":"YulExpressionStatement","src":"4773:67:34"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:34","type":""}],"src":"4633:214:34"},{"body":{"nodeType":"YulBlock","src":"4898:32:34","statements":[{"nodeType":"YulAssignment","src":"4908:16:34","value":{"name":"value","nodeType":"YulIdentifier","src":"4919:5:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4908:7:34"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4880:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4890:7:34","type":""}],"src":"4853:77:34"},{"body":{"nodeType":"YulBlock","src":"5001:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5018:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5041:5:34"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5023:17:34"},"nodeType":"YulFunctionCall","src":"5023:24:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5011:6:34"},"nodeType":"YulFunctionCall","src":"5011:37:34"},"nodeType":"YulExpressionStatement","src":"5011:37:34"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4989:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4996:3:34","type":""}],"src":"4936:118:34"},{"body":{"nodeType":"YulBlock","src":"5158:124:34","statements":[{"nodeType":"YulAssignment","src":"5168:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5180:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"5191:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5176:3:34"},"nodeType":"YulFunctionCall","src":"5176:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5168:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5248:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5261:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"5272:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5257:3:34"},"nodeType":"YulFunctionCall","src":"5257:17:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5204:43:34"},"nodeType":"YulFunctionCall","src":"5204:71:34"},"nodeType":"YulExpressionStatement","src":"5204:71:34"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5130:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5142:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5153:4:34","type":""}],"src":"5060:222:34"},{"body":{"nodeType":"YulBlock","src":"5354:263:34","statements":[{"body":{"nodeType":"YulBlock","src":"5400:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5402:77:34"},"nodeType":"YulFunctionCall","src":"5402:79:34"},"nodeType":"YulExpressionStatement","src":"5402:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5375:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5371:3:34"},"nodeType":"YulFunctionCall","src":"5371:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"5396:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5367:3:34"},"nodeType":"YulFunctionCall","src":"5367:32:34"},"nodeType":"YulIf","src":"5364:119:34"},{"nodeType":"YulBlock","src":"5493:117:34","statements":[{"nodeType":"YulVariableDeclaration","src":"5508:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"5522:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5512:6:34","type":""}]},{"nodeType":"YulAssignment","src":"5537:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5572:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"5583:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5568:3:34"},"nodeType":"YulFunctionCall","src":"5568:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5592:7:34"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5547:20:34"},"nodeType":"YulFunctionCall","src":"5547:53:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5537:6:34"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5324:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5335:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5347:6:34","type":""}],"src":"5288:329:34"},{"body":{"nodeType":"YulBlock","src":"5712:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5729:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5732:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5722:6:34"},"nodeType":"YulFunctionCall","src":"5722:12:34"},"nodeType":"YulExpressionStatement","src":"5722:12:34"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5623:117:34"},{"body":{"nodeType":"YulBlock","src":"5835:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5852:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5855:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5845:6:34"},"nodeType":"YulFunctionCall","src":"5845:12:34"},"nodeType":"YulExpressionStatement","src":"5845:12:34"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"5746:117:34"},{"body":{"nodeType":"YulBlock","src":"5958:28:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5975:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5978:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5968:6:34"},"nodeType":"YulFunctionCall","src":"5968:12:34"},"nodeType":"YulExpressionStatement","src":"5968:12:34"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"5869:117:34"},{"body":{"nodeType":"YulBlock","src":"6099:478:34","statements":[{"body":{"nodeType":"YulBlock","src":"6148:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6150:77:34"},"nodeType":"YulFunctionCall","src":"6150:79:34"},"nodeType":"YulExpressionStatement","src":"6150:79:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6127:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"6135:4:34","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6123:3:34"},"nodeType":"YulFunctionCall","src":"6123:17:34"},{"name":"end","nodeType":"YulIdentifier","src":"6142:3:34"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6119:3:34"},"nodeType":"YulFunctionCall","src":"6119:27:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6112:6:34"},"nodeType":"YulFunctionCall","src":"6112:35:34"},"nodeType":"YulIf","src":"6109:122:34"},{"nodeType":"YulAssignment","src":"6240:30:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6263:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6250:12:34"},"nodeType":"YulFunctionCall","src":"6250:20:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6240:6:34"}]},{"body":{"nodeType":"YulBlock","src":"6313:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"6315:77:34"},"nodeType":"YulFunctionCall","src":"6315:79:34"},"nodeType":"YulExpressionStatement","src":"6315:79:34"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6285:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"6293:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6282:2:34"},"nodeType":"YulFunctionCall","src":"6282:30:34"},"nodeType":"YulIf","src":"6279:117:34"},{"nodeType":"YulAssignment","src":"6405:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6421:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"6429:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6417:3:34"},"nodeType":"YulFunctionCall","src":"6417:17:34"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6405:8:34"}]},{"body":{"nodeType":"YulBlock","src":"6488:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6490:77:34"},"nodeType":"YulFunctionCall","src":"6490:79:34"},"nodeType":"YulExpressionStatement","src":"6490:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6453:8:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6467:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"6475:4:34","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6463:3:34"},"nodeType":"YulFunctionCall","src":"6463:17:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6449:3:34"},"nodeType":"YulFunctionCall","src":"6449:32:34"},{"name":"end","nodeType":"YulIdentifier","src":"6483:3:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6446:2:34"},"nodeType":"YulFunctionCall","src":"6446:41:34"},"nodeType":"YulIf","src":"6443:128:34"}]},"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6066:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"6074:3:34","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"6082:8:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"6092:6:34","type":""}],"src":"6009:568:34"},{"body":{"nodeType":"YulBlock","src":"6690:478:34","statements":[{"body":{"nodeType":"YulBlock","src":"6739:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6741:77:34"},"nodeType":"YulFunctionCall","src":"6741:79:34"},"nodeType":"YulExpressionStatement","src":"6741:79:34"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6718:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"6726:4:34","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6714:3:34"},"nodeType":"YulFunctionCall","src":"6714:17:34"},{"name":"end","nodeType":"YulIdentifier","src":"6733:3:34"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6710:3:34"},"nodeType":"YulFunctionCall","src":"6710:27:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6703:6:34"},"nodeType":"YulFunctionCall","src":"6703:35:34"},"nodeType":"YulIf","src":"6700:122:34"},{"nodeType":"YulAssignment","src":"6831:30:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6854:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6841:12:34"},"nodeType":"YulFunctionCall","src":"6841:20:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6831:6:34"}]},{"body":{"nodeType":"YulBlock","src":"6904:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"6906:77:34"},"nodeType":"YulFunctionCall","src":"6906:79:34"},"nodeType":"YulExpressionStatement","src":"6906:79:34"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6876:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"6884:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6873:2:34"},"nodeType":"YulFunctionCall","src":"6873:30:34"},"nodeType":"YulIf","src":"6870:117:34"},{"nodeType":"YulAssignment","src":"6996:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7012:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"7020:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7008:3:34"},"nodeType":"YulFunctionCall","src":"7008:17:34"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6996:8:34"}]},{"body":{"nodeType":"YulBlock","src":"7079:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"7081:77:34"},"nodeType":"YulFunctionCall","src":"7081:79:34"},"nodeType":"YulExpressionStatement","src":"7081:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"7044:8:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7058:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"7066:4:34","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7054:3:34"},"nodeType":"YulFunctionCall","src":"7054:17:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7040:3:34"},"nodeType":"YulFunctionCall","src":"7040:32:34"},{"name":"end","nodeType":"YulIdentifier","src":"7074:3:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7037:2:34"},"nodeType":"YulFunctionCall","src":"7037:41:34"},"nodeType":"YulIf","src":"7034:128:34"}]},"name":"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6657:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"6665:3:34","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"6673:8:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"6683:6:34","type":""}],"src":"6600:568:34"},{"body":{"nodeType":"YulBlock","src":"7327:781:34","statements":[{"body":{"nodeType":"YulBlock","src":"7373:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7375:77:34"},"nodeType":"YulFunctionCall","src":"7375:79:34"},"nodeType":"YulExpressionStatement","src":"7375:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7348:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"7357:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7344:3:34"},"nodeType":"YulFunctionCall","src":"7344:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"7369:2:34","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7340:3:34"},"nodeType":"YulFunctionCall","src":"7340:32:34"},"nodeType":"YulIf","src":"7337:119:34"},{"nodeType":"YulBlock","src":"7466:312:34","statements":[{"nodeType":"YulVariableDeclaration","src":"7481:45:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7512:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"7523:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7508:3:34"},"nodeType":"YulFunctionCall","src":"7508:17:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7495:12:34"},"nodeType":"YulFunctionCall","src":"7495:31:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7485:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"7573:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7575:77:34"},"nodeType":"YulFunctionCall","src":"7575:79:34"},"nodeType":"YulExpressionStatement","src":"7575:79:34"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7545:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"7553:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7542:2:34"},"nodeType":"YulFunctionCall","src":"7542:30:34"},"nodeType":"YulIf","src":"7539:117:34"},{"nodeType":"YulAssignment","src":"7670:98:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7740:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"7751:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7736:3:34"},"nodeType":"YulFunctionCall","src":"7736:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7760:7:34"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"7688:47:34"},"nodeType":"YulFunctionCall","src":"7688:80:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7670:6:34"},{"name":"value1","nodeType":"YulIdentifier","src":"7678:6:34"}]}]},{"nodeType":"YulBlock","src":"7788:313:34","statements":[{"nodeType":"YulVariableDeclaration","src":"7803:46:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7834:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"7845:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7830:3:34"},"nodeType":"YulFunctionCall","src":"7830:18:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7817:12:34"},"nodeType":"YulFunctionCall","src":"7817:32:34"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7807:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"7896:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7898:77:34"},"nodeType":"YulFunctionCall","src":"7898:79:34"},"nodeType":"YulExpressionStatement","src":"7898:79:34"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7868:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"7876:18:34","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7865:2:34"},"nodeType":"YulFunctionCall","src":"7865:30:34"},"nodeType":"YulIf","src":"7862:117:34"},{"nodeType":"YulAssignment","src":"7993:98:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8063:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"8074:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8059:3:34"},"nodeType":"YulFunctionCall","src":"8059:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8083:7:34"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"8011:47:34"},"nodeType":"YulFunctionCall","src":"8011:80:34"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7993:6:34"},{"name":"value3","nodeType":"YulIdentifier","src":"8001:6:34"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7273:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7284:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7296:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7304:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7312:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7320:6:34","type":""}],"src":"7174:934:34"},{"body":{"nodeType":"YulBlock","src":"8180:263:34","statements":[{"body":{"nodeType":"YulBlock","src":"8226:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8228:77:34"},"nodeType":"YulFunctionCall","src":"8228:79:34"},"nodeType":"YulExpressionStatement","src":"8228:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8201:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"8210:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8197:3:34"},"nodeType":"YulFunctionCall","src":"8197:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"8222:2:34","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8193:3:34"},"nodeType":"YulFunctionCall","src":"8193:32:34"},"nodeType":"YulIf","src":"8190:119:34"},{"nodeType":"YulBlock","src":"8319:117:34","statements":[{"nodeType":"YulVariableDeclaration","src":"8334:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"8348:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8338:6:34","type":""}]},{"nodeType":"YulAssignment","src":"8363:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8398:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"8409:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8394:3:34"},"nodeType":"YulFunctionCall","src":"8394:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8418:7:34"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8373:20:34"},"nodeType":"YulFunctionCall","src":"8373:53:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8363:6:34"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8150:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8161:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8173:6:34","type":""}],"src":"8114:329:34"},{"body":{"nodeType":"YulBlock","src":"8493:105:34","statements":[{"nodeType":"YulAssignment","src":"8503:89:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8518:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"8525:66:34","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8514:3:34"},"nodeType":"YulFunctionCall","src":"8514:78:34"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8503:7:34"}]}]},"name":"cleanup_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8475:5:34","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8485:7:34","type":""}],"src":"8449:149:34"},{"body":{"nodeType":"YulBlock","src":"8667:52:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8684:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8706:5:34"}],"functionName":{"name":"cleanup_t_bytes1","nodeType":"YulIdentifier","src":"8689:16:34"},"nodeType":"YulFunctionCall","src":"8689:23:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8677:6:34"},"nodeType":"YulFunctionCall","src":"8677:36:34"},"nodeType":"YulExpressionStatement","src":"8677:36:34"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8655:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8662:3:34","type":""}],"src":"8604:115:34"},{"body":{"nodeType":"YulBlock","src":"8790:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8807:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8830:5:34"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8812:17:34"},"nodeType":"YulFunctionCall","src":"8812:24:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8800:6:34"},"nodeType":"YulFunctionCall","src":"8800:37:34"},"nodeType":"YulExpressionStatement","src":"8800:37:34"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8778:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8785:3:34","type":""}],"src":"8725:118:34"},{"body":{"nodeType":"YulBlock","src":"8923:40:34","statements":[{"nodeType":"YulAssignment","src":"8934:22:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8950:5:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8944:5:34"},"nodeType":"YulFunctionCall","src":"8944:12:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8934:6:34"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8906:5:34","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8916:6:34","type":""}],"src":"8849:114:34"},{"body":{"nodeType":"YulBlock","src":"9080:73:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9097:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"9102:6:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9090:6:34"},"nodeType":"YulFunctionCall","src":"9090:19:34"},"nodeType":"YulExpressionStatement","src":"9090:19:34"},{"nodeType":"YulAssignment","src":"9118:29:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9137:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"9142:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9133:3:34"},"nodeType":"YulFunctionCall","src":"9133:14:34"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9118:11:34"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9052:3:34","type":""},{"name":"length","nodeType":"YulTypedName","src":"9057:6:34","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9068:11:34","type":""}],"src":"8969:184:34"},{"body":{"nodeType":"YulBlock","src":"9231:60:34","statements":[{"nodeType":"YulAssignment","src":"9241:11:34","value":{"name":"ptr","nodeType":"YulIdentifier","src":"9249:3:34"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9241:4:34"}]},{"nodeType":"YulAssignment","src":"9262:22:34","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9274:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"9279:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9270:3:34"},"nodeType":"YulFunctionCall","src":"9270:14:34"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9262:4:34"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9218:3:34","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"9226:4:34","type":""}],"src":"9159:132:34"},{"body":{"nodeType":"YulBlock","src":"9352:53:34","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9369:3:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9392:5:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9374:17:34"},"nodeType":"YulFunctionCall","src":"9374:24:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9362:6:34"},"nodeType":"YulFunctionCall","src":"9362:37:34"},"nodeType":"YulExpressionStatement","src":"9362:37:34"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9340:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9347:3:34","type":""}],"src":"9297:108:34"},{"body":{"nodeType":"YulBlock","src":"9491:99:34","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9535:6:34"},{"name":"pos","nodeType":"YulIdentifier","src":"9543:3:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9501:33:34"},"nodeType":"YulFunctionCall","src":"9501:46:34"},"nodeType":"YulExpressionStatement","src":"9501:46:34"},{"nodeType":"YulAssignment","src":"9556:28:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9574:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"9579:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9570:3:34"},"nodeType":"YulFunctionCall","src":"9570:14:34"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"9556:10:34"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"9464:6:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9472:3:34","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"9480:10:34","type":""}],"src":"9411:179:34"},{"body":{"nodeType":"YulBlock","src":"9671:38:34","statements":[{"nodeType":"YulAssignment","src":"9681:22:34","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9693:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"9698:4:34","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9689:3:34"},"nodeType":"YulFunctionCall","src":"9689:14:34"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"9681:4:34"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9658:3:34","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"9666:4:34","type":""}],"src":"9596:113:34"},{"body":{"nodeType":"YulBlock","src":"9869:608:34","statements":[{"nodeType":"YulVariableDeclaration","src":"9879:68:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9941:5:34"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9893:47:34"},"nodeType":"YulFunctionCall","src":"9893:54:34"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9883:6:34","type":""}]},{"nodeType":"YulAssignment","src":"9956:93:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10037:3:34"},{"name":"length","nodeType":"YulIdentifier","src":"10042:6:34"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9963:73:34"},"nodeType":"YulFunctionCall","src":"9963:86:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9956:3:34"}]},{"nodeType":"YulVariableDeclaration","src":"10058:71:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10123:5:34"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10073:49:34"},"nodeType":"YulFunctionCall","src":"10073:56:34"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"10062:7:34","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10138:21:34","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"10152:7:34"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"10142:6:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"10228:224:34","statements":[{"nodeType":"YulVariableDeclaration","src":"10242:34:34","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10269:6:34"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10263:5:34"},"nodeType":"YulFunctionCall","src":"10263:13:34"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"10246:13:34","type":""}]},{"nodeType":"YulAssignment","src":"10289:70:34","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"10340:13:34"},{"name":"pos","nodeType":"YulIdentifier","src":"10355:3:34"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10296:43:34"},"nodeType":"YulFunctionCall","src":"10296:63:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10289:3:34"}]},{"nodeType":"YulAssignment","src":"10372:70:34","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10435:6:34"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10382:52:34"},"nodeType":"YulFunctionCall","src":"10382:60:34"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10372:6:34"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10190:1:34"},{"name":"length","nodeType":"YulIdentifier","src":"10193:6:34"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10187:2:34"},"nodeType":"YulFunctionCall","src":"10187:13:34"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10201:18:34","statements":[{"nodeType":"YulAssignment","src":"10203:14:34","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10212:1:34"},{"kind":"number","nodeType":"YulLiteral","src":"10215:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10208:3:34"},"nodeType":"YulFunctionCall","src":"10208:9:34"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10203:1:34"}]}]},"pre":{"nodeType":"YulBlock","src":"10172:14:34","statements":[{"nodeType":"YulVariableDeclaration","src":"10174:10:34","value":{"kind":"number","nodeType":"YulLiteral","src":"10183:1:34","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10178:1:34","type":""}]}]},"src":"10168:284:34"},{"nodeType":"YulAssignment","src":"10461:10:34","value":{"name":"pos","nodeType":"YulIdentifier","src":"10468:3:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10461:3:34"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9848:5:34","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9855:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9864:3:34","type":""}],"src":"9745:732:34"},{"body":{"nodeType":"YulBlock","src":"10837:861:34","statements":[{"nodeType":"YulAssignment","src":"10847:27:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10859:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"10870:3:34","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10855:3:34"},"nodeType":"YulFunctionCall","src":"10855:19:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10847:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10926:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10939:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"10950:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10935:3:34"},"nodeType":"YulFunctionCall","src":"10935:17:34"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulIdentifier","src":"10884:41:34"},"nodeType":"YulFunctionCall","src":"10884:69:34"},"nodeType":"YulExpressionStatement","src":"10884:69:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10974:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"10985:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10970:3:34"},"nodeType":"YulFunctionCall","src":"10970:18:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10994:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"11000:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10990:3:34"},"nodeType":"YulFunctionCall","src":"10990:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10963:6:34"},"nodeType":"YulFunctionCall","src":"10963:48:34"},"nodeType":"YulExpressionStatement","src":"10963:48:34"},{"nodeType":"YulAssignment","src":"11020:86:34","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11092:6:34"},{"name":"tail","nodeType":"YulIdentifier","src":"11101:4:34"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11028:63:34"},"nodeType":"YulFunctionCall","src":"11028:78:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11020:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11127:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"11138:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11123:3:34"},"nodeType":"YulFunctionCall","src":"11123:18:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11147:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"11153:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11143:3:34"},"nodeType":"YulFunctionCall","src":"11143:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11116:6:34"},"nodeType":"YulFunctionCall","src":"11116:48:34"},"nodeType":"YulExpressionStatement","src":"11116:48:34"},{"nodeType":"YulAssignment","src":"11173:86:34","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11245:6:34"},{"name":"tail","nodeType":"YulIdentifier","src":"11254:4:34"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11181:63:34"},"nodeType":"YulFunctionCall","src":"11181:78:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11173:4:34"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11313:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11326:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"11337:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11322:3:34"},"nodeType":"YulFunctionCall","src":"11322:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11269:43:34"},"nodeType":"YulFunctionCall","src":"11269:72:34"},"nodeType":"YulExpressionStatement","src":"11269:72:34"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"11395:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11408:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"11419:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11404:3:34"},"nodeType":"YulFunctionCall","src":"11404:19:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11351:43:34"},"nodeType":"YulFunctionCall","src":"11351:73:34"},"nodeType":"YulExpressionStatement","src":"11351:73:34"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"11478:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11491:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"11502:3:34","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11487:3:34"},"nodeType":"YulFunctionCall","src":"11487:19:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"11434:43:34"},"nodeType":"YulFunctionCall","src":"11434:73:34"},"nodeType":"YulExpressionStatement","src":"11434:73:34"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11528:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"11539:3:34","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11524:3:34"},"nodeType":"YulFunctionCall","src":"11524:19:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11549:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"11555:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11545:3:34"},"nodeType":"YulFunctionCall","src":"11545:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11517:6:34"},"nodeType":"YulFunctionCall","src":"11517:49:34"},"nodeType":"YulExpressionStatement","src":"11517:49:34"},{"nodeType":"YulAssignment","src":"11575:116:34","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"11677:6:34"},{"name":"tail","nodeType":"YulIdentifier","src":"11686:4:34"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11583:93:34"},"nodeType":"YulFunctionCall","src":"11583:108:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11575:4:34"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10761:9:34","type":""},{"name":"value6","nodeType":"YulTypedName","src":"10773:6:34","type":""},{"name":"value5","nodeType":"YulTypedName","src":"10781:6:34","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10789:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10797:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10805:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10813:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10821:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10832:4:34","type":""}],"src":"10483:1215:34"},{"body":{"nodeType":"YulBlock","src":"11802:124:34","statements":[{"nodeType":"YulAssignment","src":"11812:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11824:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"11835:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11820:3:34"},"nodeType":"YulFunctionCall","src":"11820:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11812:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11892:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11905:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"11916:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11901:3:34"},"nodeType":"YulFunctionCall","src":"11901:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11848:43:34"},"nodeType":"YulFunctionCall","src":"11848:71:34"},"nodeType":"YulExpressionStatement","src":"11848:71:34"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11774:9:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11786:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11797:4:34","type":""}],"src":"11704:222:34"},{"body":{"nodeType":"YulBlock","src":"11973:77:34","statements":[{"body":{"nodeType":"YulBlock","src":"12028:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12037:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12040:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12030:6:34"},"nodeType":"YulFunctionCall","src":"12030:12:34"},"nodeType":"YulExpressionStatement","src":"12030:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11996:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12019:5:34"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"12003:15:34"},"nodeType":"YulFunctionCall","src":"12003:22:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11993:2:34"},"nodeType":"YulFunctionCall","src":"11993:33:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11986:6:34"},"nodeType":"YulFunctionCall","src":"11986:41:34"},"nodeType":"YulIf","src":"11983:61:34"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11966:5:34","type":""}],"src":"11932:118:34"},{"body":{"nodeType":"YulBlock","src":"12106:85:34","statements":[{"nodeType":"YulAssignment","src":"12116:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12138:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12125:12:34"},"nodeType":"YulFunctionCall","src":"12125:20:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12116:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12179:5:34"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"12154:24:34"},"nodeType":"YulFunctionCall","src":"12154:31:34"},"nodeType":"YulExpressionStatement","src":"12154:31:34"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12084:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"12092:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12100:5:34","type":""}],"src":"12056:135:34"},{"body":{"nodeType":"YulBlock","src":"12240:79:34","statements":[{"body":{"nodeType":"YulBlock","src":"12297:16:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12306:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12309:1:34","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12299:6:34"},"nodeType":"YulFunctionCall","src":"12299:12:34"},"nodeType":"YulExpressionStatement","src":"12299:12:34"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12263:5:34"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12288:5:34"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"12270:17:34"},"nodeType":"YulFunctionCall","src":"12270:24:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12260:2:34"},"nodeType":"YulFunctionCall","src":"12260:35:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12253:6:34"},"nodeType":"YulFunctionCall","src":"12253:43:34"},"nodeType":"YulIf","src":"12250:63:34"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12233:5:34","type":""}],"src":"12197:122:34"},{"body":{"nodeType":"YulBlock","src":"12377:87:34","statements":[{"nodeType":"YulAssignment","src":"12387:29:34","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12409:6:34"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12396:12:34"},"nodeType":"YulFunctionCall","src":"12396:20:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12387:5:34"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12452:5:34"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"12425:26:34"},"nodeType":"YulFunctionCall","src":"12425:33:34"},"nodeType":"YulExpressionStatement","src":"12425:33:34"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12355:6:34","type":""},{"name":"end","nodeType":"YulTypedName","src":"12363:3:34","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12371:5:34","type":""}],"src":"12325:139:34"},{"body":{"nodeType":"YulBlock","src":"12636:1033:34","statements":[{"body":{"nodeType":"YulBlock","src":"12683:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12685:77:34"},"nodeType":"YulFunctionCall","src":"12685:79:34"},"nodeType":"YulExpressionStatement","src":"12685:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12657:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"12666:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12653:3:34"},"nodeType":"YulFunctionCall","src":"12653:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"12678:3:34","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12649:3:34"},"nodeType":"YulFunctionCall","src":"12649:33:34"},"nodeType":"YulIf","src":"12646:120:34"},{"nodeType":"YulBlock","src":"12776:117:34","statements":[{"nodeType":"YulVariableDeclaration","src":"12791:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"12805:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12795:6:34","type":""}]},{"nodeType":"YulAssignment","src":"12820:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12855:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"12866:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12851:3:34"},"nodeType":"YulFunctionCall","src":"12851:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12875:7:34"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12830:20:34"},"nodeType":"YulFunctionCall","src":"12830:53:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12820:6:34"}]}]},{"nodeType":"YulBlock","src":"12903:118:34","statements":[{"nodeType":"YulVariableDeclaration","src":"12918:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"12932:2:34","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12922:6:34","type":""}]},{"nodeType":"YulAssignment","src":"12948:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12983:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"12994:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12979:3:34"},"nodeType":"YulFunctionCall","src":"12979:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13003:7:34"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12958:20:34"},"nodeType":"YulFunctionCall","src":"12958:53:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12948:6:34"}]}]},{"nodeType":"YulBlock","src":"13031:118:34","statements":[{"nodeType":"YulVariableDeclaration","src":"13046:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"13060:2:34","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13050:6:34","type":""}]},{"nodeType":"YulAssignment","src":"13076:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13111:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"13122:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13107:3:34"},"nodeType":"YulFunctionCall","src":"13107:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13131:7:34"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"13086:20:34"},"nodeType":"YulFunctionCall","src":"13086:53:34"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13076:6:34"}]}]},{"nodeType":"YulBlock","src":"13159:118:34","statements":[{"nodeType":"YulVariableDeclaration","src":"13174:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"13188:2:34","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13178:6:34","type":""}]},{"nodeType":"YulAssignment","src":"13204:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13239:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"13250:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13235:3:34"},"nodeType":"YulFunctionCall","src":"13235:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13259:7:34"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"13214:20:34"},"nodeType":"YulFunctionCall","src":"13214:53:34"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"13204:6:34"}]}]},{"nodeType":"YulBlock","src":"13287:117:34","statements":[{"nodeType":"YulVariableDeclaration","src":"13302:17:34","value":{"kind":"number","nodeType":"YulLiteral","src":"13316:3:34","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13306:6:34","type":""}]},{"nodeType":"YulAssignment","src":"13333:61:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13366:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"13377:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13362:3:34"},"nodeType":"YulFunctionCall","src":"13362:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13386:7:34"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"13343:18:34"},"nodeType":"YulFunctionCall","src":"13343:51:34"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"13333:6:34"}]}]},{"nodeType":"YulBlock","src":"13414:119:34","statements":[{"nodeType":"YulVariableDeclaration","src":"13429:17:34","value":{"kind":"number","nodeType":"YulLiteral","src":"13443:3:34","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13433:6:34","type":""}]},{"nodeType":"YulAssignment","src":"13460:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13495:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"13506:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13491:3:34"},"nodeType":"YulFunctionCall","src":"13491:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13515:7:34"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"13470:20:34"},"nodeType":"YulFunctionCall","src":"13470:53:34"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"13460:6:34"}]}]},{"nodeType":"YulBlock","src":"13543:119:34","statements":[{"nodeType":"YulVariableDeclaration","src":"13558:17:34","value":{"kind":"number","nodeType":"YulLiteral","src":"13572:3:34","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13562:6:34","type":""}]},{"nodeType":"YulAssignment","src":"13589:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13624:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"13635:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13620:3:34"},"nodeType":"YulFunctionCall","src":"13620:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13644:7:34"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"13599:20:34"},"nodeType":"YulFunctionCall","src":"13599:53:34"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"13589:6:34"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12558:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12569:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12581:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12589:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12597:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12605:6:34","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12613:6:34","type":""},{"name":"value5","nodeType":"YulTypedName","src":"12621:6:34","type":""},{"name":"value6","nodeType":"YulTypedName","src":"12629:6:34","type":""}],"src":"12470:1199:34"},{"body":{"nodeType":"YulBlock","src":"13758:391:34","statements":[{"body":{"nodeType":"YulBlock","src":"13804:83:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13806:77:34"},"nodeType":"YulFunctionCall","src":"13806:79:34"},"nodeType":"YulExpressionStatement","src":"13806:79:34"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13779:7:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"13788:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13775:3:34"},"nodeType":"YulFunctionCall","src":"13775:23:34"},{"kind":"number","nodeType":"YulLiteral","src":"13800:2:34","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13771:3:34"},"nodeType":"YulFunctionCall","src":"13771:32:34"},"nodeType":"YulIf","src":"13768:119:34"},{"nodeType":"YulBlock","src":"13897:117:34","statements":[{"nodeType":"YulVariableDeclaration","src":"13912:15:34","value":{"kind":"number","nodeType":"YulLiteral","src":"13926:1:34","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13916:6:34","type":""}]},{"nodeType":"YulAssignment","src":"13941:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13976:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"13987:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13972:3:34"},"nodeType":"YulFunctionCall","src":"13972:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13996:7:34"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13951:20:34"},"nodeType":"YulFunctionCall","src":"13951:53:34"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13941:6:34"}]}]},{"nodeType":"YulBlock","src":"14024:118:34","statements":[{"nodeType":"YulVariableDeclaration","src":"14039:16:34","value":{"kind":"number","nodeType":"YulLiteral","src":"14053:2:34","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14043:6:34","type":""}]},{"nodeType":"YulAssignment","src":"14069:63:34","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14104:9:34"},{"name":"offset","nodeType":"YulIdentifier","src":"14115:6:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14100:3:34"},"nodeType":"YulFunctionCall","src":"14100:22:34"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14124:7:34"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14079:20:34"},"nodeType":"YulFunctionCall","src":"14079:53:34"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14069:6:34"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13720:9:34","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13731:7:34","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13743:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13751:6:34","type":""}],"src":"13675:474:34"},{"body":{"nodeType":"YulBlock","src":"14183:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14200:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14203:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14193:6:34"},"nodeType":"YulFunctionCall","src":"14193:88:34"},"nodeType":"YulExpressionStatement","src":"14193:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14297:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14300:4:34","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14290:6:34"},"nodeType":"YulFunctionCall","src":"14290:15:34"},"nodeType":"YulExpressionStatement","src":"14290:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14321:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14324:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14314:6:34"},"nodeType":"YulFunctionCall","src":"14314:15:34"},"nodeType":"YulExpressionStatement","src":"14314:15:34"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"14155:180:34"},{"body":{"nodeType":"YulBlock","src":"14392:269:34","statements":[{"nodeType":"YulAssignment","src":"14402:22:34","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14416:4:34"},{"kind":"number","nodeType":"YulLiteral","src":"14422:1:34","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14412:3:34"},"nodeType":"YulFunctionCall","src":"14412:12:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14402:6:34"}]},{"nodeType":"YulVariableDeclaration","src":"14433:38:34","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14463:4:34"},{"kind":"number","nodeType":"YulLiteral","src":"14469:1:34","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14459:3:34"},"nodeType":"YulFunctionCall","src":"14459:12:34"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"14437:18:34","type":""}]},{"body":{"nodeType":"YulBlock","src":"14510:51:34","statements":[{"nodeType":"YulAssignment","src":"14524:27:34","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14538:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"14546:4:34","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14534:3:34"},"nodeType":"YulFunctionCall","src":"14534:17:34"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14524:6:34"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14490:18:34"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14483:6:34"},"nodeType":"YulFunctionCall","src":"14483:26:34"},"nodeType":"YulIf","src":"14480:81:34"},{"body":{"nodeType":"YulBlock","src":"14613:42:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"14627:16:34"},"nodeType":"YulFunctionCall","src":"14627:18:34"},"nodeType":"YulExpressionStatement","src":"14627:18:34"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14577:18:34"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14600:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"14608:2:34","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14597:2:34"},"nodeType":"YulFunctionCall","src":"14597:14:34"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14574:2:34"},"nodeType":"YulFunctionCall","src":"14574:38:34"},"nodeType":"YulIf","src":"14571:84:34"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14376:4:34","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"14385:6:34","type":""}],"src":"14341:320:34"},{"body":{"nodeType":"YulBlock","src":"14773:66:34","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14795:6:34"},{"kind":"number","nodeType":"YulLiteral","src":"14803:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14791:3:34"},"nodeType":"YulFunctionCall","src":"14791:14:34"},{"hexValue":"417272617973206c656e677468206d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"14807:24:34","type":"","value":"Arrays length mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14784:6:34"},"nodeType":"YulFunctionCall","src":"14784:48:34"},"nodeType":"YulExpressionStatement","src":"14784:48:34"}]},"name":"store_literal_in_memory_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14765:6:34","type":""}],"src":"14667:172:34"},{"body":{"nodeType":"YulBlock","src":"14991:220:34","statements":[{"nodeType":"YulAssignment","src":"15001:74:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15067:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"15072:2:34","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15008:58:34"},"nodeType":"YulFunctionCall","src":"15008:67:34"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15001:3:34"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15173:3:34"}],"functionName":{"name":"store_literal_in_memory_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c","nodeType":"YulIdentifier","src":"15084:88:34"},"nodeType":"YulFunctionCall","src":"15084:93:34"},"nodeType":"YulExpressionStatement","src":"15084:93:34"},{"nodeType":"YulAssignment","src":"15186:19:34","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15197:3:34"},{"kind":"number","nodeType":"YulLiteral","src":"15202:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15193:3:34"},"nodeType":"YulFunctionCall","src":"15193:12:34"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15186:3:34"}]}]},"name":"abi_encode_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14979:3:34","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14987:3:34","type":""}],"src":"14845:366:34"},{"body":{"nodeType":"YulBlock","src":"15388:248:34","statements":[{"nodeType":"YulAssignment","src":"15398:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15410:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"15421:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15406:3:34"},"nodeType":"YulFunctionCall","src":"15406:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15398:4:34"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15445:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"15456:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15441:3:34"},"nodeType":"YulFunctionCall","src":"15441:17:34"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15464:4:34"},{"name":"headStart","nodeType":"YulIdentifier","src":"15470:9:34"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15460:3:34"},"nodeType":"YulFunctionCall","src":"15460:20:34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15434:6:34"},"nodeType":"YulFunctionCall","src":"15434:47:34"},"nodeType":"YulExpressionStatement","src":"15434:47:34"},{"nodeType":"YulAssignment","src":"15490:139:34","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15624:4:34"}],"functionName":{"name":"abi_encode_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15498:124:34"},"nodeType":"YulFunctionCall","src":"15498:131:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15490:4:34"}]}]},"name":"abi_encode_tuple_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15368:9:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15383:4:34","type":""}],"src":"15217:419:34"},{"body":{"nodeType":"YulBlock","src":"15670:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15687:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15690:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15680:6:34"},"nodeType":"YulFunctionCall","src":"15680:88:34"},"nodeType":"YulExpressionStatement","src":"15680:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15784:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15787:4:34","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15777:6:34"},"nodeType":"YulFunctionCall","src":"15777:15:34"},"nodeType":"YulExpressionStatement","src":"15777:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15808:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15811:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15801:6:34"},"nodeType":"YulFunctionCall","src":"15801:15:34"},"nodeType":"YulExpressionStatement","src":"15801:15:34"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"15642:180:34"},{"body":{"nodeType":"YulBlock","src":"15856:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15873:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15876:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15866:6:34"},"nodeType":"YulFunctionCall","src":"15866:88:34"},"nodeType":"YulExpressionStatement","src":"15866:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15970:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15973:4:34","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15963:6:34"},"nodeType":"YulFunctionCall","src":"15963:15:34"},"nodeType":"YulExpressionStatement","src":"15963:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15994:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15997:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15987:6:34"},"nodeType":"YulFunctionCall","src":"15987:15:34"},"nodeType":"YulExpressionStatement","src":"15987:15:34"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"15828:180:34"},{"body":{"nodeType":"YulBlock","src":"16057:190:34","statements":[{"nodeType":"YulAssignment","src":"16067:33:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16094:5:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16076:17:34"},"nodeType":"YulFunctionCall","src":"16076:24:34"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16067:5:34"}]},{"body":{"nodeType":"YulBlock","src":"16190:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16192:16:34"},"nodeType":"YulFunctionCall","src":"16192:18:34"},"nodeType":"YulExpressionStatement","src":"16192:18:34"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16115:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"16122:66:34","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16112:2:34"},"nodeType":"YulFunctionCall","src":"16112:77:34"},"nodeType":"YulIf","src":"16109:103:34"},{"nodeType":"YulAssignment","src":"16221:20:34","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16232:5:34"},{"kind":"number","nodeType":"YulLiteral","src":"16239:1:34","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16228:3:34"},"nodeType":"YulFunctionCall","src":"16228:13:34"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"16221:3:34"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16043:5:34","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"16053:3:34","type":""}],"src":"16014:233:34"},{"body":{"nodeType":"YulBlock","src":"16281:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16298:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16301:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16291:6:34"},"nodeType":"YulFunctionCall","src":"16291:88:34"},"nodeType":"YulExpressionStatement","src":"16291:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16395:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16398:4:34","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16388:6:34"},"nodeType":"YulFunctionCall","src":"16388:15:34"},"nodeType":"YulExpressionStatement","src":"16388:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16419:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16422:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16412:6:34"},"nodeType":"YulFunctionCall","src":"16412:15:34"},"nodeType":"YulExpressionStatement","src":"16412:15:34"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"16253:180:34"},{"body":{"nodeType":"YulBlock","src":"16677:537:34","statements":[{"nodeType":"YulAssignment","src":"16687:27:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16699:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"16710:3:34","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16695:3:34"},"nodeType":"YulFunctionCall","src":"16695:19:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16687:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16768:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16781:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"16792:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16777:3:34"},"nodeType":"YulFunctionCall","src":"16777:17:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"16724:43:34"},"nodeType":"YulFunctionCall","src":"16724:71:34"},"nodeType":"YulExpressionStatement","src":"16724:71:34"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16849:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16862:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"16873:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16858:3:34"},"nodeType":"YulFunctionCall","src":"16858:18:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16805:43:34"},"nodeType":"YulFunctionCall","src":"16805:72:34"},"nodeType":"YulExpressionStatement","src":"16805:72:34"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16931:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16944:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"16955:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16940:3:34"},"nodeType":"YulFunctionCall","src":"16940:18:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16887:43:34"},"nodeType":"YulFunctionCall","src":"16887:72:34"},"nodeType":"YulExpressionStatement","src":"16887:72:34"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17013:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17026:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"17037:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17022:3:34"},"nodeType":"YulFunctionCall","src":"17022:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16969:43:34"},"nodeType":"YulFunctionCall","src":"16969:72:34"},"nodeType":"YulExpressionStatement","src":"16969:72:34"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"17095:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17108:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"17119:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17104:3:34"},"nodeType":"YulFunctionCall","src":"17104:19:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17051:43:34"},"nodeType":"YulFunctionCall","src":"17051:73:34"},"nodeType":"YulExpressionStatement","src":"17051:73:34"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"17178:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17191:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"17202:3:34","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17187:3:34"},"nodeType":"YulFunctionCall","src":"17187:19:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17134:43:34"},"nodeType":"YulFunctionCall","src":"17134:73:34"},"nodeType":"YulExpressionStatement","src":"17134:73:34"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16609:9:34","type":""},{"name":"value5","nodeType":"YulTypedName","src":"16621:6:34","type":""},{"name":"value4","nodeType":"YulTypedName","src":"16629:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16637:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16645:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16653:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16661:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16672:4:34","type":""}],"src":"16439:775:34"},{"body":{"nodeType":"YulBlock","src":"17346:206:34","statements":[{"nodeType":"YulAssignment","src":"17356:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17368:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"17379:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17364:3:34"},"nodeType":"YulFunctionCall","src":"17364:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17356:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17436:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17449:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"17460:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17445:3:34"},"nodeType":"YulFunctionCall","src":"17445:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17392:43:34"},"nodeType":"YulFunctionCall","src":"17392:71:34"},"nodeType":"YulExpressionStatement","src":"17392:71:34"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17517:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17530:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"17541:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17526:3:34"},"nodeType":"YulFunctionCall","src":"17526:18:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17473:43:34"},"nodeType":"YulFunctionCall","src":"17473:72:34"},"nodeType":"YulExpressionStatement","src":"17473:72:34"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17310:9:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17322:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17330:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17341:4:34","type":""}],"src":"17220:332:34"},{"body":{"nodeType":"YulBlock","src":"17712:288:34","statements":[{"nodeType":"YulAssignment","src":"17722:26:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17734:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"17745:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17730:3:34"},"nodeType":"YulFunctionCall","src":"17730:18:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17722:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17802:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17815:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"17826:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17811:3:34"},"nodeType":"YulFunctionCall","src":"17811:17:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17758:43:34"},"nodeType":"YulFunctionCall","src":"17758:71:34"},"nodeType":"YulExpressionStatement","src":"17758:71:34"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17883:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17896:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"17907:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17892:3:34"},"nodeType":"YulFunctionCall","src":"17892:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17839:43:34"},"nodeType":"YulFunctionCall","src":"17839:72:34"},"nodeType":"YulExpressionStatement","src":"17839:72:34"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17965:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17978:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"17989:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17974:3:34"},"nodeType":"YulFunctionCall","src":"17974:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17921:43:34"},"nodeType":"YulFunctionCall","src":"17921:72:34"},"nodeType":"YulExpressionStatement","src":"17921:72:34"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17668:9:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17680:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17688:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17696:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17707:4:34","type":""}],"src":"17558:442:34"},{"body":{"nodeType":"YulBlock","src":"18050:147:34","statements":[{"nodeType":"YulAssignment","src":"18060:25:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18083:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18065:17:34"},"nodeType":"YulFunctionCall","src":"18065:20:34"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18060:1:34"}]},{"nodeType":"YulAssignment","src":"18094:25:34","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18117:1:34"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18099:17:34"},"nodeType":"YulFunctionCall","src":"18099:20:34"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18094:1:34"}]},{"nodeType":"YulAssignment","src":"18128:16:34","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18139:1:34"},{"name":"y","nodeType":"YulIdentifier","src":"18142:1:34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18135:3:34"},"nodeType":"YulFunctionCall","src":"18135:9:34"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"18128:3:34"}]},{"body":{"nodeType":"YulBlock","src":"18168:22:34","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18170:16:34"},"nodeType":"YulFunctionCall","src":"18170:18:34"},"nodeType":"YulExpressionStatement","src":"18170:18:34"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18160:1:34"},{"name":"sum","nodeType":"YulIdentifier","src":"18163:3:34"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18157:2:34"},"nodeType":"YulFunctionCall","src":"18157:10:34"},"nodeType":"YulIf","src":"18154:36:34"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18037:1:34","type":""},{"name":"y","nodeType":"YulTypedName","src":"18040:1:34","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"18046:3:34","type":""}],"src":"18006:191:34"},{"body":{"nodeType":"YulBlock","src":"18413:454:34","statements":[{"nodeType":"YulAssignment","src":"18423:27:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18435:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"18446:3:34","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18431:3:34"},"nodeType":"YulFunctionCall","src":"18431:19:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18423:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18504:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18517:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"18528:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18513:3:34"},"nodeType":"YulFunctionCall","src":"18513:17:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"18460:43:34"},"nodeType":"YulFunctionCall","src":"18460:71:34"},"nodeType":"YulExpressionStatement","src":"18460:71:34"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18585:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18598:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"18609:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18594:3:34"},"nodeType":"YulFunctionCall","src":"18594:18:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"18541:43:34"},"nodeType":"YulFunctionCall","src":"18541:72:34"},"nodeType":"YulExpressionStatement","src":"18541:72:34"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18667:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18680:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"18691:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18676:3:34"},"nodeType":"YulFunctionCall","src":"18676:18:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"18623:43:34"},"nodeType":"YulFunctionCall","src":"18623:72:34"},"nodeType":"YulExpressionStatement","src":"18623:72:34"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"18749:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18762:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"18773:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18758:3:34"},"nodeType":"YulFunctionCall","src":"18758:18:34"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18705:43:34"},"nodeType":"YulFunctionCall","src":"18705:72:34"},"nodeType":"YulExpressionStatement","src":"18705:72:34"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"18831:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18844:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"18855:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18840:3:34"},"nodeType":"YulFunctionCall","src":"18840:19:34"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18787:43:34"},"nodeType":"YulFunctionCall","src":"18787:73:34"},"nodeType":"YulExpressionStatement","src":"18787:73:34"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18353:9:34","type":""},{"name":"value4","nodeType":"YulTypedName","src":"18365:6:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18373:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18381:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18389:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18397:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18408:4:34","type":""}],"src":"18203:664:34"},{"body":{"nodeType":"YulBlock","src":"19051:367:34","statements":[{"nodeType":"YulAssignment","src":"19061:27:34","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19073:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19084:3:34","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19069:3:34"},"nodeType":"YulFunctionCall","src":"19069:19:34"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19061:4:34"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19142:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19155:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19166:1:34","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19151:3:34"},"nodeType":"YulFunctionCall","src":"19151:17:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"19098:43:34"},"nodeType":"YulFunctionCall","src":"19098:71:34"},"nodeType":"YulExpressionStatement","src":"19098:71:34"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19219:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19232:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19243:2:34","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19228:3:34"},"nodeType":"YulFunctionCall","src":"19228:18:34"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"19179:39:34"},"nodeType":"YulFunctionCall","src":"19179:68:34"},"nodeType":"YulExpressionStatement","src":"19179:68:34"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"19301:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19314:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19325:2:34","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19310:3:34"},"nodeType":"YulFunctionCall","src":"19310:18:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"19257:43:34"},"nodeType":"YulFunctionCall","src":"19257:72:34"},"nodeType":"YulExpressionStatement","src":"19257:72:34"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"19383:6:34"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19396:9:34"},{"kind":"number","nodeType":"YulLiteral","src":"19407:2:34","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19392:3:34"},"nodeType":"YulFunctionCall","src":"19392:18:34"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"19339:43:34"},"nodeType":"YulFunctionCall","src":"19339:72:34"},"nodeType":"YulExpressionStatement","src":"19339:72:34"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18999:9:34","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19011:6:34","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19019:6:34","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19027:6:34","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19035:6:34","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19046:4:34","type":""}],"src":"18873:545:34"},{"body":{"nodeType":"YulBlock","src":"19452:152:34","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19469:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19472:77:34","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19462:6:34"},"nodeType":"YulFunctionCall","src":"19462:88:34"},"nodeType":"YulExpressionStatement","src":"19462:88:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19566:1:34","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19569:4:34","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19559:6:34"},"nodeType":"YulFunctionCall","src":"19559:15:34"},"nodeType":"YulExpressionStatement","src":"19559:15:34"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19590:1:34","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19593:4:34","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19583:6:34"},"nodeType":"YulFunctionCall","src":"19583:15:34"},"nodeType":"YulExpressionStatement","src":"19583:15:34"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"19424:180:34"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Arrays length mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":34,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"4111":[{"length":32,"start":3164}],"4113":[{"length":32,"start":3123}],"4115":[{"length":32,"start":3037}],"4117":[{"length":32,"start":5218}],"4119":[{"length":32,"start":5251}],"4122":[{"length":32,"start":3761}],"4125":[{"length":32,"start":3820}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BF JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x309 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x57915897 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x68573107 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x25D JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x3DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0x46D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1A8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1AD0 JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1A8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1B3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0x4EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x1B8E JUMP JUMPDEST PUSH2 0x505 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1C76 JUMP JUMPDEST PUSH2 0x512 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH2 0x61C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH2 0x642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F3 PUSH2 0x6EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x311 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x1970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x1A8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH2 0x7E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x1FC5 JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH2 0x9B0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3EA SWAP1 PUSH2 0x2034 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x416 SWAP1 PUSH2 0x2034 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x463 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x438 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x463 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x446 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x478 PUSH2 0xA36 JUMP JUMPDEST SWAP1 POP PUSH2 0x485 DUP2 DUP6 DUP6 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4A5 PUSH2 0xA36 JUMP JUMPDEST SWAP1 POP PUSH2 0x4B2 DUP6 DUP3 DUP6 PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x4BD DUP6 DUP6 DUP6 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EA PUSH2 0xBD9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4F7 PUSH2 0xC90 JUMP JUMPDEST PUSH2 0x501 DUP3 DUP3 PUSH2 0xD17 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x50F CALLER DUP3 PUSH2 0xD17 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x51A PUSH2 0xC90 JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x559 SWAP1 PUSH2 0x20B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x5CD JUMPI PUSH2 0x5BA DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x586 JUMPI PUSH2 0x585 PUSH2 0x20D1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x59B SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x5AE JUMPI PUSH2 0x5AD PUSH2 0x20D1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0xD17 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x5C5 SWAP1 PUSH2 0x212F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x565 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x624 PUSH2 0xC90 JUMP JUMPDEST PUSH2 0x62E PUSH1 0x0 PUSH2 0xD99 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x63B DUP3 PUSH2 0xE5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x656 PUSH2 0xEA8 JUMP JUMPDEST PUSH2 0x65E PUSH2 0xEE3 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x67F JUMPI PUSH2 0x67E PUSH2 0x2177 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6AD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x725 SWAP1 PUSH2 0x2034 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x751 SWAP1 PUSH2 0x2034 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x79E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x773 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x79E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x781 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7B0 PUSH2 0xC90 JUMP JUMPDEST PUSH2 0x7BA DUP3 DUP3 PUSH2 0xF1E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7C9 PUSH2 0xA36 JUMP JUMPDEST SWAP1 POP PUSH2 0x7D6 DUP2 DUP6 DUP6 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x826 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81D SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x855 DUP13 PUSH2 0xFA0 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x86B SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x88E DUP3 PUSH2 0xFF7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x89E DUP3 DUP8 DUP8 DUP8 PUSH2 0x1011 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x912 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x909 SWAP3 SWAP2 SWAP1 PUSH2 0x2207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x91D DUP11 DUP11 DUP11 PUSH2 0xA3E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9B8 PUSH2 0xC90 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA21 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA33 DUP2 PUSH2 0xD99 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA4B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1041 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA5C DUP5 DUP5 PUSH2 0x929 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xADF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xACF JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2230 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xADE DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1041 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB57 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4E SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC9 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC0 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBD4 DUP4 DUP4 DUP4 PUSH2 0x1218 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xC55 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xC82 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xC8D JUMP JUMPDEST PUSH2 0xC8A PUSH2 0x143D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC98 PUSH2 0xA36 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCB6 PUSH2 0x6EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD15 JUMPI PUSH2 0xCD9 PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0C SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD89 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD80 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD95 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1218 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEDE PUSH1 0x5 PUSH32 0x0 PUSH2 0x14D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF19 PUSH1 0x6 PUSH32 0x0 PUSH2 0x14D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF90 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF87 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF9C DUP3 PUSH1 0x0 DUP4 PUSH2 0x1218 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100A PUSH2 0x1004 PUSH2 0xBD9 JUMP JUMPDEST DUP4 PUSH2 0x1583 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1023 DUP9 DUP9 DUP9 DUP9 PUSH2 0x15C4 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1033 DUP3 DUP3 PUSH2 0x16B8 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10B3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AA SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1125 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111C SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1212 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1209 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x126A JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x125E SWAP2 SWAP1 PUSH2 0x2267 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x133D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x12F6 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2230 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1386 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x13D3 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1430 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14B8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x229B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x14F0 JUMPI PUSH2 0x14E9 DUP4 PUSH2 0x181C JUMP JUMPDEST SWAP1 POP PUSH2 0x157D JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x14FC SWAP1 PUSH2 0x2034 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1528 SWAP1 PUSH2 0x2034 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1575 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x154A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1575 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1558 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1604 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1629 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22EE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x164B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x169F JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x16AE JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16CC JUMPI PUSH2 0x16CB PUSH2 0x2333 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16DF JUMPI PUSH2 0x16DE PUSH2 0x2333 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1818 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16F9 JUMPI PUSH2 0x16F8 PUSH2 0x2333 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x170C JUMPI PUSH2 0x170B PUSH2 0x2333 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1743 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1757 JUMPI PUSH2 0x1756 PUSH2 0x2333 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x176A JUMPI PUSH2 0x1769 PUSH2 0x2333 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x17AF JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A6 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x17C2 JUMPI PUSH2 0x17C1 PUSH2 0x2333 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x17D5 JUMPI PUSH2 0x17D4 PUSH2 0x2333 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1817 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x180E SWAP2 SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1829 DUP4 PUSH2 0x1890 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1848 JUMPI PUSH2 0x1847 PUSH2 0x2177 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x187A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x18D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x191A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18FF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1942 DUP3 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x194C DUP2 DUP6 PUSH2 0x18EB JUMP JUMPDEST SWAP4 POP PUSH2 0x195C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18FC JUMP JUMPDEST PUSH2 0x1965 DUP2 PUSH2 0x1926 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x198A DUP2 DUP5 PUSH2 0x1937 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C7 DUP3 PUSH2 0x199C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19D7 DUP2 PUSH2 0x19BC JUMP JUMPDEST DUP2 EQ PUSH2 0x19E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19F4 DUP2 PUSH2 0x19CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0D DUP2 PUSH2 0x19FA JUMP JUMPDEST DUP2 EQ PUSH2 0x1A18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A2A DUP2 PUSH2 0x1A04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A47 JUMPI PUSH2 0x1A46 PUSH2 0x1992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A55 DUP6 DUP3 DUP7 ADD PUSH2 0x19E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A66 DUP6 DUP3 DUP7 ADD PUSH2 0x1A1B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A85 DUP2 PUSH2 0x1A70 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AA0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AAF DUP2 PUSH2 0x19FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ACA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AE9 JUMPI PUSH2 0x1AE8 PUSH2 0x1992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF7 DUP7 DUP3 DUP8 ADD PUSH2 0x19E5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B08 DUP7 DUP3 DUP8 ADD PUSH2 0x19E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B19 DUP7 DUP3 DUP8 ADD PUSH2 0x1A1B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B39 DUP2 PUSH2 0x1B23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B54 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B6D DUP2 PUSH2 0x1B5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B88 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BA4 JUMPI PUSH2 0x1BA3 PUSH2 0x1992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BB2 DUP5 DUP3 DUP6 ADD PUSH2 0x1A1B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1BE0 JUMPI PUSH2 0x1BDF PUSH2 0x1BBB JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BFD JUMPI PUSH2 0x1BFC PUSH2 0x1BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1C19 JUMPI PUSH2 0x1C18 PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1C36 JUMPI PUSH2 0x1C35 PUSH2 0x1BBB JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C53 JUMPI PUSH2 0x1C52 PUSH2 0x1BC0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1C6F JUMPI PUSH2 0x1C6E PUSH2 0x1BC5 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C90 JUMPI PUSH2 0x1C8F PUSH2 0x1992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CAE JUMPI PUSH2 0x1CAD PUSH2 0x1997 JUMP JUMPDEST JUMPDEST PUSH2 0x1CBA DUP8 DUP3 DUP9 ADD PUSH2 0x1BCA JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CDD JUMPI PUSH2 0x1CDC PUSH2 0x1997 JUMP JUMPDEST JUMPDEST PUSH2 0x1CE9 DUP8 DUP3 DUP9 ADD PUSH2 0x1C20 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0D JUMPI PUSH2 0x1D0C PUSH2 0x1992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D1B DUP5 DUP3 DUP6 ADD PUSH2 0x19E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D59 DUP2 PUSH2 0x1D24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D68 DUP2 PUSH2 0x19BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA3 DUP2 PUSH2 0x19FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB5 DUP4 DUP4 PUSH2 0x1D9A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD9 DUP3 PUSH2 0x1D6E JUMP JUMPDEST PUSH2 0x1DE3 DUP2 DUP6 PUSH2 0x1D79 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DEE DUP4 PUSH2 0x1D8A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E1F JUMPI DUP2 MLOAD PUSH2 0x1E06 DUP9 DUP3 PUSH2 0x1DA9 JUMP JUMPDEST SWAP8 POP PUSH2 0x1E11 DUP4 PUSH2 0x1DC1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1DF2 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1E41 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1D50 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1E53 DUP2 DUP10 PUSH2 0x1937 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1E67 DUP2 DUP9 PUSH2 0x1937 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E76 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1AA6 JUMP JUMPDEST PUSH2 0x1E83 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0x1E90 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1B64 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1EA2 DUP2 DUP5 PUSH2 0x1DCE JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EC5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ED4 DUP2 PUSH2 0x1B23 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EF1 DUP2 PUSH2 0x1ECB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F00 DUP2 PUSH2 0x1B5A JUMP JUMPDEST DUP2 EQ PUSH2 0x1F0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F1D DUP2 PUSH2 0x1EF7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1F42 JUMPI PUSH2 0x1F41 PUSH2 0x1992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F50 DUP11 DUP3 DUP12 ADD PUSH2 0x19E5 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1F61 DUP11 DUP3 DUP12 ADD PUSH2 0x19E5 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1F72 DUP11 DUP3 DUP12 ADD PUSH2 0x1A1B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1F83 DUP11 DUP3 DUP12 ADD PUSH2 0x1A1B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1F94 DUP11 DUP3 DUP12 ADD PUSH2 0x1EE2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1FA5 DUP11 DUP3 DUP12 ADD PUSH2 0x1F0E JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1FB6 DUP11 DUP3 DUP12 ADD PUSH2 0x1F0E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FDC JUMPI PUSH2 0x1FDB PUSH2 0x1992 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FEA DUP6 DUP3 DUP7 ADD PUSH2 0x19E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FFB DUP6 DUP3 DUP7 ADD PUSH2 0x19E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x204C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x205F JUMPI PUSH2 0x205E PUSH2 0x2005 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x417272617973206C656E677468206D69736D6174636800000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209B PUSH1 0x16 DUP4 PUSH2 0x18EB JUMP JUMPDEST SWAP2 POP PUSH2 0x20A6 DUP3 PUSH2 0x2065 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20CA DUP2 PUSH2 0x208E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x213A DUP3 PUSH2 0x19FA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x216C JUMPI PUSH2 0x216B PUSH2 0x2100 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x21BB PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1B64 JUMP JUMPDEST PUSH2 0x21C8 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0x21D5 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0x21E2 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1AA6 JUMP JUMPDEST PUSH2 0x21EF PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1AA6 JUMP JUMPDEST PUSH2 0x21FC PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1AA6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x221C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0x2229 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D5F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2245 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0x2252 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AA6 JUMP JUMPDEST PUSH2 0x225F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AA6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2272 DUP3 PUSH2 0x19FA JUMP JUMPDEST SWAP2 POP PUSH2 0x227D DUP4 PUSH2 0x19FA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2295 JUMPI PUSH2 0x2294 PUSH2 0x2100 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x22B0 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1B64 JUMP JUMPDEST PUSH2 0x22BD PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1B64 JUMP JUMPDEST PUSH2 0x22CA PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B64 JUMP JUMPDEST PUSH2 0x22D7 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1AA6 JUMP JUMPDEST PUSH2 0x22E4 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1D5F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2303 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1B64 JUMP JUMPDEST PUSH2 0x2310 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B30 JUMP JUMPDEST PUSH2 0x231D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B64 JUMP JUMPDEST PUSH2 0x232A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1B64 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0x5E 0xDE MLOAD 0xD9 0xE8 EXTCODECOPY CALLDATASIZE 0xDA 0xE6 PUSH11 0x2125F7E04B9D00445FD78B 0xB5 0xF8 OR GASLIMIT 0xAE CALLVALUE 0xEA SWAP8 0xCF CHAINID PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"396:1857:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2803:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4680:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;973:98:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2614:112:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1206:95:33;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2168:83;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1473:307;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2933:116:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;2379:143:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5228:557:21;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1935:99:33;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3244:178:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:672:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3455:140:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:6;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;2803:97::-;2855:7;2881:12;;2874:19;;2803:97;:::o;4680:244::-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;973:98:33:-;1031:5;1055:9;;;;;;;;;;;1048:16;;973:98;:::o;2614:112:8:-;2673:7;2699:20;:18;:20::i;:::-;2692:27;;2614:112;:::o;1206:95:33:-;1531:13:0;:11;:13::i;:::-;1277:17:33::1;1283:2;1287:6;1277:5;:17::i;:::-;1206:95:::0;;:::o;2168:83::-;2219:25;2225:10;2237:6;2219:5;:25::i;:::-;2168:83;:::o;1473:307::-;1531:13:0;:11;:13::i;:::-;1609:7:33::1;;:14;;1588:10;;:17;;:35;1580:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1674:9;1669:105;1693:10;;:17;;1689:1;:21;1669:105;;;1731:32;1737:10;;1748:1;1737:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;1752:7;;1760:1;1752:10;;;;;;;:::i;:::-;;;;;;;;1731:5;:32::i;:::-;1712:3;;;;;:::i;:::-;;;;1669:105;;;;1473:307:::0;;;;:::o;2933:116:6:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2379:143:8:-;2470:7;2496:19;2509:5;2496:12;:19::i;:::-;2489:26;;2379:143;;;:::o;5228:557:21:-;5326:13;5353:18;5385:21;5420:15;5449:25;5488:12;5514:27;5617:13;:11;:13::i;:::-;5644:16;:14;:16::i;:::-;5674:13;5709:4;5736:1;5728:10;;5766:1;5752:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5566:212;;;;;;;;;;;;;;;;;;;;;5228:557;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1962:93:6:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;1935:99:33:-;1531:13:0;:11;:13::i;:::-;2008:19:33::1;2014:4;2020:6;2008:5;:19::i;:::-;1935:99:::0;;:::o;3244:178:6:-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;1668:672:8:-;1889:8;1871:15;:26;1867:97;;;1944:8;1920:33;;;;;;;;;;;:::i;:::-;;;;;;;;1867:97;1974:18;1024:95;2033:5;2040:7;2049:5;2056:16;2066:5;2056:9;:16::i;:::-;2074:8;2005:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1995:89;;;;;;1974:110;;2095:12;2110:28;2127:10;2110:16;:28::i;:::-;2095:43;;2149:14;2166:28;2180:4;2186:1;2189;2192;2166:13;:28::i;:::-;2149:45;;2218:5;2208:15;;:6;:15;;;2204:88;;2267:6;2275:5;2246:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2204:88;2302:31;2311:5;2318:7;2327:5;2302:8;:31::i;:::-;1857:483;;;1668:672;;;;;;;:::o;3455:140:6:-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:12:-;709:7;735:10;728:17;;656:96;:::o;8630:128:6:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;10319:476::-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;5297:300::-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;3945:262:21:-;3998:7;4038:11;4021:28;;4029:4;4021:28;;;:63;;;;;4070:14;4053:13;:31;4021:63;4017:184;;;4107:22;4100:29;;;;4017:184;4167:23;:21;:23::i;:::-;4160:30;;3945:262;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7362:208:6:-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;538:107:13:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;6105:126:21:-;6151:13;6183:41;6210:13;6183:5;:26;;:41;;;;:::i;:::-;6176:48;;6105:126;:::o;6557:135::-;6606:13;6638:47;6668:16;6638:8;:29;;:47;;;;:::i;:::-;6631:54;;6557:135;:::o;7888:206:6:-;7977:1;7958:21;;:7;:21;;;7954:89;;8029:1;8002:30;;;;;;;;;;;:::i;:::-;;;;;;;;7954:89;8052:35;8060:7;8077:1;8081:5;8052:7;:35::i;:::-;7888:206;;:::o;759:395:13:-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;5017:176:21:-;5094:7;5120:66;5153:20;:18;:20::i;:::-;5175:10;5120:32;:66::i;:::-;5113:73;;5017:176;;;:::o;6887:260:20:-;6972:7;6992:17;7011:18;7031:16;7051:25;7062:4;7068:1;7071;7074;7051:10;:25::i;:::-;6991:85;;;;;;7086:28;7098:5;7105:8;7086:11;:28::i;:::-;7131:9;7124:16;;;;;6887:260;;;;;;:::o;9605:432:6:-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;4213:179:21:-;4268:7;2079:95;4326:11;4339:14;4355:13;4378:4;4304:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;:::o;3368:267:17:-;3462:13;1390:66;3520:17;;3510:5;3491:46;3487:142;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3487:142;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3368:267;;;;;:::o;3874:374:22:-;3967:14;4049:4;4043:11;4079:10;4074:3;4067:23;4126:15;4119:4;4114:3;4110:14;4103:39;4178:10;4171:4;4166:3;4162:14;4155:34;4227:4;4222:3;4212:20;4202:30;;4018:224;3874:374;;;;:::o;5203:1551:20:-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;7280:532::-;7375:20;7366:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7362:444;7411:7;7362:444;7471:29;7462:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7563:243;;7670:8;7662:17;;7634:46;;;;;;;;;;;:::i;:::-;;;;;;;;7563:243;7710:30;7701:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7697:109;;7786:8;7763:32;;;;;;;;;;;:::i;:::-;;;;;;;;7697:109;7280:532;;;:::o;2078:378:17:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2375:3;2370;2363:16;2415:4;2408;2403:3;2399:14;2392:28;2446:3;2439:10;;;;2078:378;;;:::o;2528:245::-;2589:7;2608:14;2661:4;2652;2625:33;;:40;2608:57;;2688:2;2679:6;:11;2675:69;;;2713:20;;;;;;;;;;;;;;2675:69;2760:6;2753:13;;;2528:245;;;:::o;7:99:34:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1553:117;1662:1;1659;1652:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:117::-;5732:1;5729;5722:12;5746:117;5855:1;5852;5845:12;5869:117;5978:1;5975;5968:12;6009:568;6082:8;6092:6;6142:3;6135:4;6127:6;6123:17;6119:27;6109:122;;6150:79;;:::i;:::-;6109:122;6263:6;6250:20;6240:30;;6293:18;6285:6;6282:30;6279:117;;;6315:79;;:::i;:::-;6279:117;6429:4;6421:6;6417:17;6405:29;;6483:3;6475:4;6467:6;6463:17;6453:8;6449:32;6446:41;6443:128;;;6490:79;;:::i;:::-;6443:128;6009:568;;;;;:::o;6600:::-;6673:8;6683:6;6733:3;6726:4;6718:6;6714:17;6710:27;6700:122;;6741:79;;:::i;:::-;6700:122;6854:6;6841:20;6831:30;;6884:18;6876:6;6873:30;6870:117;;;6906:79;;:::i;:::-;6870:117;7020:4;7012:6;7008:17;6996:29;;7074:3;7066:4;7058:6;7054:17;7044:8;7040:32;7037:41;7034:128;;;7081:79;;:::i;:::-;7034:128;6600:568;;;;;:::o;7174:934::-;7296:6;7304;7312;7320;7369:2;7357:9;7348:7;7344:23;7340:32;7337:119;;;7375:79;;:::i;:::-;7337:119;7523:1;7512:9;7508:17;7495:31;7553:18;7545:6;7542:30;7539:117;;;7575:79;;:::i;:::-;7539:117;7688:80;7760:7;7751:6;7740:9;7736:22;7688:80;:::i;:::-;7670:98;;;;7466:312;7845:2;7834:9;7830:18;7817:32;7876:18;7868:6;7865:30;7862:117;;;7898:79;;:::i;:::-;7862:117;8011:80;8083:7;8074:6;8063:9;8059:22;8011:80;:::i;:::-;7993:98;;;;7788:313;7174:934;;;;;;;:::o;8114:329::-;8173:6;8222:2;8210:9;8201:7;8197:23;8193:32;8190:119;;;8228:79;;:::i;:::-;8190:119;8348:1;8373:53;8418:7;8409:6;8398:9;8394:22;8373:53;:::i;:::-;8363:63;;8319:117;8114:329;;;;:::o;8449:149::-;8485:7;8525:66;8518:5;8514:78;8503:89;;8449:149;;;:::o;8604:115::-;8689:23;8706:5;8689:23;:::i;:::-;8684:3;8677:36;8604:115;;:::o;8725:118::-;8812:24;8830:5;8812:24;:::i;:::-;8807:3;8800:37;8725:118;;:::o;8849:114::-;8916:6;8950:5;8944:12;8934:22;;8849:114;;;:::o;8969:184::-;9068:11;9102:6;9097:3;9090:19;9142:4;9137:3;9133:14;9118:29;;8969:184;;;;:::o;9159:132::-;9226:4;9249:3;9241:11;;9279:4;9274:3;9270:14;9262:22;;9159:132;;;:::o;9297:108::-;9374:24;9392:5;9374:24;:::i;:::-;9369:3;9362:37;9297:108;;:::o;9411:179::-;9480:10;9501:46;9543:3;9535:6;9501:46;:::i;:::-;9579:4;9574:3;9570:14;9556:28;;9411:179;;;;:::o;9596:113::-;9666:4;9698;9693:3;9689:14;9681:22;;9596:113;;;:::o;9745:732::-;9864:3;9893:54;9941:5;9893:54;:::i;:::-;9963:86;10042:6;10037:3;9963:86;:::i;:::-;9956:93;;10073:56;10123:5;10073:56;:::i;:::-;10152:7;10183:1;10168:284;10193:6;10190:1;10187:13;10168:284;;;10269:6;10263:13;10296:63;10355:3;10340:13;10296:63;:::i;:::-;10289:70;;10382:60;10435:6;10382:60;:::i;:::-;10372:70;;10228:224;10215:1;10212;10208:9;10203:14;;10168:284;;;10172:14;10468:3;10461:10;;9869:608;;;9745:732;;;;:::o;10483:1215::-;10832:4;10870:3;10859:9;10855:19;10847:27;;10884:69;10950:1;10939:9;10935:17;10926:6;10884:69;:::i;:::-;11000:9;10994:4;10990:20;10985:2;10974:9;10970:18;10963:48;11028:78;11101:4;11092:6;11028:78;:::i;:::-;11020:86;;11153:9;11147:4;11143:20;11138:2;11127:9;11123:18;11116:48;11181:78;11254:4;11245:6;11181:78;:::i;:::-;11173:86;;11269:72;11337:2;11326:9;11322:18;11313:6;11269:72;:::i;:::-;11351:73;11419:3;11408:9;11404:19;11395:6;11351:73;:::i;:::-;11434;11502:3;11491:9;11487:19;11478:6;11434:73;:::i;:::-;11555:9;11549:4;11545:20;11539:3;11528:9;11524:19;11517:49;11583:108;11686:4;11677:6;11583:108;:::i;:::-;11575:116;;10483:1215;;;;;;;;;;:::o;11704:222::-;11797:4;11835:2;11824:9;11820:18;11812:26;;11848:71;11916:1;11905:9;11901:17;11892:6;11848:71;:::i;:::-;11704:222;;;;:::o;11932:118::-;12003:22;12019:5;12003:22;:::i;:::-;11996:5;11993:33;11983:61;;12040:1;12037;12030:12;11983:61;11932:118;:::o;12056:135::-;12100:5;12138:6;12125:20;12116:29;;12154:31;12179:5;12154:31;:::i;:::-;12056:135;;;;:::o;12197:122::-;12270:24;12288:5;12270:24;:::i;:::-;12263:5;12260:35;12250:63;;12309:1;12306;12299:12;12250:63;12197:122;:::o;12325:139::-;12371:5;12409:6;12396:20;12387:29;;12425:33;12452:5;12425:33;:::i;:::-;12325:139;;;;:::o;12470:1199::-;12581:6;12589;12597;12605;12613;12621;12629;12678:3;12666:9;12657:7;12653:23;12649:33;12646:120;;;12685:79;;:::i;:::-;12646:120;12805:1;12830:53;12875:7;12866:6;12855:9;12851:22;12830:53;:::i;:::-;12820:63;;12776:117;12932:2;12958:53;13003:7;12994:6;12983:9;12979:22;12958:53;:::i;:::-;12948:63;;12903:118;13060:2;13086:53;13131:7;13122:6;13111:9;13107:22;13086:53;:::i;:::-;13076:63;;13031:118;13188:2;13214:53;13259:7;13250:6;13239:9;13235:22;13214:53;:::i;:::-;13204:63;;13159:118;13316:3;13343:51;13386:7;13377:6;13366:9;13362:22;13343:51;:::i;:::-;13333:61;;13287:117;13443:3;13470:53;13515:7;13506:6;13495:9;13491:22;13470:53;:::i;:::-;13460:63;;13414:119;13572:3;13599:53;13644:7;13635:6;13624:9;13620:22;13599:53;:::i;:::-;13589:63;;13543:119;12470:1199;;;;;;;;;;:::o;13675:474::-;13743:6;13751;13800:2;13788:9;13779:7;13775:23;13771:32;13768:119;;;13806:79;;:::i;:::-;13768:119;13926:1;13951:53;13996:7;13987:6;13976:9;13972:22;13951:53;:::i;:::-;13941:63;;13897:117;14053:2;14079:53;14124:7;14115:6;14104:9;14100:22;14079:53;:::i;:::-;14069:63;;14024:118;13675:474;;;;;:::o;14155:180::-;14203:77;14200:1;14193:88;14300:4;14297:1;14290:15;14324:4;14321:1;14314:15;14341:320;14385:6;14422:1;14416:4;14412:12;14402:22;;14469:1;14463:4;14459:12;14490:18;14480:81;;14546:4;14538:6;14534:17;14524:27;;14480:81;14608:2;14600:6;14597:14;14577:18;14574:38;14571:84;;14627:18;;:::i;:::-;14571:84;14392:269;14341:320;;;:::o;14667:172::-;14807:24;14803:1;14795:6;14791:14;14784:48;14667:172;:::o;14845:366::-;14987:3;15008:67;15072:2;15067:3;15008:67;:::i;:::-;15001:74;;15084:93;15173:3;15084:93;:::i;:::-;15202:2;15197:3;15193:12;15186:19;;14845:366;;;:::o;15217:419::-;15383:4;15421:2;15410:9;15406:18;15398:26;;15470:9;15464:4;15460:20;15456:1;15445:9;15441:17;15434:47;15498:131;15624:4;15498:131;:::i;:::-;15490:139;;15217:419;;;:::o;15642:180::-;15690:77;15687:1;15680:88;15787:4;15784:1;15777:15;15811:4;15808:1;15801:15;15828:180;15876:77;15873:1;15866:88;15973:4;15970:1;15963:15;15997:4;15994:1;15987:15;16014:233;16053:3;16076:24;16094:5;16076:24;:::i;:::-;16067:33;;16122:66;16115:5;16112:77;16109:103;;16192:18;;:::i;:::-;16109:103;16239:1;16232:5;16228:13;16221:20;;16014:233;;;:::o;16253:180::-;16301:77;16298:1;16291:88;16398:4;16395:1;16388:15;16422:4;16419:1;16412:15;16439:775;16672:4;16710:3;16699:9;16695:19;16687:27;;16724:71;16792:1;16781:9;16777:17;16768:6;16724:71;:::i;:::-;16805:72;16873:2;16862:9;16858:18;16849:6;16805:72;:::i;:::-;16887;16955:2;16944:9;16940:18;16931:6;16887:72;:::i;:::-;16969;17037:2;17026:9;17022:18;17013:6;16969:72;:::i;:::-;17051:73;17119:3;17108:9;17104:19;17095:6;17051:73;:::i;:::-;17134;17202:3;17191:9;17187:19;17178:6;17134:73;:::i;:::-;16439:775;;;;;;;;;:::o;17220:332::-;17341:4;17379:2;17368:9;17364:18;17356:26;;17392:71;17460:1;17449:9;17445:17;17436:6;17392:71;:::i;:::-;17473:72;17541:2;17530:9;17526:18;17517:6;17473:72;:::i;:::-;17220:332;;;;;:::o;17558:442::-;17707:4;17745:2;17734:9;17730:18;17722:26;;17758:71;17826:1;17815:9;17811:17;17802:6;17758:71;:::i;:::-;17839:72;17907:2;17896:9;17892:18;17883:6;17839:72;:::i;:::-;17921;17989:2;17978:9;17974:18;17965:6;17921:72;:::i;:::-;17558:442;;;;;;:::o;18006:191::-;18046:3;18065:20;18083:1;18065:20;:::i;:::-;18060:25;;18099:20;18117:1;18099:20;:::i;:::-;18094:25;;18142:1;18139;18135:9;18128:16;;18163:3;18160:1;18157:10;18154:36;;;18170:18;;:::i;:::-;18154:36;18006:191;;;;:::o;18203:664::-;18408:4;18446:3;18435:9;18431:19;18423:27;;18460:71;18528:1;18517:9;18513:17;18504:6;18460:71;:::i;:::-;18541:72;18609:2;18598:9;18594:18;18585:6;18541:72;:::i;:::-;18623;18691:2;18680:9;18676:18;18667:6;18623:72;:::i;:::-;18705;18773:2;18762:9;18758:18;18749:6;18705:72;:::i;:::-;18787:73;18855:3;18844:9;18840:19;18831:6;18787:73;:::i;:::-;18203:664;;;;;;;;:::o;18873:545::-;19046:4;19084:3;19073:9;19069:19;19061:27;;19098:71;19166:1;19155:9;19151:17;19142:6;19098:71;:::i;:::-;19179:68;19243:2;19232:9;19228:18;19219:6;19179:68;:::i;:::-;19257:72;19325:2;19314:9;19310:18;19301:6;19257:72;:::i;:::-;19339;19407:2;19396:9;19392:18;19383:6;19339:72;:::i;:::-;18873:545;;;;;;;:::o;19424:180::-;19472:77;19469:1;19462:88;19569:4;19566:1;19559:15;19593:4;19590:1;19583:15"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","batchMint(address[],uint256[])":"68573107","burn(address,uint256)":"9dc29fac","decimals()":"313ce567","eip712Domain()":"84b0196e","faucet(uint256)":"57915897","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"faucet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Includes mint function for easy test setup\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"batchMint(address[],uint256[])\":{\"params\":{\"amounts\":\"Array of amounts to mint\",\"recipients\":\"Array of recipient addresses\"}},\"burn(address,uint256)\":{\"params\":{\"amount\":\"Amount to burn\",\"from\":\"Address to burn from\"}},\"constructor\":{\"params\":{\"decimals_\":\"Token decimals\",\"name\":\"Token name\",\"owner\":\"Token owner\",\"symbol\":\"Token symbol\"}},\"decimals()\":{\"returns\":{\"_0\":\"Number of decimals\"}},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"faucet(uint256)\":{\"params\":{\"amount\":\"Amount to mint to caller\"}},\"mint(address,uint256)\":{\"params\":{\"amount\":\"Amount to mint\",\"to\":\"Address to mint to\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"MockERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchMint(address[],uint256[])\":{\"notice\":\"Mint tokens to multiple addresses\"},\"burn(address,uint256)\":{\"notice\":\"Burn tokens from an address (for testing)\"},\"constructor\":{\"notice\":\"Constructor\"},\"decimals()\":{\"notice\":\"Override decimals function\"},\"faucet(uint256)\":{\"notice\":\"Faucet function for easy testing (anyone can call)\"},\"mint(address,uint256)\":{\"notice\":\"Mint tokens to an address\"}},\"notice\":\"Mock ERC20 token with permit functionality for testing MicroSave\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockERC20.sol\":\"MockERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xecd08ad8132d88a5fcfd50f76a18583004fcdab4c33fb86343903ae420ca5a2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02422dce2e5305624e5cec644add1baa44bfa98ea131bf6030069089a2f56ca4\",\"dweb:/ipfs/QmcsSUkX7AYXNZE18LYE6JEmv8zZcCZvKfbUm9cSzNQyNo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/mocks/MockERC20.sol\":{\"keccak256\":\"0x7bee2c8cde8494a1218e4c4554a2dca973df391c647291097855da1d64cb62b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eecc21fef3a199734363bfb78ef1a480024d5258d490188b7ef43d4789539e03\",\"dweb:/ipfs/QmY7TdfJYR4SK954F6K8WDK423n9QLp8FRcbeWVPvGz85V\"]}},\"version\":1}"}}}}}